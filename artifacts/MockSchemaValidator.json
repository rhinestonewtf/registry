{
  "abi": [
    {
      "type": "constructor",
      "inputs": [{ "name": "ret", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        { "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "validateSchema",
      "inputs": [
        {
          "name": "attestation",
          "type": "tuple",
          "internalType": "struct AttestationRecord",
          "components": [
            { "name": "time", "type": "uint48", "internalType": "uint48" },
            {
              "name": "expirationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "revocationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "moduleTypes",
              "type": "uint32",
              "internalType": "PackedModuleTypes"
            },
            {
              "name": "moduleAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "dataPointer",
              "type": "address",
              "internalType": "AttestationDataRef"
            },
            {
              "name": "schemaUID",
              "type": "bytes32",
              "internalType": "SchemaUID"
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "validateSchema",
      "inputs": [
        {
          "name": "attestations",
          "type": "tuple[]",
          "internalType": "struct AttestationRecord[]",
          "components": [
            { "name": "time", "type": "uint48", "internalType": "uint48" },
            {
              "name": "expirationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "revocationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "moduleTypes",
              "type": "uint32",
              "internalType": "PackedModuleTypes"
            },
            {
              "name": "moduleAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "dataPointer",
              "type": "address",
              "internalType": "AttestationDataRef"
            },
            {
              "name": "schemaUID",
              "type": "bytes32",
              "internalType": "SchemaUID"
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561000f575f80fd5b5060405161025d38038061025d83398101604081905261002e91610038565b151560805261005e565b5f60208284031215610048575f80fd5b81518015158114610057575f80fd5b9392505050565b6080516101e261007b5f395f8181607b015260ad01526101e25ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c806301ffc9a7146100435780637949978f1461006a578063cb6ec8261461009d575b5f80fd5b6100566100513660046100f8565b6100d2565b604051901515815260200160405180910390f35b610056610078366004610126565b507f000000000000000000000000000000000000000000000000000000000000000090565b6100566100ab36600461013d565b7f000000000000000000000000000000000000000000000000000000000000000092915050565b5f634dd8a05760e01b6001600160e01b03198316016100f357506001919050565b919050565b5f60208284031215610108575f80fd5b81356001600160e01b03198116811461011f575f80fd5b9392505050565b5f6101008284031215610137575f80fd5b50919050565b5f806020838503121561014e575f80fd5b823567ffffffffffffffff80821115610165575f80fd5b818501915085601f830112610178575f80fd5b813581811115610186575f80fd5b8660208260081b850101111561019a575f80fd5b6020929092019691955090935050505056fea2646970667358221220a61ad82b94a5123256c37418f13c941b73559f33e016ae20e29598398d92898864736f6c63430008180033",
    "sourceMap": "117:615:97:-:0;;;211:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;243:15;;;;117:615;;14:277:98;81:6;134:2;122:9;113:7;109:23;105:32;102:52;;;150:1;147;140:12;102:52;182:9;176:16;235:5;228:13;221:21;214:5;211:32;201:60;;257:1;254;247:12;201:60;280:5;14:277;-1:-1:-1;;;14:277:98:o;:::-;117:615:97;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561000f575f80fd5b506004361061003f575f3560e01c806301ffc9a7146100435780637949978f1461006a578063cb6ec8261461009d575b5f80fd5b6100566100513660046100f8565b6100d2565b604051901515815260200160405180910390f35b610056610078366004610126565b507f000000000000000000000000000000000000000000000000000000000000000090565b6100566100ab36600461013d565b7f000000000000000000000000000000000000000000000000000000000000000092915050565b5f634dd8a05760e01b6001600160e01b03198316016100f357506001919050565b919050565b5f60208284031215610108575f80fd5b81356001600160e01b03198116811461011f575f80fd5b9392505050565b5f6101008284031215610137575f80fd5b50919050565b5f806020838503121561014e575f80fd5b823567ffffffffffffffff80821115610165575f80fd5b818501915085601f830112610178575f80fd5b813581811115610186575f80fd5b8660208260081b850101111561019a575f80fd5b6020929092019691955090935050505056fea2646970667358221220a61ad82b94a5123256c37418f13c941b73559f33e016ae20e29598398d92898864736f6c63430008180033",
    "sourceMap": "117:615:97:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;271:174;;;;;;:::i;:::-;;:::i;:::-;;;470:14:98;;463:22;445:41;;433:2;418:18;271:174:97;;;;;;;451:135;;;;;;:::i;:::-;-1:-1:-1;570:9:97;;451:135;592:138;;;;;;:::i;:::-;714:9;592:138;;;;;271:174;348:4;-1:-1:-1;;;;;;;;;368:57:97;;;364:74;;-1:-1:-1;434:4:97;;271:174;-1:-1:-1;271:174:97:o;364:74::-;271:174;;;:::o;14:286:98:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:98;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:98:o;497:205::-;594:6;647:3;635:9;626:7;622:23;618:33;615:53;;;664:1;661;654:12;615:53;-1:-1:-1;687:9:98;497:205;-1:-1:-1;497:205:98:o;707:653::-;831:6;839;892:2;880:9;871:7;867:23;863:32;860:52;;;908:1;905;898:12;860:52;948:9;935:23;977:18;1018:2;1010:6;1007:14;1004:34;;;1034:1;1031;1024:12;1004:34;1072:6;1061:9;1057:22;1047:32;;1117:7;1110:4;1106:2;1102:13;1098:27;1088:55;;1139:1;1136;1129:12;1088:55;1179:2;1166:16;1205:2;1197:6;1194:14;1191:34;;;1221:1;1218;1211:12;1191:34;1274:7;1269:2;1259:6;1256:1;1252:14;1248:2;1244:23;1240:32;1237:45;1234:65;;;1295:1;1292;1285:12;1234:65;1326:2;1318:11;;;;;1348:6;;-1:-1:-1;707:653:98;;-1:-1:-1;;;;707:653:98:o",
    "linkReferences": {},
    "immutableReferences": {
      "64046": [
        { "start": 123, "length": 32 },
        { "start": 173, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "supportsInterface(bytes4)": "01ffc9a7",
    "validateSchema((uint48,uint48,uint48,uint32,address,address,address,bytes32))": "7949978f",
    "validateSchema((uint48,uint48,uint48,uint32,address,address,address,bytes32)[])": "cb6ec826"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"ret\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"time\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"expirationTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"revocationTime\",\"type\":\"uint48\"},{\"internalType\":\"PackedModuleTypes\",\"name\":\"moduleTypes\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"AttestationDataRef\",\"name\":\"dataPointer\",\"type\":\"address\"},{\"internalType\":\"SchemaUID\",\"name\":\"schemaUID\",\"type\":\"bytes32\"}],\"internalType\":\"struct AttestationRecord\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"validateSchema\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"time\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"expirationTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"revocationTime\",\"type\":\"uint48\"},{\"internalType\":\"PackedModuleTypes\",\"name\":\"moduleTypes\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"AttestationDataRef\",\"name\":\"dataPointer\",\"type\":\"address\"},{\"internalType\":\"SchemaUID\",\"name\":\"schemaUID\",\"type\":\"bytes32\"}],\"internalType\":\"struct AttestationRecord[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"}],\"name\":\"validateSchema\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"validateSchema((uint48,uint48,uint48,uint32,address,address,address,bytes32))\":{\"notice\":\"Validates an attestation request.\"},\"validateSchema((uint48,uint48,uint48,uint32,address,address,address,bytes32)[])\":{\"notice\":\"Validates an array of attestation requests.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/mocks/MockSchemaValidator.sol\":\"MockSchemaValidator\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":account-abstraction-v0.6/=node_modules/account-abstraction-v0.6/contracts/\",\":account-abstraction/=node_modules/account-abstraction/contracts/\",\":ds-test/=node_modules/ds-test/src/\",\":erc4337-validation/=node_modules/@rhinestone/erc4337-validation/src/\",\":forge-std/=node_modules/forge-std/src/\",\":solady/=node_modules/solady/src/\",\":solmate/=node_modules/solmate/src/\"]},\"sources\":{\"node_modules/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"src/DataTypes.sol\":{\"keccak256\":\"0x17a21d96dbda1704f888f46565731cc676d5fd4d989ea6819a87a8fb0895c47b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://91c12e4dc5254821d3ac965369b40656242d90e098a6ecc1e721d6dcf61e64fc\",\"dweb:/ipfs/Qma78sqHvpP7AFj2gKAQe2z4Na3nxT5NRtaSuEJGezDyN8\"]},\"src/external/IExternalResolver.sol\":{\"keccak256\":\"0x258211aa342cdcde51952e0f523136b71d320a2208a7873b03d0c6c210776d5f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3406f08574205e786e228c0126d06d78ffb3d8724efa6344a18675eef61e9077\",\"dweb:/ipfs/QmZTZEY5eWmBq6ho6F75UGJ7VYuh2JwJiuQfUXGPrJD7JK\"]},\"src/external/IExternalSchemaValidator.sol\":{\"keccak256\":\"0xeaefb6118769085ca0de5b3048e5b4a8f860f99d4361008b4220195f603e4bd2\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d8a12afbc6a3a453d5810b67d775d9cb24bc52d1fc2843625910576285257526\",\"dweb:/ipfs/QmXDcULeqy7VSXitbyrYcr32Bt7msuv7krG7g5u1nuCJx2\"]},\"test/mocks/MockSchemaValidator.sol\":{\"keccak256\":\"0xcd52f3bc690bca76cbf8f810d5f236f91953a18d35f1a9d902100fcfee63b01f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://13d824cf7b33c51f6c6055a00993ec56b960201fc4abb37d6dd68041090ee88d\",\"dweb:/ipfs/QmVe4hYRgCpTSYTdqVDVo5TXGFTyLUSX3sbms8E4AK966v\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.24+commit.e11b9ed9" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [{ "internalType": "bool", "name": "ret", "type": "bool" }],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct AttestationRecord",
              "name": "attestation",
              "type": "tuple",
              "components": [
                { "internalType": "uint48", "name": "time", "type": "uint48" },
                {
                  "internalType": "uint48",
                  "name": "expirationTime",
                  "type": "uint48"
                },
                {
                  "internalType": "uint48",
                  "name": "revocationTime",
                  "type": "uint48"
                },
                {
                  "internalType": "PackedModuleTypes",
                  "name": "moduleTypes",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "AttestationDataRef",
                  "name": "dataPointer",
                  "type": "address"
                },
                {
                  "internalType": "SchemaUID",
                  "name": "schemaUID",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "validateSchema",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct AttestationRecord[]",
              "name": "attestations",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint48", "name": "time", "type": "uint48" },
                {
                  "internalType": "uint48",
                  "name": "expirationTime",
                  "type": "uint48"
                },
                {
                  "internalType": "uint48",
                  "name": "revocationTime",
                  "type": "uint48"
                },
                {
                  "internalType": "PackedModuleTypes",
                  "name": "moduleTypes",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "AttestationDataRef",
                  "name": "dataPointer",
                  "type": "address"
                },
                {
                  "internalType": "SchemaUID",
                  "name": "schemaUID",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "validateSchema",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        }
      ],
      "devdoc": { "kind": "dev", "methods": {}, "version": 1 },
      "userdoc": {
        "kind": "user",
        "methods": {
          "validateSchema((uint48,uint48,uint48,uint32,address,address,address,bytes32))": {
            "notice": "Validates an attestation request."
          },
          "validateSchema((uint48,uint48,uint48,uint32,address,address,address,bytes32)[])": {
            "notice": "Validates an array of attestation requests."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "account-abstraction-v0.6/=node_modules/account-abstraction-v0.6/contracts/",
        "account-abstraction/=node_modules/account-abstraction/contracts/",
        "ds-test/=node_modules/ds-test/src/",
        "erc4337-validation/=node_modules/@rhinestone/erc4337-validation/src/",
        "forge-std/=node_modules/forge-std/src/",
        "solady/=node_modules/solady/src/",
        "solmate/=node_modules/solmate/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": {
        "test/mocks/MockSchemaValidator.sol": "MockSchemaValidator"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "node_modules/forge-std/src/interfaces/IERC165.sol": {
        "keccak256": "0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600",
        "urls": [
          "bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc",
          "dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT"
        ],
        "license": "MIT"
      },
      "src/DataTypes.sol": {
        "keccak256": "0x17a21d96dbda1704f888f46565731cc676d5fd4d989ea6819a87a8fb0895c47b",
        "urls": [
          "bzz-raw://91c12e4dc5254821d3ac965369b40656242d90e098a6ecc1e721d6dcf61e64fc",
          "dweb:/ipfs/Qma78sqHvpP7AFj2gKAQe2z4Na3nxT5NRtaSuEJGezDyN8"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/external/IExternalResolver.sol": {
        "keccak256": "0x258211aa342cdcde51952e0f523136b71d320a2208a7873b03d0c6c210776d5f",
        "urls": [
          "bzz-raw://3406f08574205e786e228c0126d06d78ffb3d8724efa6344a18675eef61e9077",
          "dweb:/ipfs/QmZTZEY5eWmBq6ho6F75UGJ7VYuh2JwJiuQfUXGPrJD7JK"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/external/IExternalSchemaValidator.sol": {
        "keccak256": "0xeaefb6118769085ca0de5b3048e5b4a8f860f99d4361008b4220195f603e4bd2",
        "urls": [
          "bzz-raw://d8a12afbc6a3a453d5810b67d775d9cb24bc52d1fc2843625910576285257526",
          "dweb:/ipfs/QmXDcULeqy7VSXitbyrYcr32Bt7msuv7krG7g5u1nuCJx2"
        ],
        "license": "AGPL-3.0-only"
      },
      "test/mocks/MockSchemaValidator.sol": {
        "keccak256": "0xcd52f3bc690bca76cbf8f810d5f236f91953a18d35f1a9d902100fcfee63b01f",
        "urls": [
          "bzz-raw://13d824cf7b33c51f6c6055a00993ec56b960201fc4abb37d6dd68041090ee88d",
          "dweb:/ipfs/QmVe4hYRgCpTSYTdqVDVo5TXGFTyLUSX3sbms8E4AK966v"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "id": 97
}
