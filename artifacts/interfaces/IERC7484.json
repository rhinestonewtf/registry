{
  "abi": [
    {
      "type": "function",
      "name": "check",
      "inputs": [
        { "name": "module", "type": "address", "internalType": "address" },
        {
          "name": "attesters",
          "type": "address[]",
          "internalType": "address[]"
        },
        { "name": "threshold", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "check",
      "inputs": [
        { "name": "module", "type": "address", "internalType": "address" },
        {
          "name": "moduleType",
          "type": "uint256",
          "internalType": "ModuleType"
        },
        {
          "name": "attesters",
          "type": "address[]",
          "internalType": "address[]"
        },
        { "name": "threshold", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "check",
      "inputs": [
        { "name": "module", "type": "address", "internalType": "address" },
        {
          "name": "moduleType",
          "type": "uint256",
          "internalType": "ModuleType"
        }
      ],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "check",
      "inputs": [
        { "name": "module", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "checkForAccount",
      "inputs": [
        {
          "name": "smartAccount",
          "type": "address",
          "internalType": "address"
        },
        { "name": "module", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "checkForAccount",
      "inputs": [
        {
          "name": "smartAccount",
          "type": "address",
          "internalType": "address"
        },
        { "name": "module", "type": "address", "internalType": "address" },
        {
          "name": "moduleType",
          "type": "uint256",
          "internalType": "ModuleType"
        }
      ],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "trustAttesters",
      "inputs": [
        { "name": "threshold", "type": "uint8", "internalType": "uint8" },
        {
          "name": "attesters",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "NewTrustedAttesters",
      "inputs": [
        {
          "name": "smartAccount",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    }
  ],
  "bytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} },
  "deployedBytecode": { "object": "0x", "sourceMap": "", "linkReferences": {} },
  "methodIdentifiers": {
    "check(address)": "c23697a8",
    "check(address,address[],uint256)": "0bb30abc",
    "check(address,uint256)": "96fb7217",
    "check(address,uint256,address[],uint256)": "2ed94467",
    "checkForAccount(address,address)": "4c13560c",
    "checkForAccount(address,address,uint256)": "529562a1",
    "trustAttesters(uint8,address[])": "f05c04e1"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"smartAccount\",\"type\":\"address\"}],\"name\":\"NewTrustedAttesters\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"attesters\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"check\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"ModuleType\",\"name\":\"moduleType\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"attesters\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"check\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"ModuleType\",\"name\":\"moduleType\",\"type\":\"uint256\"}],\"name\":\"check\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"check\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartAccount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"checkForAccount\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartAccount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"ModuleType\",\"name\":\"moduleType\",\"type\":\"uint256\"}],\"name\":\"checkForAccount\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"threshold\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"attesters\",\"type\":\"address[]\"}],\"name\":\"trustAttesters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"trustAttesters(uint8,address[])\":{\"details\":\"this function reverts, if address(0), or duplicates are provided in attesters[]\",\"params\":{\"attesters\":\"The addresses of the attesters to be trusted.\",\"threshold\":\"The minimum number of attestations required for a module                  to be considered secure.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"trustAttesters(uint8,address[])\":{\"notice\":\"Allows Smart Accounts - the end users of the registry - to appoint one or many attesters as trusted.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IERC7484.sol\":\"IERC7484\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":account-abstraction-v0.6/=node_modules/account-abstraction-v0.6/contracts/\",\":account-abstraction/=node_modules/account-abstraction/contracts/\",\":ds-test/=node_modules/ds-test/src/\",\":erc4337-validation/=node_modules/@rhinestone/erc4337-validation/src/\",\":forge-std/=node_modules/forge-std/src/\",\":solady/=node_modules/solady/src/\",\":solmate/=node_modules/solmate/src/\"]},\"sources\":{\"node_modules/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"src/DataTypes.sol\":{\"keccak256\":\"0x17a21d96dbda1704f888f46565731cc676d5fd4d989ea6819a87a8fb0895c47b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://91c12e4dc5254821d3ac965369b40656242d90e098a6ecc1e721d6dcf61e64fc\",\"dweb:/ipfs/Qma78sqHvpP7AFj2gKAQe2z4Na3nxT5NRtaSuEJGezDyN8\"]},\"src/external/IExternalResolver.sol\":{\"keccak256\":\"0x258211aa342cdcde51952e0f523136b71d320a2208a7873b03d0c6c210776d5f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3406f08574205e786e228c0126d06d78ffb3d8724efa6344a18675eef61e9077\",\"dweb:/ipfs/QmZTZEY5eWmBq6ho6F75UGJ7VYuh2JwJiuQfUXGPrJD7JK\"]},\"src/external/IExternalSchemaValidator.sol\":{\"keccak256\":\"0xeaefb6118769085ca0de5b3048e5b4a8f860f99d4361008b4220195f603e4bd2\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d8a12afbc6a3a453d5810b67d775d9cb24bc52d1fc2843625910576285257526\",\"dweb:/ipfs/QmXDcULeqy7VSXitbyrYcr32Bt7msuv7krG7g5u1nuCJx2\"]},\"src/interfaces/IERC7484.sol\":{\"keccak256\":\"0xaffbc0cff08e0bd99e1d3d338829ee7b7a1fed9cb25fc949b21c150111a9084a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7860e358c9dc537250107b07821ebc5eb7fcf4b014a67100ca15957c842fca2\",\"dweb:/ipfs/QmSWjcQewHnTJDCdDdMWYBfc6tgkcX9DmkDUwsg8xNqMCF\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.24+commit.e11b9ed9" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "smartAccount",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewTrustedAttesters",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "module", "type": "address" },
            {
              "internalType": "address[]",
              "name": "attesters",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "check"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "module", "type": "address" },
            {
              "internalType": "ModuleType",
              "name": "moduleType",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "attesters",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "check"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "module", "type": "address" },
            {
              "internalType": "ModuleType",
              "name": "moduleType",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "check"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "module", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "check"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "smartAccount",
              "type": "address"
            },
            { "internalType": "address", "name": "module", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkForAccount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "smartAccount",
              "type": "address"
            },
            { "internalType": "address", "name": "module", "type": "address" },
            {
              "internalType": "ModuleType",
              "name": "moduleType",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkForAccount"
        },
        {
          "inputs": [
            { "internalType": "uint8", "name": "threshold", "type": "uint8" },
            {
              "internalType": "address[]",
              "name": "attesters",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "trustAttesters"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "trustAttesters(uint8,address[])": {
            "details": "this function reverts, if address(0), or duplicates are provided in attesters[]",
            "params": {
              "attesters": "The addresses of the attesters to be trusted.",
              "threshold": "The minimum number of attestations required for a module                  to be considered secure."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "trustAttesters(uint8,address[])": {
            "notice": "Allows Smart Accounts - the end users of the registry - to appoint one or many attesters as trusted."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "account-abstraction-v0.6/=node_modules/account-abstraction-v0.6/contracts/",
        "account-abstraction/=node_modules/account-abstraction/contracts/",
        "ds-test/=node_modules/ds-test/src/",
        "erc4337-validation/=node_modules/@rhinestone/erc4337-validation/src/",
        "forge-std/=node_modules/forge-std/src/",
        "solady/=node_modules/solady/src/",
        "solmate/=node_modules/solmate/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/interfaces/IERC7484.sol": "IERC7484" },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "node_modules/forge-std/src/interfaces/IERC165.sol": {
        "keccak256": "0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600",
        "urls": [
          "bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc",
          "dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT"
        ],
        "license": "MIT"
      },
      "src/DataTypes.sol": {
        "keccak256": "0x17a21d96dbda1704f888f46565731cc676d5fd4d989ea6819a87a8fb0895c47b",
        "urls": [
          "bzz-raw://91c12e4dc5254821d3ac965369b40656242d90e098a6ecc1e721d6dcf61e64fc",
          "dweb:/ipfs/Qma78sqHvpP7AFj2gKAQe2z4Na3nxT5NRtaSuEJGezDyN8"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/external/IExternalResolver.sol": {
        "keccak256": "0x258211aa342cdcde51952e0f523136b71d320a2208a7873b03d0c6c210776d5f",
        "urls": [
          "bzz-raw://3406f08574205e786e228c0126d06d78ffb3d8724efa6344a18675eef61e9077",
          "dweb:/ipfs/QmZTZEY5eWmBq6ho6F75UGJ7VYuh2JwJiuQfUXGPrJD7JK"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/external/IExternalSchemaValidator.sol": {
        "keccak256": "0xeaefb6118769085ca0de5b3048e5b4a8f860f99d4361008b4220195f603e4bd2",
        "urls": [
          "bzz-raw://d8a12afbc6a3a453d5810b67d775d9cb24bc52d1fc2843625910576285257526",
          "dweb:/ipfs/QmXDcULeqy7VSXitbyrYcr32Bt7msuv7krG7g5u1nuCJx2"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/IERC7484.sol": {
        "keccak256": "0xaffbc0cff08e0bd99e1d3d338829ee7b7a1fed9cb25fc949b21c150111a9084a",
        "urls": [
          "bzz-raw://f7860e358c9dc537250107b07821ebc5eb7fcf4b014a67100ca15957c842fca2",
          "dweb:/ipfs/QmSWjcQewHnTJDCdDdMWYBfc6tgkcX9DmkDUwsg8xNqMCF"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 76
}
