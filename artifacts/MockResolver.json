{
  "abi": [
    {
      "type": "constructor",
      "inputs": [{ "name": "ret", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "onAttestCalled",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "onModuleCalled",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "onRevokeCalled",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "reset",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "resolveAttestation",
      "inputs": [
        {
          "name": "attestation",
          "type": "tuple",
          "internalType": "struct AttestationRecord",
          "components": [
            { "name": "time", "type": "uint48", "internalType": "uint48" },
            {
              "name": "expirationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "revocationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "moduleTypes",
              "type": "uint32",
              "internalType": "PackedModuleTypes"
            },
            {
              "name": "moduleAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "dataPointer",
              "type": "address",
              "internalType": "AttestationDataRef"
            },
            {
              "name": "schemaUID",
              "type": "bytes32",
              "internalType": "SchemaUID"
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "resolveAttestation",
      "inputs": [
        {
          "name": "attestation",
          "type": "tuple[]",
          "internalType": "struct AttestationRecord[]",
          "components": [
            { "name": "time", "type": "uint48", "internalType": "uint48" },
            {
              "name": "expirationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "revocationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "moduleTypes",
              "type": "uint32",
              "internalType": "PackedModuleTypes"
            },
            {
              "name": "moduleAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "dataPointer",
              "type": "address",
              "internalType": "AttestationDataRef"
            },
            {
              "name": "schemaUID",
              "type": "bytes32",
              "internalType": "SchemaUID"
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "resolveModuleRegistration",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        {
          "name": "moduleRecord",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "record",
          "type": "tuple",
          "internalType": "struct ModuleRecord",
          "components": [
            {
              "name": "resolverUID",
              "type": "bytes32",
              "internalType": "ResolverUID"
            },
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "metadata", "type": "bytes", "internalType": "bytes" }
          ]
        },
        { "name": "resolverContext", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "resolveRevocation",
      "inputs": [
        {
          "name": "attestation",
          "type": "tuple",
          "internalType": "struct AttestationRecord",
          "components": [
            { "name": "time", "type": "uint48", "internalType": "uint48" },
            {
              "name": "expirationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "revocationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "moduleTypes",
              "type": "uint32",
              "internalType": "PackedModuleTypes"
            },
            {
              "name": "moduleAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "dataPointer",
              "type": "address",
              "internalType": "AttestationDataRef"
            },
            {
              "name": "schemaUID",
              "type": "bytes32",
              "internalType": "SchemaUID"
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "resolveRevocation",
      "inputs": [
        {
          "name": "attestation",
          "type": "tuple[]",
          "internalType": "struct AttestationRecord[]",
          "components": [
            { "name": "time", "type": "uint48", "internalType": "uint48" },
            {
              "name": "expirationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "revocationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "moduleTypes",
              "type": "uint32",
              "internalType": "PackedModuleTypes"
            },
            {
              "name": "moduleAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "dataPointer",
              "type": "address",
              "internalType": "AttestationDataRef"
            },
            {
              "name": "schemaUID",
              "type": "bytes32",
              "internalType": "SchemaUID"
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        { "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "pure"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561000f575f80fd5b5060405161047838038061047883398101604081905261002e91610038565b151560805261005e565b5f60208284031215610048575f80fd5b81518015158114610057575f80fd5b9392505050565b6080516103f56100835f395f818160e30152818161014d01526101f301526103f55ff3fe60806040526004361061008f575f3560e01c8063d58807fe11610057578063d58807fe14610172578063d826f88f14610180578063dfde9d561461019e578063e280f3d3146101bb578063f68f7e1c146101d3575f80fd5b806301ffc9a71461009357806334c85d07146100c65780638b6e59ff146101055780639e8ad8b914610113578063cf629cee14610131575b5f80fd5b34801561009e575f80fd5b506100b26100ad366004610241565b61021b565b604051901515815260200160405180910390f35b6100b26100d436600461026f565b505f805460ff191660011790557f000000000000000000000000000000000000000000000000000000000000000090565b6100b261008f36600461026f565b34801561011e575f80fd5b505f546100b29062010000900460ff1681565b6100b261013f366004610286565b5f805460ff191660011790557f000000000000000000000000000000000000000000000000000000000000000092915050565b6100b261008f366004610286565b34801561018b575f80fd5b5061019c5f805462ffffff19169055565b005b3480156101a9575f80fd5b505f546100b290610100900460ff1681565b3480156101c6575f80fd5b505f546100b29060ff1681565b6100b26101e136600461030b565b5f805462ff00001916620100001790557f000000000000000000000000000000000000000000000000000000000000000095945050505050565b5f632b0f078360e21b6001600160e01b031983160161023c57506001919050565b919050565b5f60208284031215610251575f80fd5b81356001600160e01b031981168114610268575f80fd5b9392505050565b5f6101008284031215610280575f80fd5b50919050565b5f8060208385031215610297575f80fd5b823567ffffffffffffffff808211156102ae575f80fd5b818501915085601f8301126102c1575f80fd5b8135818111156102cf575f80fd5b8660208260081b85010111156102e3575f80fd5b60209290920196919550909350505050565b80356001600160a01b038116811461023c575f80fd5b5f805f805f6080868803121561031f575f80fd5b610328866102f5565b9450610336602087016102f5565b9350604086013567ffffffffffffffff80821115610352575f80fd5b908701906060828a031215610365575f80fd5b9093506060870135908082111561037a575f80fd5b818801915088601f83011261038d575f80fd5b81358181111561039b575f80fd5b8960208285010111156103ac575f80fd5b969995985093965060200194939250505056fea26469706673582212203723d0b12aae5d8c96774d3b5edf745796a547a6a2f2f5f830612c7fc98a9adc64736f6c63430008180033",
    "sourceMap": "110:1613:96:-:0;;;287:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;319:15;;;;110:1613;;14:277:98;81:6;134:2;122:9;113:7;109:23;105:32;102:52;;;150:1;147;140:12;102:52;182:9;176:16;235:5;228:13;221:21;214:5;211:32;201:60;;257:1;254;247:12;201:60;280:5;14:277;-1:-1:-1;;;14:277:98:o;:::-;110:1613:96;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061008f575f3560e01c8063d58807fe11610057578063d58807fe14610172578063d826f88f14610180578063dfde9d561461019e578063e280f3d3146101bb578063f68f7e1c146101d3575f80fd5b806301ffc9a71461009357806334c85d07146100c65780638b6e59ff146101055780639e8ad8b914610113578063cf629cee14610131575b5f80fd5b34801561009e575f80fd5b506100b26100ad366004610241565b61021b565b604051901515815260200160405180910390f35b6100b26100d436600461026f565b505f805460ff191660011790557f000000000000000000000000000000000000000000000000000000000000000090565b6100b261008f36600461026f565b34801561011e575f80fd5b505f546100b29062010000900460ff1681565b6100b261013f366004610286565b5f805460ff191660011790557f000000000000000000000000000000000000000000000000000000000000000092915050565b6100b261008f366004610286565b34801561018b575f80fd5b5061019c5f805462ffffff19169055565b005b3480156101a9575f80fd5b505f546100b290610100900460ff1681565b3480156101c6575f80fd5b505f546100b29060ff1681565b6100b26101e136600461030b565b5f805462ff00001916620100001790557f000000000000000000000000000000000000000000000000000000000000000095945050505050565b5f632b0f078360e21b6001600160e01b031983160161023c57506001919050565b919050565b5f60208284031215610251575f80fd5b81356001600160e01b031981168114610268575f80fd5b9392505050565b5f6101008284031215610280575f80fd5b50919050565b5f8060208385031215610297575f80fd5b823567ffffffffffffffff808211156102ae575f80fd5b818501915085601f8301126102c1575f80fd5b8135818111156102cf575f80fd5b8660208260081b85010111156102e3575f80fd5b60209290920196919550909350505050565b80356001600160a01b038116811461023c575f80fd5b5f805f805f6080868803121561031f575f80fd5b610328866102f5565b9450610336602087016102f5565b9350604086013567ffffffffffffffff80821115610352575f80fd5b908701906060828a031215610365575f80fd5b9093506060870135908082111561037a575f80fd5b818801915088601f83011261038d575f80fd5b81358181111561039b575f80fd5b8960208285010111156103ac575f80fd5b969995985093965060200194939250505056fea26469706673582212203723d0b12aae5d8c96774d3b5edf745796a547a6a2f2f5f830612c7fc98a9adc64736f6c63430008180033",
    "sourceMap": "110:1613:96:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;480:167;;;;;;;;;;-1:-1:-1;480:167:96;;;;;:::i;:::-;;:::i;:::-;;;470:14:98;;463:22;445:41;;433:2;418:18;480:167:96;;;;;;;653:173;;;;;;:::i;:::-;-1:-1:-1;756:4:96;772:21;;-1:-1:-1;;772:21:96;789:4;772:21;;;810:9;;653:173;1013:190;;;;;;:::i;254:26::-;;;;;;;;;;-1:-1:-1;254:26:96;;;;;;;;;;;832:175;;;;;;:::i;:::-;937:4;953:21;;-1:-1:-1;;953:21:96;970:4;953:21;;;991:9;832:175;;;;;1209:192;;;;;;:::i;347:127::-;;;;;;;;;;;;398:5;381:22;;-1:-1:-1;;445:22:96;;;347:127;;;222:26;;;;;;;;;;-1:-1:-1;222:26:96;;;;;;;;;;;190;;;;;;;;;;-1:-1:-1;190:26:96;;;;;;;;1407:314;;;;;;:::i;:::-;1647:4;1667:21;;-1:-1:-1;;1667:21:96;;;;;1705:9;1407:314;;;;;;;;480:167;557:4;-1:-1:-1;;;;;;;;;577:50:96;;;573:67;;-1:-1:-1;636:4:96;;480:167;-1:-1:-1;480:167:96:o;573:67::-;480:167;;;:::o;14:286:98:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:98;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:98:o;497:205::-;594:6;647:3;635:9;626:7;622:23;618:33;615:53;;;664:1;661;654:12;615:53;-1:-1:-1;687:9:98;497:205;-1:-1:-1;497:205:98:o;707:653::-;831:6;839;892:2;880:9;871:7;867:23;863:32;860:52;;;908:1;905;898:12;860:52;948:9;935:23;977:18;1018:2;1010:6;1007:14;1004:34;;;1034:1;1031;1024:12;1004:34;1072:6;1061:9;1057:22;1047:32;;1117:7;1110:4;1106:2;1102:13;1098:27;1088:55;;1139:1;1136;1129:12;1088:55;1179:2;1166:16;1205:2;1197:6;1194:14;1191:34;;;1221:1;1218;1211:12;1191:34;1274:7;1269:2;1259:6;1256:1;1252:14;1248:2;1244:23;1240:32;1237:45;1234:65;;;1295:1;1292;1285:12;1234:65;1326:2;1318:11;;;;;1348:6;;-1:-1:-1;707:653:98;;-1:-1:-1;;;;707:653:98:o;1365:173::-;1433:20;;-1:-1:-1;;;;;1482:31:98;;1472:42;;1462:70;;1528:1;1525;1518:12;1543:1010;1673:6;1681;1689;1697;1705;1758:3;1746:9;1737:7;1733:23;1729:33;1726:53;;;1775:1;1772;1765:12;1726:53;1798:29;1817:9;1798:29;:::i;:::-;1788:39;;1846:38;1880:2;1869:9;1865:18;1846:38;:::i;:::-;1836:48;;1935:2;1924:9;1920:18;1907:32;1958:18;1999:2;1991:6;1988:14;1985:34;;;2015:1;2012;2005:12;1985:34;2038:22;;;;2094:2;2076:16;;;2072:25;2069:45;;;2110:1;2107;2100:12;2069:45;2133:2;;-1:-1:-1;2188:2:98;2173:18;;2160:32;;2204:16;;;2201:36;;;2233:1;2230;2223:12;2201:36;2271:8;2260:9;2256:24;2246:34;;2318:7;2311:4;2307:2;2303:13;2299:27;2289:55;;2340:1;2337;2330:12;2289:55;2380:2;2367:16;2406:2;2398:6;2395:14;2392:34;;;2422:1;2419;2412:12;2392:34;2467:7;2462:2;2453:6;2449:2;2445:15;2441:24;2438:37;2435:57;;;2488:1;2485;2478:12;2435:57;1543:1010;;;;-1:-1:-1;1543:1010:98;;-1:-1:-1;2519:2:98;2511:11;;2541:6;1543:1010;-1:-1:-1;;;1543:1010:98:o",
    "linkReferences": {},
    "immutableReferences": {
      "63894": [
        { "start": 227, "length": 32 },
        { "start": 333, "length": 32 },
        { "start": 499, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "onAttestCalled()": "e280f3d3",
    "onModuleCalled()": "9e8ad8b9",
    "onRevokeCalled()": "dfde9d56",
    "reset()": "d826f88f",
    "resolveAttestation((uint48,uint48,uint48,uint32,address,address,address,bytes32))": "34c85d07",
    "resolveAttestation((uint48,uint48,uint48,uint32,address,address,address,bytes32)[])": "cf629cee",
    "resolveModuleRegistration(address,address,(bytes32,address,bytes),bytes)": "f68f7e1c",
    "resolveRevocation((uint48,uint48,uint48,uint32,address,address,address,bytes32))": "8b6e59ff",
    "resolveRevocation((uint48,uint48,uint48,uint32,address,address,address,bytes32)[])": "d58807fe",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"ret\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"onAttestCalled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onModuleCalled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onRevokeCalled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"time\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"expirationTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"revocationTime\",\"type\":\"uint48\"},{\"internalType\":\"PackedModuleTypes\",\"name\":\"moduleTypes\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"AttestationDataRef\",\"name\":\"dataPointer\",\"type\":\"address\"},{\"internalType\":\"SchemaUID\",\"name\":\"schemaUID\",\"type\":\"bytes32\"}],\"internalType\":\"struct AttestationRecord\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"resolveAttestation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"time\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"expirationTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"revocationTime\",\"type\":\"uint48\"},{\"internalType\":\"PackedModuleTypes\",\"name\":\"moduleTypes\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"AttestationDataRef\",\"name\":\"dataPointer\",\"type\":\"address\"},{\"internalType\":\"SchemaUID\",\"name\":\"schemaUID\",\"type\":\"bytes32\"}],\"internalType\":\"struct AttestationRecord[]\",\"name\":\"attestation\",\"type\":\"tuple[]\"}],\"name\":\"resolveAttestation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"moduleRecord\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"ResolverUID\",\"name\":\"resolverUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleRecord\",\"name\":\"record\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"resolverContext\",\"type\":\"bytes\"}],\"name\":\"resolveModuleRegistration\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"time\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"expirationTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"revocationTime\",\"type\":\"uint48\"},{\"internalType\":\"PackedModuleTypes\",\"name\":\"moduleTypes\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"AttestationDataRef\",\"name\":\"dataPointer\",\"type\":\"address\"},{\"internalType\":\"SchemaUID\",\"name\":\"schemaUID\",\"type\":\"bytes32\"}],\"internalType\":\"struct AttestationRecord\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"resolveRevocation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"time\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"expirationTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"revocationTime\",\"type\":\"uint48\"},{\"internalType\":\"PackedModuleTypes\",\"name\":\"moduleTypes\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"AttestationDataRef\",\"name\":\"dataPointer\",\"type\":\"address\"},{\"internalType\":\"SchemaUID\",\"name\":\"schemaUID\",\"type\":\"bytes32\"}],\"internalType\":\"struct AttestationRecord[]\",\"name\":\"attestation\",\"type\":\"tuple[]\"}],\"name\":\"resolveRevocation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"resolveAttestation((uint48,uint48,uint48,uint32,address,address,address,bytes32))\":{\"details\":\"Processes an attestation and verifies whether it's valid.\",\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"resolveRevocation((uint48,uint48,uint48,uint32,address,address,address,bytes32))\":{\"details\":\"Processes an attestation revocation and verifies if it can be revoked.\",\"params\":{\"attestation\":\"The existing attestation to be revoked.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/mocks/MockResolver.sol\":\"MockResolver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":account-abstraction-v0.6/=node_modules/account-abstraction-v0.6/contracts/\",\":account-abstraction/=node_modules/account-abstraction/contracts/\",\":ds-test/=node_modules/ds-test/src/\",\":erc4337-validation/=node_modules/@rhinestone/erc4337-validation/src/\",\":forge-std/=node_modules/forge-std/src/\",\":solady/=node_modules/solady/src/\",\":solmate/=node_modules/solmate/src/\"]},\"sources\":{\"node_modules/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"src/DataTypes.sol\":{\"keccak256\":\"0x17a21d96dbda1704f888f46565731cc676d5fd4d989ea6819a87a8fb0895c47b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://91c12e4dc5254821d3ac965369b40656242d90e098a6ecc1e721d6dcf61e64fc\",\"dweb:/ipfs/Qma78sqHvpP7AFj2gKAQe2z4Na3nxT5NRtaSuEJGezDyN8\"]},\"src/external/IExternalResolver.sol\":{\"keccak256\":\"0x258211aa342cdcde51952e0f523136b71d320a2208a7873b03d0c6c210776d5f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3406f08574205e786e228c0126d06d78ffb3d8724efa6344a18675eef61e9077\",\"dweb:/ipfs/QmZTZEY5eWmBq6ho6F75UGJ7VYuh2JwJiuQfUXGPrJD7JK\"]},\"src/external/IExternalSchemaValidator.sol\":{\"keccak256\":\"0xeaefb6118769085ca0de5b3048e5b4a8f860f99d4361008b4220195f603e4bd2\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d8a12afbc6a3a453d5810b67d775d9cb24bc52d1fc2843625910576285257526\",\"dweb:/ipfs/QmXDcULeqy7VSXitbyrYcr32Bt7msuv7krG7g5u1nuCJx2\"]},\"test/mocks/MockResolver.sol\":{\"keccak256\":\"0x4bfcaaf9ab3866ace18d4275d87bdd54da7df50268ac72961727d8f009126b77\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b5b993384b7650dfa8a06a71504441ccbbb5922c167acbafa5bde3aff3908bf9\",\"dweb:/ipfs/QmbuSvCK9vHsBYqki3kQVzEd8ATwNMUJDYzEKdftv1tQYP\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.24+commit.e11b9ed9" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [{ "internalType": "bool", "name": "ret", "type": "bool" }],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "onAttestCalled",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "onModuleCalled",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "onRevokeCalled",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reset"
        },
        {
          "inputs": [
            {
              "internalType": "struct AttestationRecord",
              "name": "attestation",
              "type": "tuple",
              "components": [
                { "internalType": "uint48", "name": "time", "type": "uint48" },
                {
                  "internalType": "uint48",
                  "name": "expirationTime",
                  "type": "uint48"
                },
                {
                  "internalType": "uint48",
                  "name": "revocationTime",
                  "type": "uint48"
                },
                {
                  "internalType": "PackedModuleTypes",
                  "name": "moduleTypes",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "AttestationDataRef",
                  "name": "dataPointer",
                  "type": "address"
                },
                {
                  "internalType": "SchemaUID",
                  "name": "schemaUID",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "resolveAttestation",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct AttestationRecord[]",
              "name": "attestation",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint48", "name": "time", "type": "uint48" },
                {
                  "internalType": "uint48",
                  "name": "expirationTime",
                  "type": "uint48"
                },
                {
                  "internalType": "uint48",
                  "name": "revocationTime",
                  "type": "uint48"
                },
                {
                  "internalType": "PackedModuleTypes",
                  "name": "moduleTypes",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "AttestationDataRef",
                  "name": "dataPointer",
                  "type": "address"
                },
                {
                  "internalType": "SchemaUID",
                  "name": "schemaUID",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "resolveAttestation",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            {
              "internalType": "address",
              "name": "moduleRecord",
              "type": "address"
            },
            {
              "internalType": "struct ModuleRecord",
              "name": "record",
              "type": "tuple",
              "components": [
                {
                  "internalType": "ResolverUID",
                  "name": "resolverUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                { "internalType": "bytes", "name": "metadata", "type": "bytes" }
              ]
            },
            {
              "internalType": "bytes",
              "name": "resolverContext",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "resolveModuleRegistration",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct AttestationRecord",
              "name": "attestation",
              "type": "tuple",
              "components": [
                { "internalType": "uint48", "name": "time", "type": "uint48" },
                {
                  "internalType": "uint48",
                  "name": "expirationTime",
                  "type": "uint48"
                },
                {
                  "internalType": "uint48",
                  "name": "revocationTime",
                  "type": "uint48"
                },
                {
                  "internalType": "PackedModuleTypes",
                  "name": "moduleTypes",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "AttestationDataRef",
                  "name": "dataPointer",
                  "type": "address"
                },
                {
                  "internalType": "SchemaUID",
                  "name": "schemaUID",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "resolveRevocation",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct AttestationRecord[]",
              "name": "attestation",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint48", "name": "time", "type": "uint48" },
                {
                  "internalType": "uint48",
                  "name": "expirationTime",
                  "type": "uint48"
                },
                {
                  "internalType": "uint48",
                  "name": "revocationTime",
                  "type": "uint48"
                },
                {
                  "internalType": "PackedModuleTypes",
                  "name": "moduleTypes",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "AttestationDataRef",
                  "name": "dataPointer",
                  "type": "address"
                },
                {
                  "internalType": "SchemaUID",
                  "name": "schemaUID",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "resolveRevocation",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "resolveAttestation((uint48,uint48,uint48,uint32,address,address,address,bytes32))": {
            "details": "Processes an attestation and verifies whether it's valid.",
            "params": { "attestation": "The new attestation." },
            "returns": { "_0": "Whether the attestation is valid." }
          },
          "resolveRevocation((uint48,uint48,uint48,uint32,address,address,address,bytes32))": {
            "details": "Processes an attestation revocation and verifies if it can be revoked.",
            "params": {
              "attestation": "The existing attestation to be revoked."
            },
            "returns": { "_0": "Whether the attestation can be revoked." }
          }
        },
        "version": 1
      },
      "userdoc": { "kind": "user", "methods": {}, "version": 1 }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "account-abstraction-v0.6/=node_modules/account-abstraction-v0.6/contracts/",
        "account-abstraction/=node_modules/account-abstraction/contracts/",
        "ds-test/=node_modules/ds-test/src/",
        "erc4337-validation/=node_modules/@rhinestone/erc4337-validation/src/",
        "forge-std/=node_modules/forge-std/src/",
        "solady/=node_modules/solady/src/",
        "solmate/=node_modules/solmate/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "test/mocks/MockResolver.sol": "MockResolver" },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "node_modules/forge-std/src/interfaces/IERC165.sol": {
        "keccak256": "0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600",
        "urls": [
          "bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc",
          "dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT"
        ],
        "license": "MIT"
      },
      "src/DataTypes.sol": {
        "keccak256": "0x17a21d96dbda1704f888f46565731cc676d5fd4d989ea6819a87a8fb0895c47b",
        "urls": [
          "bzz-raw://91c12e4dc5254821d3ac965369b40656242d90e098a6ecc1e721d6dcf61e64fc",
          "dweb:/ipfs/Qma78sqHvpP7AFj2gKAQe2z4Na3nxT5NRtaSuEJGezDyN8"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/external/IExternalResolver.sol": {
        "keccak256": "0x258211aa342cdcde51952e0f523136b71d320a2208a7873b03d0c6c210776d5f",
        "urls": [
          "bzz-raw://3406f08574205e786e228c0126d06d78ffb3d8724efa6344a18675eef61e9077",
          "dweb:/ipfs/QmZTZEY5eWmBq6ho6F75UGJ7VYuh2JwJiuQfUXGPrJD7JK"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/external/IExternalSchemaValidator.sol": {
        "keccak256": "0xeaefb6118769085ca0de5b3048e5b4a8f860f99d4361008b4220195f603e4bd2",
        "urls": [
          "bzz-raw://d8a12afbc6a3a453d5810b67d775d9cb24bc52d1fc2843625910576285257526",
          "dweb:/ipfs/QmXDcULeqy7VSXitbyrYcr32Bt7msuv7krG7g5u1nuCJx2"
        ],
        "license": "AGPL-3.0-only"
      },
      "test/mocks/MockResolver.sol": {
        "keccak256": "0x4bfcaaf9ab3866ace18d4275d87bdd54da7df50268ac72961727d8f009126b77",
        "urls": [
          "bzz-raw://b5b993384b7650dfa8a06a71504441ccbbb5922c167acbafa5bde3aff3908bf9",
          "dweb:/ipfs/QmbuSvCK9vHsBYqki3kQVzEd8ATwNMUJDYzEKdftv1tQYP"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "id": 96
}
