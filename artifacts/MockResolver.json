{
  "abi": [
    {
      "type": "constructor",
      "inputs": [{ "name": "ret", "type": "bool", "internalType": "bool" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "onAttestCalled",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "onModuleCalled",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "onRevokeCalled",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "reset",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "resolveAttestation",
      "inputs": [
        {
          "name": "attestation",
          "type": "tuple",
          "internalType": "struct AttestationRecord",
          "components": [
            { "name": "time", "type": "uint48", "internalType": "uint48" },
            {
              "name": "expirationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "revocationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "moduleTypes",
              "type": "uint32",
              "internalType": "PackedModuleTypes"
            },
            {
              "name": "moduleAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "dataPointer",
              "type": "address",
              "internalType": "AttestationDataRef"
            },
            {
              "name": "schemaUID",
              "type": "bytes32",
              "internalType": "SchemaUID"
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "resolveAttestation",
      "inputs": [
        {
          "name": "attestation",
          "type": "tuple[]",
          "internalType": "struct AttestationRecord[]",
          "components": [
            { "name": "time", "type": "uint48", "internalType": "uint48" },
            {
              "name": "expirationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "revocationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "moduleTypes",
              "type": "uint32",
              "internalType": "PackedModuleTypes"
            },
            {
              "name": "moduleAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "dataPointer",
              "type": "address",
              "internalType": "AttestationDataRef"
            },
            {
              "name": "schemaUID",
              "type": "bytes32",
              "internalType": "SchemaUID"
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "resolveModuleRegistration",
      "inputs": [
        { "name": "sender", "type": "address", "internalType": "address" },
        {
          "name": "moduleRecord",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "record",
          "type": "tuple",
          "internalType": "struct ModuleRecord",
          "components": [
            {
              "name": "resolverUID",
              "type": "bytes32",
              "internalType": "ResolverUID"
            },
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "metadata", "type": "bytes", "internalType": "bytes" }
          ]
        },
        { "name": "resolverContext", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "resolveRevocation",
      "inputs": [
        {
          "name": "attestation",
          "type": "tuple",
          "internalType": "struct AttestationRecord",
          "components": [
            { "name": "time", "type": "uint48", "internalType": "uint48" },
            {
              "name": "expirationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "revocationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "moduleTypes",
              "type": "uint32",
              "internalType": "PackedModuleTypes"
            },
            {
              "name": "moduleAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "dataPointer",
              "type": "address",
              "internalType": "AttestationDataRef"
            },
            {
              "name": "schemaUID",
              "type": "bytes32",
              "internalType": "SchemaUID"
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "resolveRevocation",
      "inputs": [
        {
          "name": "attestation",
          "type": "tuple[]",
          "internalType": "struct AttestationRecord[]",
          "components": [
            { "name": "time", "type": "uint48", "internalType": "uint48" },
            {
              "name": "expirationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "revocationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "moduleTypes",
              "type": "uint32",
              "internalType": "PackedModuleTypes"
            },
            {
              "name": "moduleAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "dataPointer",
              "type": "address",
              "internalType": "AttestationDataRef"
            },
            {
              "name": "schemaUID",
              "type": "bytes32",
              "internalType": "SchemaUID"
            }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        { "name": "interfaceId", "type": "bytes4", "internalType": "bytes4" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "pure"
    }
  ],
  "bytecode": {
    "object": "0x60a03461007157601f6103d238819003918201601f19168301916001600160401b03831184841017610075578084926020946040528339810103126100715751801515810361007157608052604051610348908161008a8239608051818181610118015281816101ca01526102480152f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe60806040908082526004361015610014575f80fd5b5f3560e01c90816301ffc9a71461026c5750806334c85d07146102295780638b6e59ff146102185780639e8ad8b9146101f3578063cf629cee146101ae578063d58807fe146101a5578063d826f88f14610188578063dfde9d5614610163578063e280f3d3146101415763f68f7e1c1461008c575f80fd5b60031960803682011261013d576001600160a01b036004358181160361013d576024359081160361013d5760443567ffffffffffffffff9182821161013d576060913603011261013d576064359080821161013d573660238301121561013d57816004013590811161013d573691016024011161013d576020906201000062ff0000195f5416175f55517f000000000000000000000000000000000000000000000000000000000000000015158152f35b5f80fd5b503461013d575f36600319011261013d5760209060ff5f541690519015158152f35b503461013d575f36600319011261013d5760209060ff5f5460081c1690519015158152f35b3461013d575f36600319011261013d575f805462ffffff19169055005b61013d366102a3565b6020826101ba366102a3565b50505f805460ff191660011790557f00000000000000000000000000000000000000000000000000000000000000005b90519015158152f35b503461013d575f36600319011261013d5760209060ff5f5460101c1690519015158152f35b61010036600319011261013d575f80fd5b5061010036600319011261013d575f805460ff191660011790556020907f00000000000000000000000000000000000000000000000000000000000000006101ea565b3461013d57602036600319011261013d57600435906001600160e01b03198216820361013d5761029d6020926102f0565b15158152f35b90602060031983011261013d5760043567ffffffffffffffff9283821161013d578060238301121561013d57816004013593841161013d5760248460081b8301011161013d576024019190565b5f91906001600160e01b0319166314f0f87d60e21b1461030c57565b6001915056fea26469706673582212209e4179b0194786ae039354860dfc76e6130a8ddf1d6dda058d29bb2fdd045e0364736f6c63430008180033",
    "sourceMap": "110:1613:96:-:0;;;;;;;;;;;;;-1:-1:-1;;110:1613:96;;;;-1:-1:-1;;;;;110:1613:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;319:15;;110:1613;;;;;;;;319:15;110:1613;;;;;;;;;;;;;;;;;-1:-1:-1;110:1613:96;;;;;;-1:-1:-1;110:1613:96;;;;;-1:-1:-1;110:1613:96",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040908082526004361015610014575f80fd5b5f3560e01c90816301ffc9a71461026c5750806334c85d07146102295780638b6e59ff146102185780639e8ad8b9146101f3578063cf629cee146101ae578063d58807fe146101a5578063d826f88f14610188578063dfde9d5614610163578063e280f3d3146101415763f68f7e1c1461008c575f80fd5b60031960803682011261013d576001600160a01b036004358181160361013d576024359081160361013d5760443567ffffffffffffffff9182821161013d576060913603011261013d576064359080821161013d573660238301121561013d57816004013590811161013d573691016024011161013d576020906201000062ff0000195f5416175f55517f000000000000000000000000000000000000000000000000000000000000000015158152f35b5f80fd5b503461013d575f36600319011261013d5760209060ff5f541690519015158152f35b503461013d575f36600319011261013d5760209060ff5f5460081c1690519015158152f35b3461013d575f36600319011261013d575f805462ffffff19169055005b61013d366102a3565b6020826101ba366102a3565b50505f805460ff191660011790557f00000000000000000000000000000000000000000000000000000000000000005b90519015158152f35b503461013d575f36600319011261013d5760209060ff5f5460101c1690519015158152f35b61010036600319011261013d575f80fd5b5061010036600319011261013d575f805460ff191660011790556020907f00000000000000000000000000000000000000000000000000000000000000006101ea565b3461013d57602036600319011261013d57600435906001600160e01b03198216820361013d5761029d6020926102f0565b15158152f35b90602060031983011261013d5760043567ffffffffffffffff9283821161013d578060238301121561013d57816004013593841161013d5760248460081b8301011161013d576024019190565b5f91906001600160e01b0319166314f0f87d60e21b1461030c57565b6001915056fea26469706673582212209e4179b0194786ae039354860dfc76e6130a8ddf1d6dda058d29bb2fdd045e0364736f6c63430008180033",
    "sourceMap": "110:1613:96:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;110:1613:96;;;;;;;-1:-1:-1;;;;;110:1613:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1705:9;110:1613;;;;;;;;;;;;;;;;-1:-1:-1;;110:1613:96;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;110:1613:96;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;110:1613:96;;;;;;;-1:-1:-1;;110:1613:96;;;;;;;;:::i;:::-;;;;;;:::i;:::-;-1:-1:-1;;772:21:96;110:1613;;-1:-1:-1;;110:1613:96;789:4;110:1613;;;810:9;110:1613;;;;;;;;;;;;;;;;-1:-1:-1;;110:1613:96;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;110:1613:96;;;;;1131:8;;110:1613;-1:-1:-1;110:1613:96;;-1:-1:-1;;110:1613:96;;;;772:21;110:1613;;-1:-1:-1;;110:1613:96;789:4;110:1613;;;;;810:9;653:173;;110:1613;;;;;;-1:-1:-1;;110:1613:96;;;;;;;-1:-1:-1;;;;;;110:1613:96;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;110:1613:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;480:167::-;110:1613;;480:167;-1:-1:-1;;;;;;110:1613:96;-1:-1:-1;;;577:50:96;573:67;;480:167::o;573:67::-;636:4;;-1:-1:-1;629:11:96:o",
    "linkReferences": {},
    "immutableReferences": {
      "63894": [
        { "start": 280, "length": 32 },
        { "start": 458, "length": 32 },
        { "start": 584, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "onAttestCalled()": "e280f3d3",
    "onModuleCalled()": "9e8ad8b9",
    "onRevokeCalled()": "dfde9d56",
    "reset()": "d826f88f",
    "resolveAttestation((uint48,uint48,uint48,uint32,address,address,address,bytes32))": "34c85d07",
    "resolveAttestation((uint48,uint48,uint48,uint32,address,address,address,bytes32)[])": "cf629cee",
    "resolveModuleRegistration(address,address,(bytes32,address,bytes),bytes)": "f68f7e1c",
    "resolveRevocation((uint48,uint48,uint48,uint32,address,address,address,bytes32))": "8b6e59ff",
    "resolveRevocation((uint48,uint48,uint48,uint32,address,address,address,bytes32)[])": "d58807fe",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"ret\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"onAttestCalled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onModuleCalled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onRevokeCalled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"time\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"expirationTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"revocationTime\",\"type\":\"uint48\"},{\"internalType\":\"PackedModuleTypes\",\"name\":\"moduleTypes\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"AttestationDataRef\",\"name\":\"dataPointer\",\"type\":\"address\"},{\"internalType\":\"SchemaUID\",\"name\":\"schemaUID\",\"type\":\"bytes32\"}],\"internalType\":\"struct AttestationRecord\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"resolveAttestation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"time\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"expirationTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"revocationTime\",\"type\":\"uint48\"},{\"internalType\":\"PackedModuleTypes\",\"name\":\"moduleTypes\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"AttestationDataRef\",\"name\":\"dataPointer\",\"type\":\"address\"},{\"internalType\":\"SchemaUID\",\"name\":\"schemaUID\",\"type\":\"bytes32\"}],\"internalType\":\"struct AttestationRecord[]\",\"name\":\"attestation\",\"type\":\"tuple[]\"}],\"name\":\"resolveAttestation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"moduleRecord\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"ResolverUID\",\"name\":\"resolverUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleRecord\",\"name\":\"record\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"resolverContext\",\"type\":\"bytes\"}],\"name\":\"resolveModuleRegistration\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"time\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"expirationTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"revocationTime\",\"type\":\"uint48\"},{\"internalType\":\"PackedModuleTypes\",\"name\":\"moduleTypes\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"AttestationDataRef\",\"name\":\"dataPointer\",\"type\":\"address\"},{\"internalType\":\"SchemaUID\",\"name\":\"schemaUID\",\"type\":\"bytes32\"}],\"internalType\":\"struct AttestationRecord\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"resolveRevocation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"time\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"expirationTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"revocationTime\",\"type\":\"uint48\"},{\"internalType\":\"PackedModuleTypes\",\"name\":\"moduleTypes\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"AttestationDataRef\",\"name\":\"dataPointer\",\"type\":\"address\"},{\"internalType\":\"SchemaUID\",\"name\":\"schemaUID\",\"type\":\"bytes32\"}],\"internalType\":\"struct AttestationRecord[]\",\"name\":\"attestation\",\"type\":\"tuple[]\"}],\"name\":\"resolveRevocation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"resolveAttestation((uint48,uint48,uint48,uint32,address,address,address,bytes32))\":{\"details\":\"Processes an attestation and verifies whether it's valid.\",\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"resolveRevocation((uint48,uint48,uint48,uint32,address,address,address,bytes32))\":{\"details\":\"Processes an attestation revocation and verifies if it can be revoked.\",\"params\":{\"attestation\":\"The existing attestation to be revoked.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/mocks/MockResolver.sol\":\"MockResolver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":account-abstraction-v0.6/=node_modules/account-abstraction-v0.6/contracts/\",\":account-abstraction/=node_modules/account-abstraction/contracts/\",\":ds-test/=node_modules/ds-test/src/\",\":erc4337-validation/=node_modules/@rhinestone/erc4337-validation/src/\",\":forge-std/=node_modules/forge-std/src/\",\":solady/=node_modules/solady/src/\",\":solmate/=node_modules/solmate/src/\"],\"viaIR\":true},\"sources\":{\"node_modules/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"src/DataTypes.sol\":{\"keccak256\":\"0x17a21d96dbda1704f888f46565731cc676d5fd4d989ea6819a87a8fb0895c47b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://91c12e4dc5254821d3ac965369b40656242d90e098a6ecc1e721d6dcf61e64fc\",\"dweb:/ipfs/Qma78sqHvpP7AFj2gKAQe2z4Na3nxT5NRtaSuEJGezDyN8\"]},\"src/external/IExternalResolver.sol\":{\"keccak256\":\"0x258211aa342cdcde51952e0f523136b71d320a2208a7873b03d0c6c210776d5f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3406f08574205e786e228c0126d06d78ffb3d8724efa6344a18675eef61e9077\",\"dweb:/ipfs/QmZTZEY5eWmBq6ho6F75UGJ7VYuh2JwJiuQfUXGPrJD7JK\"]},\"src/external/IExternalSchemaValidator.sol\":{\"keccak256\":\"0xeaefb6118769085ca0de5b3048e5b4a8f860f99d4361008b4220195f603e4bd2\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d8a12afbc6a3a453d5810b67d775d9cb24bc52d1fc2843625910576285257526\",\"dweb:/ipfs/QmXDcULeqy7VSXitbyrYcr32Bt7msuv7krG7g5u1nuCJx2\"]},\"test/mocks/MockResolver.sol\":{\"keccak256\":\"0x4bfcaaf9ab3866ace18d4275d87bdd54da7df50268ac72961727d8f009126b77\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b5b993384b7650dfa8a06a71504441ccbbb5922c167acbafa5bde3aff3908bf9\",\"dweb:/ipfs/QmbuSvCK9vHsBYqki3kQVzEd8ATwNMUJDYzEKdftv1tQYP\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.24+commit.e11b9ed9" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [{ "internalType": "bool", "name": "ret", "type": "bool" }],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "onAttestCalled",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "onModuleCalled",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "onRevokeCalled",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reset"
        },
        {
          "inputs": [
            {
              "internalType": "struct AttestationRecord",
              "name": "attestation",
              "type": "tuple",
              "components": [
                { "internalType": "uint48", "name": "time", "type": "uint48" },
                {
                  "internalType": "uint48",
                  "name": "expirationTime",
                  "type": "uint48"
                },
                {
                  "internalType": "uint48",
                  "name": "revocationTime",
                  "type": "uint48"
                },
                {
                  "internalType": "PackedModuleTypes",
                  "name": "moduleTypes",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "AttestationDataRef",
                  "name": "dataPointer",
                  "type": "address"
                },
                {
                  "internalType": "SchemaUID",
                  "name": "schemaUID",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "resolveAttestation",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct AttestationRecord[]",
              "name": "attestation",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint48", "name": "time", "type": "uint48" },
                {
                  "internalType": "uint48",
                  "name": "expirationTime",
                  "type": "uint48"
                },
                {
                  "internalType": "uint48",
                  "name": "revocationTime",
                  "type": "uint48"
                },
                {
                  "internalType": "PackedModuleTypes",
                  "name": "moduleTypes",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "AttestationDataRef",
                  "name": "dataPointer",
                  "type": "address"
                },
                {
                  "internalType": "SchemaUID",
                  "name": "schemaUID",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "resolveAttestation",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address" },
            {
              "internalType": "address",
              "name": "moduleRecord",
              "type": "address"
            },
            {
              "internalType": "struct ModuleRecord",
              "name": "record",
              "type": "tuple",
              "components": [
                {
                  "internalType": "ResolverUID",
                  "name": "resolverUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                { "internalType": "bytes", "name": "metadata", "type": "bytes" }
              ]
            },
            {
              "internalType": "bytes",
              "name": "resolverContext",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "resolveModuleRegistration",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct AttestationRecord",
              "name": "attestation",
              "type": "tuple",
              "components": [
                { "internalType": "uint48", "name": "time", "type": "uint48" },
                {
                  "internalType": "uint48",
                  "name": "expirationTime",
                  "type": "uint48"
                },
                {
                  "internalType": "uint48",
                  "name": "revocationTime",
                  "type": "uint48"
                },
                {
                  "internalType": "PackedModuleTypes",
                  "name": "moduleTypes",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "AttestationDataRef",
                  "name": "dataPointer",
                  "type": "address"
                },
                {
                  "internalType": "SchemaUID",
                  "name": "schemaUID",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "resolveRevocation",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct AttestationRecord[]",
              "name": "attestation",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint48", "name": "time", "type": "uint48" },
                {
                  "internalType": "uint48",
                  "name": "expirationTime",
                  "type": "uint48"
                },
                {
                  "internalType": "uint48",
                  "name": "revocationTime",
                  "type": "uint48"
                },
                {
                  "internalType": "PackedModuleTypes",
                  "name": "moduleTypes",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "AttestationDataRef",
                  "name": "dataPointer",
                  "type": "address"
                },
                {
                  "internalType": "SchemaUID",
                  "name": "schemaUID",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "resolveRevocation",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "resolveAttestation((uint48,uint48,uint48,uint32,address,address,address,bytes32))": {
            "details": "Processes an attestation and verifies whether it's valid.",
            "params": { "attestation": "The new attestation." },
            "returns": { "_0": "Whether the attestation is valid." }
          },
          "resolveRevocation((uint48,uint48,uint48,uint32,address,address,address,bytes32))": {
            "details": "Processes an attestation revocation and verifies if it can be revoked.",
            "params": {
              "attestation": "The existing attestation to be revoked."
            },
            "returns": { "_0": "Whether the attestation can be revoked." }
          }
        },
        "version": 1
      },
      "userdoc": { "kind": "user", "methods": {}, "version": 1 }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "account-abstraction-v0.6/=node_modules/account-abstraction-v0.6/contracts/",
        "account-abstraction/=node_modules/account-abstraction/contracts/",
        "ds-test/=node_modules/ds-test/src/",
        "erc4337-validation/=node_modules/@rhinestone/erc4337-validation/src/",
        "forge-std/=node_modules/forge-std/src/",
        "solady/=node_modules/solady/src/",
        "solmate/=node_modules/solmate/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "test/mocks/MockResolver.sol": "MockResolver" },
      "evmVersion": "cancun",
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "node_modules/forge-std/src/interfaces/IERC165.sol": {
        "keccak256": "0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600",
        "urls": [
          "bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc",
          "dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT"
        ],
        "license": "MIT"
      },
      "src/DataTypes.sol": {
        "keccak256": "0x17a21d96dbda1704f888f46565731cc676d5fd4d989ea6819a87a8fb0895c47b",
        "urls": [
          "bzz-raw://91c12e4dc5254821d3ac965369b40656242d90e098a6ecc1e721d6dcf61e64fc",
          "dweb:/ipfs/Qma78sqHvpP7AFj2gKAQe2z4Na3nxT5NRtaSuEJGezDyN8"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/external/IExternalResolver.sol": {
        "keccak256": "0x258211aa342cdcde51952e0f523136b71d320a2208a7873b03d0c6c210776d5f",
        "urls": [
          "bzz-raw://3406f08574205e786e228c0126d06d78ffb3d8724efa6344a18675eef61e9077",
          "dweb:/ipfs/QmZTZEY5eWmBq6ho6F75UGJ7VYuh2JwJiuQfUXGPrJD7JK"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/external/IExternalSchemaValidator.sol": {
        "keccak256": "0xeaefb6118769085ca0de5b3048e5b4a8f860f99d4361008b4220195f603e4bd2",
        "urls": [
          "bzz-raw://d8a12afbc6a3a453d5810b67d775d9cb24bc52d1fc2843625910576285257526",
          "dweb:/ipfs/QmXDcULeqy7VSXitbyrYcr32Bt7msuv7krG7g5u1nuCJx2"
        ],
        "license": "AGPL-3.0-only"
      },
      "test/mocks/MockResolver.sol": {
        "keccak256": "0x4bfcaaf9ab3866ace18d4275d87bdd54da7df50268ac72961727d8f009126b77",
        "urls": [
          "bzz-raw://b5b993384b7650dfa8a06a71504441ccbbb5922c167acbafa5bde3aff3908bf9",
          "dweb:/ipfs/QmbuSvCK9vHsBYqki3kQVzEd8ATwNMUJDYzEKdftv1tQYP"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "id": 96
}
