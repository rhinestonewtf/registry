{
  "abi": [
    {
      "type": "function",
      "name": "attest",
      "inputs": [
        { "name": "schemaUID", "type": "bytes32", "internalType": "SchemaUID" },
        { "name": "attester", "type": "address", "internalType": "address" },
        {
          "name": "requests",
          "type": "tuple[]",
          "internalType": "struct AttestationRequest[]",
          "components": [
            {
              "name": "moduleAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "expirationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            { "name": "data", "type": "bytes", "internalType": "bytes" },
            {
              "name": "moduleTypes",
              "type": "uint256[]",
              "internalType": "ModuleType[]"
            }
          ]
        },
        { "name": "signature", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "attest",
      "inputs": [
        { "name": "schemaUID", "type": "bytes32", "internalType": "SchemaUID" },
        { "name": "attester", "type": "address", "internalType": "address" },
        {
          "name": "request",
          "type": "tuple",
          "internalType": "struct AttestationRequest",
          "components": [
            {
              "name": "moduleAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "expirationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            { "name": "data", "type": "bytes", "internalType": "bytes" },
            {
              "name": "moduleTypes",
              "type": "uint256[]",
              "internalType": "ModuleType[]"
            }
          ]
        },
        { "name": "signature", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "attest",
      "inputs": [
        { "name": "schemaUID", "type": "bytes32", "internalType": "SchemaUID" },
        {
          "name": "request",
          "type": "tuple",
          "internalType": "struct AttestationRequest",
          "components": [
            {
              "name": "moduleAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "expirationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            { "name": "data", "type": "bytes", "internalType": "bytes" },
            {
              "name": "moduleTypes",
              "type": "uint256[]",
              "internalType": "ModuleType[]"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "attest",
      "inputs": [
        { "name": "schemaUID", "type": "bytes32", "internalType": "SchemaUID" },
        {
          "name": "requests",
          "type": "tuple[]",
          "internalType": "struct AttestationRequest[]",
          "components": [
            {
              "name": "moduleAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "expirationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            { "name": "data", "type": "bytes", "internalType": "bytes" },
            {
              "name": "moduleTypes",
              "type": "uint256[]",
              "internalType": "ModuleType[]"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "attesterNonce",
      "inputs": [
        { "name": "attester", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "nonce", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "calcModuleAddress",
      "inputs": [
        { "name": "salt", "type": "bytes32", "internalType": "bytes32" },
        { "name": "initCode", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "check",
      "inputs": [
        { "name": "module", "type": "address", "internalType": "address" },
        {
          "name": "attesters",
          "type": "address[]",
          "internalType": "address[]"
        },
        { "name": "threshold", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "check",
      "inputs": [
        { "name": "module", "type": "address", "internalType": "address" },
        {
          "name": "moduleType",
          "type": "uint256",
          "internalType": "ModuleType"
        },
        {
          "name": "attesters",
          "type": "address[]",
          "internalType": "address[]"
        },
        { "name": "threshold", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "check",
      "inputs": [
        { "name": "module", "type": "address", "internalType": "address" },
        {
          "name": "moduleType",
          "type": "uint256",
          "internalType": "ModuleType"
        }
      ],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "check",
      "inputs": [
        { "name": "module", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "checkForAccount",
      "inputs": [
        {
          "name": "smartAccount",
          "type": "address",
          "internalType": "address"
        },
        { "name": "module", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "checkForAccount",
      "inputs": [
        {
          "name": "smartAccount",
          "type": "address",
          "internalType": "address"
        },
        { "name": "module", "type": "address", "internalType": "address" },
        {
          "name": "moduleType",
          "type": "uint256",
          "internalType": "ModuleType"
        }
      ],
      "outputs": [],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "deployModule",
      "inputs": [
        { "name": "salt", "type": "bytes32", "internalType": "bytes32" },
        {
          "name": "resolverUID",
          "type": "bytes32",
          "internalType": "ResolverUID"
        },
        { "name": "initCode", "type": "bytes", "internalType": "bytes" },
        { "name": "metadata", "type": "bytes", "internalType": "bytes" },
        { "name": "resolverContext", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        {
          "name": "moduleAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "deployViaFactory",
      "inputs": [
        { "name": "factory", "type": "address", "internalType": "address" },
        { "name": "callOnFactory", "type": "bytes", "internalType": "bytes" },
        { "name": "metadata", "type": "bytes", "internalType": "bytes" },
        {
          "name": "resolverUID",
          "type": "bytes32",
          "internalType": "ResolverUID"
        },
        { "name": "resolverContext", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        {
          "name": "moduleAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "eip712Domain",
      "inputs": [],
      "outputs": [
        { "name": "fields", "type": "bytes1", "internalType": "bytes1" },
        { "name": "name", "type": "string", "internalType": "string" },
        { "name": "version", "type": "string", "internalType": "string" },
        { "name": "chainId", "type": "uint256", "internalType": "uint256" },
        {
          "name": "verifyingContract",
          "type": "address",
          "internalType": "address"
        },
        { "name": "salt", "type": "bytes32", "internalType": "bytes32" },
        {
          "name": "extensions",
          "type": "uint256[]",
          "internalType": "uint256[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "findAttestation",
      "inputs": [
        { "name": "module", "type": "address", "internalType": "address" },
        { "name": "attester", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "attestation",
          "type": "tuple",
          "internalType": "struct AttestationRecord",
          "components": [
            { "name": "time", "type": "uint48", "internalType": "uint48" },
            {
              "name": "expirationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "revocationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "moduleTypes",
              "type": "uint32",
              "internalType": "PackedModuleTypes"
            },
            {
              "name": "moduleAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "dataPointer",
              "type": "address",
              "internalType": "AttestationDataRef"
            },
            {
              "name": "schemaUID",
              "type": "bytes32",
              "internalType": "SchemaUID"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "findAttestations",
      "inputs": [
        { "name": "module", "type": "address", "internalType": "address" },
        {
          "name": "attesters",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [
        {
          "name": "attestations",
          "type": "tuple[]",
          "internalType": "struct AttestationRecord[]",
          "components": [
            { "name": "time", "type": "uint48", "internalType": "uint48" },
            {
              "name": "expirationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "revocationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "moduleTypes",
              "type": "uint32",
              "internalType": "PackedModuleTypes"
            },
            {
              "name": "moduleAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "attester",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "dataPointer",
              "type": "address",
              "internalType": "AttestationDataRef"
            },
            {
              "name": "schemaUID",
              "type": "bytes32",
              "internalType": "SchemaUID"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "findModule",
      "inputs": [
        {
          "name": "moduleAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "moduleRecord",
          "type": "tuple",
          "internalType": "struct ModuleRecord",
          "components": [
            {
              "name": "resolverUID",
              "type": "bytes32",
              "internalType": "ResolverUID"
            },
            { "name": "sender", "type": "address", "internalType": "address" },
            { "name": "metadata", "type": "bytes", "internalType": "bytes" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "findResolver",
      "inputs": [
        { "name": "uid", "type": "bytes32", "internalType": "ResolverUID" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct ResolverRecord",
          "components": [
            {
              "name": "resolver",
              "type": "address",
              "internalType": "contract IExternalResolver"
            },
            {
              "name": "resolverOwner",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "findSchema",
      "inputs": [
        { "name": "uid", "type": "bytes32", "internalType": "SchemaUID" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct SchemaRecord",
          "components": [
            {
              "name": "registeredAt",
              "type": "uint48",
              "internalType": "uint48"
            },
            {
              "name": "validator",
              "type": "address",
              "internalType": "contract IExternalSchemaValidator"
            },
            { "name": "schema", "type": "string", "internalType": "string" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "findTrustedAttesters",
      "inputs": [
        { "name": "smartAccount", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "attesters",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDigest",
      "inputs": [
        {
          "name": "request",
          "type": "tuple",
          "internalType": "struct AttestationRequest",
          "components": [
            {
              "name": "moduleAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "expirationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            { "name": "data", "type": "bytes", "internalType": "bytes" },
            {
              "name": "moduleTypes",
              "type": "uint256[]",
              "internalType": "ModuleType[]"
            }
          ]
        },
        { "name": "attester", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "digest", "type": "bytes32", "internalType": "bytes32" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDigest",
      "inputs": [
        {
          "name": "requests",
          "type": "tuple[]",
          "internalType": "struct RevocationRequest[]",
          "components": [
            {
              "name": "moduleAddress",
              "type": "address",
              "internalType": "address"
            }
          ]
        },
        { "name": "attester", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "digest", "type": "bytes32", "internalType": "bytes32" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDigest",
      "inputs": [
        {
          "name": "request",
          "type": "tuple",
          "internalType": "struct RevocationRequest",
          "components": [
            {
              "name": "moduleAddress",
              "type": "address",
              "internalType": "address"
            }
          ]
        },
        { "name": "attester", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "digest", "type": "bytes32", "internalType": "bytes32" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getDigest",
      "inputs": [
        {
          "name": "requests",
          "type": "tuple[]",
          "internalType": "struct AttestationRequest[]",
          "components": [
            {
              "name": "moduleAddress",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "expirationTime",
              "type": "uint48",
              "internalType": "uint48"
            },
            { "name": "data", "type": "bytes", "internalType": "bytes" },
            {
              "name": "moduleTypes",
              "type": "uint256[]",
              "internalType": "ModuleType[]"
            }
          ]
        },
        { "name": "attester", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "digest", "type": "bytes32", "internalType": "bytes32" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "registerModule",
      "inputs": [
        {
          "name": "resolverUID",
          "type": "bytes32",
          "internalType": "ResolverUID"
        },
        {
          "name": "moduleAddress",
          "type": "address",
          "internalType": "address"
        },
        { "name": "metadata", "type": "bytes", "internalType": "bytes" },
        { "name": "resolverContext", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "registerResolver",
      "inputs": [
        {
          "name": "resolver",
          "type": "address",
          "internalType": "contract IExternalResolver"
        }
      ],
      "outputs": [
        { "name": "uid", "type": "bytes32", "internalType": "ResolverUID" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "registerSchema",
      "inputs": [
        { "name": "schema", "type": "string", "internalType": "string" },
        {
          "name": "validator",
          "type": "address",
          "internalType": "contract IExternalSchemaValidator"
        }
      ],
      "outputs": [
        { "name": "uid", "type": "bytes32", "internalType": "SchemaUID" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "revoke",
      "inputs": [
        {
          "name": "requests",
          "type": "tuple[]",
          "internalType": "struct RevocationRequest[]",
          "components": [
            {
              "name": "moduleAddress",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "revoke",
      "inputs": [
        { "name": "attester", "type": "address", "internalType": "address" },
        {
          "name": "requests",
          "type": "tuple[]",
          "internalType": "struct RevocationRequest[]",
          "components": [
            {
              "name": "moduleAddress",
              "type": "address",
              "internalType": "address"
            }
          ]
        },
        { "name": "signature", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "revoke",
      "inputs": [
        {
          "name": "request",
          "type": "tuple",
          "internalType": "struct RevocationRequest",
          "components": [
            {
              "name": "moduleAddress",
              "type": "address",
              "internalType": "address"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "revoke",
      "inputs": [
        { "name": "attester", "type": "address", "internalType": "address" },
        {
          "name": "request",
          "type": "tuple",
          "internalType": "struct RevocationRequest",
          "components": [
            {
              "name": "moduleAddress",
              "type": "address",
              "internalType": "address"
            }
          ]
        },
        { "name": "signature", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setResolver",
      "inputs": [
        { "name": "uid", "type": "bytes32", "internalType": "ResolverUID" },
        {
          "name": "resolver",
          "type": "address",
          "internalType": "contract IExternalResolver"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferResolverOwnership",
      "inputs": [
        { "name": "uid", "type": "bytes32", "internalType": "ResolverUID" },
        { "name": "newOwner", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "trustAttesters",
      "inputs": [
        { "name": "threshold", "type": "uint8", "internalType": "uint8" },
        {
          "name": "attesters",
          "type": "address[]",
          "internalType": "address[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "Attested",
      "inputs": [
        {
          "name": "moduleAddress",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "attester",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "schemaUID",
          "type": "bytes32",
          "indexed": false,
          "internalType": "SchemaUID"
        },
        {
          "name": "sstore2Pointer",
          "type": "address",
          "indexed": true,
          "internalType": "AttestationDataRef"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ModuleRegistration",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "NewResolver",
      "inputs": [
        {
          "name": "uid",
          "type": "bytes32",
          "indexed": true,
          "internalType": "ResolverUID"
        },
        {
          "name": "resolver",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "NewResolverOwner",
      "inputs": [
        {
          "name": "uid",
          "type": "bytes32",
          "indexed": true,
          "internalType": "ResolverUID"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "NewTrustedAttesters",
      "inputs": [
        {
          "name": "smartAccount",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ResolverRevocationError",
      "inputs": [
        {
          "name": "resolver",
          "type": "address",
          "indexed": false,
          "internalType": "contract IExternalResolver"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Revoked",
      "inputs": [
        {
          "name": "moduleAddress",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "revoker",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "schema",
          "type": "bytes32",
          "indexed": false,
          "internalType": "SchemaUID"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SchemaRegistered",
      "inputs": [
        {
          "name": "uid",
          "type": "bytes32",
          "indexed": true,
          "internalType": "SchemaUID"
        },
        {
          "name": "registerer",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    { "type": "error", "name": "AccessDenied", "inputs": [] },
    { "type": "error", "name": "AlreadyAttested", "inputs": [] },
    {
      "type": "error",
      "name": "AlreadyRegistered",
      "inputs": [
        { "name": "module", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "AlreadyRevoked", "inputs": [] },
    { "type": "error", "name": "AttestationNotFound", "inputs": [] },
    { "type": "error", "name": "DifferentResolvers", "inputs": [] },
    {
      "type": "error",
      "name": "ExternalError_ModuleRegistration",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ExternalError_ResolveAttestation",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ExternalError_ResolveRevocation",
      "inputs": []
    },
    { "type": "error", "name": "ExternalError_SchemaValidation", "inputs": [] },
    {
      "type": "error",
      "name": "FactoryCallFailed",
      "inputs": [
        { "name": "factory", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "InsufficientAttestations", "inputs": [] },
    { "type": "error", "name": "InvalidAddress", "inputs": [] },
    { "type": "error", "name": "InvalidAttestation", "inputs": [] },
    { "type": "error", "name": "InvalidDeployment", "inputs": [] },
    { "type": "error", "name": "InvalidExpirationTime", "inputs": [] },
    { "type": "error", "name": "InvalidModuleType", "inputs": [] },
    { "type": "error", "name": "InvalidModuleTypes", "inputs": [] },
    {
      "type": "error",
      "name": "InvalidResolver",
      "inputs": [
        {
          "name": "resolver",
          "type": "address",
          "internalType": "contract IExternalResolver"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidResolverUID",
      "inputs": [
        { "name": "uid", "type": "bytes32", "internalType": "ResolverUID" }
      ]
    },
    { "type": "error", "name": "InvalidSalt", "inputs": [] },
    { "type": "error", "name": "InvalidSchema", "inputs": [] },
    {
      "type": "error",
      "name": "InvalidSchemaValidator",
      "inputs": [
        {
          "name": "validator",
          "type": "address",
          "internalType": "contract IExternalSchemaValidator"
        }
      ]
    },
    { "type": "error", "name": "InvalidSignature", "inputs": [] },
    { "type": "error", "name": "InvalidThreshold", "inputs": [] },
    { "type": "error", "name": "InvalidTrustedAttesterInput", "inputs": [] },
    {
      "type": "error",
      "name": "ModuleAddressIsNotContract",
      "inputs": [
        {
          "name": "moduleAddress",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ModuleNotFoundInRegistry",
      "inputs": [
        { "name": "module", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "NoTrustedAttestersFound", "inputs": [] },
    { "type": "error", "name": "ResolverAlreadyExists", "inputs": [] },
    {
      "type": "error",
      "name": "RevokedAttestation",
      "inputs": [
        { "name": "attester", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "SchemaAlreadyExists",
      "inputs": [
        { "name": "uid", "type": "bytes32", "internalType": "SchemaUID" }
      ]
    }
  ],
  "bytecode": {
    "object": "0x61014060405234801562000011575f80fd5b50604051620000209062000108565b604051809103905ff0801580156200003a573d5f803e3d5ffd5b506001600160a01b03166080523060a0524660c0526060806200009d60408051808201825260128152715268696e6573746f6e65526567697374727960701b60208083019190915282518084019093526004835263076312e360e41b9083015291565b815160209283012081519183019190912060e0829052610100819052604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8152938401929092529082015246606082015230608082015260a090206101205250620001169050565b6101c9806200482783390190565b60805160a05160c05160e05161010051610120516146c96200015e5f395f6120b701525f61217101525f61214b01525f6120fb01525f6120d801525f611b1401526146c95ff3fe6080604052600436106101fc575f3560e01c80637cb2afd811610113578063b65d10121161009d578063dd0fd2781161006d578063dd0fd27814610675578063e14f3d32146106a1578063f05c04e1146106c0578063f095ec1b146106df578063f190e2b1146106fe575f80fd5b8063b65d1012146105df578063b6b791a1146105fe578063c23697a81461062a578063d904862414610649575f80fd5b8063945e3641116100e3578063945e36411461052b57806396fb72171461054a5780639f3e1b5314610569578063b060cb1e14610588578063b50b706b146105b4575f80fd5b80637cb2afd8146104a757806384b0196e146104c657806388dc678d146104ed5780638e6ec8241461050c575f80fd5b80634990a6821161019457806355f47dde1161016457806355f47dde146103a2578063617734d0146103c157806370d2af24146103e057806371c61a2b146103ff57806377efcab414610488575f80fd5b80634990a682146103265780634c13560c146103455780634ece78ca14610364578063529562a114610383575f80fd5b80631d4d9810116101cf5780631d4d98101461028f57806329757d37146102bc5780632b30c899146102db5780632ed9446714610307575f80fd5b806303b79c841461020057806304a1f298146102305780630bb30abc146102515780631896f70a14610270575b5f80fd5b61021361020e36600461374f565b610711565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561023b575f80fd5b5061024f61024a366004613847565b610789565b005b34801561025c575f80fd5b5061024f61026b3660046138cc565b610842565b34801561027b575f80fd5b5061024f61028a366004613923565b610955565b34801561029a575f80fd5b506102ae6102a9366004613951565b610a94565b604051908152602001610227565b3480156102c7575f80fd5b5061024f6102d63660046139b3565b610c7f565b3480156102e6575f80fd5b506102fa6102f5366004613a33565b610d30565b6040516102279190613b01565b348015610312575f80fd5b5061024f610321366004613b4f565b610e71565b348015610331575f80fd5b5061024f610340366004613bad565b610f65565b348015610350575f80fd5b5061024f61035f366004613beb565b610f74565b34801561036f575f80fd5b5061024f61037e366004613c17565b610f7f565b34801561038e575f80fd5b5061024f61039d366004613c75565b611027565b3480156103ad575f80fd5b506102ae6103bc366004613cb3565b611037565b3480156103cc575f80fd5b506102ae6103db366004613cf6565b611070565b3480156103eb575f80fd5b506102ae6103fa366004613d39565b6110ac565b34801561040a575f80fd5b50610461610419366004613d54565b604080518082019091525f8082526020820152505f9081526020818152604091829020825180840190935280546001600160a01b039081168452600190910154169082015290565b6040805182516001600160a01b039081168252602093840151169281019290925201610227565b348015610493575f80fd5b5061024f6104a2366004613d6b565b6110de565b3480156104b2575f80fd5b5061024f6104c1366004613923565b6110eb565b3480156104d1575f80fd5b506104da61118b565b6040516102279796959493929190613dd2565b3480156104f8575f80fd5b5061024f610507366004613e69565b6111f3565b348015610517575f80fd5b5061024f610526366004613eb7565b61124b565b348015610536575f80fd5b5061024f610545366004613f16565b6112fa565b348015610555575f80fd5b5061024f610564366004613f59565b611305565b348015610574575f80fd5b506102ae610583366004613f83565b611310565b348015610593575f80fd5b506105a76105a2366004613d54565b61148e565b6040516102279190613f9e565b3480156105bf575f80fd5b506102ae6105ce366004613f83565b60056020525f908152604090205481565b3480156105ea575f80fd5b5061024f6105f9366004613fdc565b611584565b348015610609575f80fd5b5061061d610618366004613f83565b611590565b604051610227919061403a565b348015610635575f80fd5b5061024f610644366004613f83565b6115ef565b348015610654575f80fd5b50610668610663366004613beb565b6115fa565b604051610227919061404c565b348015610680575f80fd5b5061069461068f366004613f83565b611693565b604051610227919061405b565b3480156106ac575f80fd5b506102ae6106bb366004613cf6565b6117e1565b3480156106cb575f80fd5b5061024f6106da36600461409b565b611815565b3480156106ea575f80fd5b506102136106f93660046140bd565b611a82565b61021361070c3660046140f7565b611a8e565b5f87815260208190526040812060018101546001600160a01b03166107515760405163f184406b60e01b8152600481018a90526024015b60405180910390fd5b61075c88888c611ba0565b91505f61076c83338c8a8a611c70565b905061077b8184848888611dea565b505098975050505050505050565b6001600160a01b0385165f908152600560205260408120805482906107ad90614197565b918290555090505f6107c86107c3878785611e9b565b6120b5565b90505f61080b888387878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506121cb92505050565b90508061082b57604051638baa579f60e01b815260040160405180910390fd5b610837888a89896122c8565b505050505050505050565b8180158061084e575081155b1561086c576040516305a74e6160e01b815260040160405180910390fd5b8181101561088d576040516339093e6560e21b815260040160405180910390fd5b5f805b82811015610935575f8686838181106108ab576108ab6141af565b90506020020160208101906108c09190613f83565b9050826001600160a01b0316816001600160a01b0316116108f45760405163cd0ecff160e01b815260040160405180910390fd5b80925061090b5f6109058a846123e2565b9061240b565b1561091c57610919856141c3565b94505b845f0361092c575050505061094f565b50600101610890565b506040516339093e6560e21b815260040160405180910390fd5b50505050565b806001600160a01b03811615806109d657506040516301ffc9a760e01b81526314f0f87d60e21b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa1580156109b0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109d491906141d8565b155b156109ff5760405163f9492e7560e01b81526001600160a01b0382166004820152602401610748565b5f8381526020819052604090206001015483906001600160a01b03163314610a3a57604051634ca8886760e01b815260040160405180910390fd5b5f8481526020819052604080822080546001600160a01b0319166001600160a01b03871690811782559151909287917f335721b01866dc23fbee8b6b2c7b1e14d6f05c28cd35a2c934239f94095602a09190a35050505050565b5f816001600160a01b03811615801590610b1857506040516301ffc9a760e01b815263b2275fa960e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa158015610af2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b1691906141d8565b155b15610b4157604051630f09140760e01b81526001600160a01b0382166004820152602401610748565b5f6040518060600160405280610b544290565b65ffffffffffff168152602001856001600160a01b0316815260200187878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050509152509050610bb2816124ae565b5f8181526002602052604090205490935065ffffffffffff1615610bec57604051635988c65560e11b815260048101849052602401610748565b5f8381526002602090815260409182902083518154928501516001600160a01b0316600160301b026001600160d01b031990931665ffffffffffff90911617919091178155908201518291906001820190610c479082614281565b505060405133915084907fd16733fb8c2a502f4e1d1d63970cbab355e37ff6d6d12a215b7d0197ea5535f4905f90a350509392505050565b6001600160a01b0384165f90815260056020526040812080548290610ca390614197565b918290555090505f610cb86107c386846124e9565b90505f610cfb878387878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506121cb92505050565b905080610d1b57604051638baa579f60e01b815260040160405180910390fd5b610d2687898861262a565b5050505050505050565b606081806001600160401b03811115610d4b57610d4b6141f7565b604051908082528060200260200182016040528015610d8457816020015b610d716136c8565b815260200190600190039081610d695790505b5091505f5b81811015610e6857610dc186868684818110610da757610da76141af565b9050602002016020810190610dbc9190613f83565b6123e2565b6040805161010081018252825465ffffffffffff8082168352600160301b820481166020840152600160601b82041692820192909252600160901b90910463ffffffff16606082015260018201546001600160a01b0390811660808301526002830154811660a083015260038301541660c082015260049091015460e08201528351849083908110610e5557610e556141af565b6020908102919091010152600101610d89565b50509392505050565b81801580610e7d575081155b15610e9b576040516305a74e6160e01b815260040160405180910390fd5b81811015610ebc576040516339093e6560e21b815260040160405180910390fd5b5f805b82811015610935575f868683818110610eda57610eda6141af565b9050602002016020810190610eef9190613f83565b9050826001600160a01b0316816001600160a01b031611610f235760405163cd0ecff160e01b815260040160405180910390fd5b809250610f34886109058b846123e2565b15610f4557610f42856141c3565b94505b845f03610f555750505050610f5e565b50600101610ebf565b5050505050565b610f7033838361266c565b5050565b610f7082825f612761565b6001600160a01b0385165f90815260056020526040812080548290610fa390614197565b918290555090505f610fb96107c3878785612913565b90505f610ffc888387878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506121cb92505050565b90508061101c57604051638baa579f60e01b815260040160405180910390fd5b610d2688888861266c565b611032838383612761565b505050565b6001600160a01b0381165f90815260056020526040812054611069906107c39061106290600161433c565b85906124e9565b9392505050565b6001600160a01b0381165f908152600560205260408120546110a4906107c39061109b90600161433c565b86908690612913565b949350505050565b6001600160a01b0381165f90815260056020526040812054611069906107c3906110d790600161433c565b8590612a17565b6110e83382612a8a565b50565b5f8281526020819052604090206001015482906001600160a01b0316331461112657604051634ca8886760e01b815260040160405180910390fd5b5f838152602081815260409182902060010180546001600160a01b0319166001600160a01b038616908117909155915191825284917f7a2c54badf601a71ed23c3ec8c070bac418dfd4fb160e0351861983746662d77910160405180910390a2505050565b600f60f81b6060805f8080836111e160408051808201825260128152715268696e6573746f6e65526567697374727960701b60208083019190915282518084019093526004835263076312e360e41b9083015291565b97989097965046955030945091925090565b5f86815260208190526040902060018101546001600160a01b031661122e5760405163f184406b60e01b815260048101889052602401610748565b5f61123c875f8a8989611c70565b9050610d268188848787611dea565b6001600160a01b0384165f9081526005602052604081208054829061126f90614197565b918290555090505f6112846107c38684612a17565b90505f6112c7878387878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506121cb92505050565b9050806112e757604051638baa579f60e01b815260040160405180910390fd5b6112f18787612a8a565b50505050505050565b610f7033838361262a565b610f70338383612761565b5f816001600160a01b038116158061139257506040516301ffc9a760e01b81526314f0f87d60e21b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa15801561136c573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061139091906141d8565b155b156113bb5760405163f9492e7560e01b81526001600160a01b0382166004820152602401610748565b604080518082019091526001600160a01b03841681523360208201526113e081612ab3565b5f818152602081905260409020549093506001600160a01b03161561141857604051630f5f2ba160e21b815260040160405180910390fd5b5f83815260208181526040808320845181546001600160a01b03199081166001600160a01b03928316178355938601516001909201805490941691811691909117909255519086169185917f335721b01866dc23fbee8b6b2c7b1e14d6f05c28cd35a2c934239f94095602a09190a35050919050565b60408051606080820183525f8083526020830152918101919091525f828152600260209081526040918290208251606081018452815465ffffffffffff81168252600160301b90046001600160a01b03169281019290925260018101805492939192918401916114fd9061420b565b80601f01602080910402602001604051908101604052809291908181526020018280546115299061420b565b80156115745780601f1061154b57610100808354040283529160200191611574565b820191905f5260205f20905b81548152906001019060200180831161155757829003601f168201915b5050505050815250509050919050565b611032338484846122c8565b60408051606080820183525f80835260208084018290528385018390526001600160a01b03868116835260018083529286902086519485018752805485529283015416908301526002810180549394929391928401916114fd9061420b565b6110e833825f612761565b6116026136c8565b61160c83836123e2565b6040805161010081018252825465ffffffffffff8082168352600160301b820481166020840152600160601b82041692820192909252600160901b90910463ffffffff16606082015260018201546001600160a01b0390811660808301526002830154811660a083015260038301541660c082015260049091015460e08201529392505050565b6001600160a01b038082165f9081526003602052604081208054606093919260ff82169262010000909204909116908290036116d157505050919050565b816001600160401b038111156116e9576116e96141f7565b604051908082528060200260200182016040528015611712578160200160208202803683370190505b50935080845f81518110611728576117286141af565b6001600160a01b039092166020928302919091019091015260015b828110156117d857836001015f8660018461175e919061434f565b8151811061176e5761176e6141af565b6020908102919091018101516001600160a01b0390811683528282019390935260409182015f9081208a85168252909152205486519116908690839081106117b8576117b86141af565b6001600160a01b0390921660209283029190910190910152600101611743565b50505050919050565b6001600160a01b0381165f908152600560205260408120546110a4906107c39061180c90600161433c565b86908690611e9b565b604080516020808402828101820190935283825283926118519291869185918291908501908490808284375f92019190915250612ae492505050565b61186e5760405163cd0ecff160e01b815260040160405180910390fd5b80158061187b575060ff81115b156118995760405163cd0ecff160e01b815260040160405180910390fd5b8181146118b95760405163cd0ecff160e01b815260040160405180910390fd5b5f838382816118ca576118ca6141af565b90506020020160208101906118df9190613f83565b6001600160a01b0316036119065760405163cd0ecff160e01b815260040160405180910390fd5b335f90815260036020526040902060ff85168210156119385760405163aabd5a0960e01b815260040160405180910390fd5b805460ff8681166101000261ffff199092169084161717815583835f81611961576119616141af565b90506020020160208101906119769190613f83565b81546001600160a01b0391909116620100000262010000600160b01b0319909116178155816119a4816141c3565b9250505f5b82811015611a50575f8585838181106119c4576119c46141af565b90506020020160208101906119d99190613f83565b905085856119e884600161433c565b8181106119f7576119f76141af565b9050602002016020810190611a0c9190613f83565b6001600160a01b039182165f90815260018581016020908152604080842033855290915290912080546001600160a01b0319169290931691909117909155016119a9565b5060405133907ff689fb4afceb60ac48a5ca8113a5a57cb15e51d317f0ec57e07340192d9fb459905f90a25050505050565b5f6110a4838386612aee565b5f83815260208190526040812060018101546001600160a01b0316611ac95760405163f184406b60e01b815260048101869052602401610748565b306001600160a01b038b1603611afd576040516301b3a38360e21b81526001600160a01b038b166004820152602401610748565b604051630d84daa960e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636c26d548903490611b4f908e908e908e9060040161438a565b60206040518083038185885af1158015611b6b573d5f803e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190611b9091906143b7565b91505f61076c835f888b8b611c70565b5f81606081901c3314801590611bbf57506001600160601b0319811615155b15611bdd576040516381e69d9b60e01b815260040160405180910390fd5b5f85858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920182905250939450611c23925089915088905087612aee565b905081602001825186818334f595505050806001600160a01b0316846001600160a01b031614611c665760405163e6c4247b60e01b815260040160405180910390fd5b5050509392505050565b60408051606080820183525f8083526020830152918101919091526001600160a01b0386165f90815260016020526040812054611cac91141590565b15611cd5576040516345ed80e960e01b81526001600160a01b0387166004820152602401610748565b6001600160a01b0386163b611cfd57604051637483e90760e01b815260040160405180910390fd5b6040518060600160405280858152602001866001600160a01b0316815260200184848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201829052509390945250506001600160a01b03898116825260016020818152604093849020865181559086015191810180546001600160a01b03191692909316919091179091559083015192935083929091506002820190611dab9082614281565b50506040516001600160a01b03881691507fbc854169953f463b8509327459b9a9785beb45f6cdafdad8e75b9a33f4016768905f90a295945050505050565b82546001600160a01b03168015801590611e755750604051633da3df8760e21b81526001600160a01b0382169063f68f7e1c90611e3390339089908b90899089906004016143d2565b6020604051808303815f875af1158015611e4f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e7391906141d8565b155b15611e9357604051633b0cfdad60e01b815260040160405180910390fd5b505050505050565b5f606083825b8181101561204e57827fe78ff87b9693fc54b8a43c3b84702ae7bfbb7fc6235105790033913428381e1f888884818110611edd57611edd6141af565b9050602002810190611eef919061441c565b611efd906020810190613f83565b898985818110611f0f57611f0f6141af565b9050602002810190611f21919061441c565b611f3290604081019060200161443a565b8a8a86818110611f4457611f446141af565b9050602002810190611f56919061441c565b611f6490604081019061445f565b604051611f729291906144a1565b60405180910390208b8b87818110611f8c57611f8c6141af565b9050602002810190611f9e919061441c565b611fac9060608101906144b0565b604051602001611fbd9291906144f5565b60408051601f198184030181528282528051602091820120908301969096526001600160a01b039094169381019390935265ffffffffffff9091166060830152608082015260a081019190915260c00160405160208183030381529060405280519060200120604051602001612034929190614523565b60408051601f198184030181529190529250600101611ea1565b508151602080840191909120604080517f432f54a02ff5e7b0998295a12eea6e09f826e00e15ebb49cdb5dd6914e7eadf793810193909352820152606081018590526080015b60405160208183030381529060405280519060200120925050509392505050565b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000030147f00000000000000000000000000000000000000000000000000000000000000004614166121a85750604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81527f000000000000000000000000000000000000000000000000000000000000000060208201527f00000000000000000000000000000000000000000000000000000000000000009181019190915246606082015230608082015260a090205b6719010000000000005f5280601a5281603a52604260182090505f603a52919050565b6001600160a01b03909216915f831561106957604051835f5260208301516040526040835103612237576040830151601b8160ff1c016020528060011b60011c606052506020600160805f60015afa805186183d151761223557505f606052604052506001611069565b505b604183510361227a5760608301515f1a60205260408301516060526020600160805f60015afa805186183d151761227857505f606052604052506001611069565b505b5f60605280604052631626ba7e60e01b808252846004830152602482016040815284516020018060448501828860045afa505060208160443d01858a5afa9051909114169150509392505050565b805f816001600160401b038111156122e2576122e26141f7565b60405190808252806020026020018201604052801561231b57816020015b6123086136c8565b8152602001906001900390816123005790505b5090505f805b838110156123b1575f612358888a898986818110612341576123416141af565b9050602002810190612353919061441c565b612b7a565b85848151811061236a5761236a6141af565b602002602001018193508290525050815f03612388578092506123a8565b8281146123a857604051631ac80ea760e01b815260040160405180910390fd5b50600101612321565b505f8681526002602052604090206123ca908390612f7e565b5f8181526020819052604090206112f190839061304d565b6001600160a01b039182165f908152600460209081526040808320939094168252919091522090565b81545f9063ffffffff81811691603081901c821691606082901c81169160901c168361243d575f9450505050506124a8565b821580159061244b57508242115b1561245c575f9450505050506124a8565b811561246e575f9450505050506124a8565b851515801561248e575061248c63ffffffff8083169088906130ef16565b155b1561249f575f9450505050506124a8565b60019450505050505b92915050565b5f33826040015183602001516040516020016124cc93929190614544565b604051602081830303815290604052805190602001209050919050565b5f7fe6fb0252edfa0719f65bc4b7ff11df181a55bbef752d6bacaff6f4a369160b757fe78ff87b9693fc54b8a43c3b84702ae7bfbb7fc6235105790033913428381e1f6125396020860186613f83565b612549604087016020880161443a565b612556604088018861445f565b6040516125649291906144a1565b60405190819003902061257a60608901896144b0565b60405160200161258b9291906144f5565b60408051601f198184030181528282528051602091820120908301969096526001600160a01b039094169381019390935265ffffffffffff9091166060830152608082015260a081019190915260c0015b60408051601f19818403018152828252805160209182012090830193909352810191909152606081018390526080015b60405160208183030381529060405280519060200120905092915050565b5f80612637848685612b7a565b5f868152600260205260409020919350915061265490839061310d565b5f818152602081905260409020610f5e90839061317c565b805f816001600160401b03811115612686576126866141f7565b6040519080825280602002602001820160405280156126bf57816020015b6126ac6136c8565b8152602001906001900390816126a45790505b5090505f805b83811015612748575f6126ef888888858181106126e4576126e46141af565b90506020020161321d565b858481518110612701576127016141af565b602002602001018193508290525050815f0361271f5780925061273f565b82811461273f57604051631ac80ea760e01b815260040160405180910390fd5b506001016126c5565b505f8181526020819052604090206112f1908390613410565b6001600160a01b038084165f9081526003602052604090208054909160ff80831692610100810490911691620100009091041680158061279f575081155b156127bd576040516305a74e6160e01b815260040160405180910390fd5b8160010361284f575f6127d087836123e2565b90506127dc818761240b565b156127eb575050505050505050565b5f5b84811015610935576001600160a01b039283165f90815260018701602090815260408083208c871684529091529020549092169161282b88846123e2565b9150612837828861240b565b1561284757505050505050505050565b6001016127ed565b5f61285a87836123e2565b9050612866818761240b565b156128795782612875816141c3565b9350505b60015b848110156128f3576001600160a01b039283165f90815260018701602090815260408083208c87168452909152902054909216916128ba88846123e2565b91506128c6828861240b565b156128d957836128d5816141c3565b9450505b835f036128eb57505050505050505050565b60010161287c565b508215610d26576040516339093e6560e21b815260040160405180910390fd5b5f606083825b818110156129cd57827fe772c71320d83e91a3076e1414875f1affb9dbb84c39717315b34b38b9b4ef8e888884818110612955576129556141af565b612969926020918202019081019150613f83565b60405160200161298c9291909182526001600160a01b0316602082015260400190565b604051602081830303815290604052805190602001206040516020016129b3929190614523565b60408051601f198184030181529190529250600101612919565b508151602080840191909120604080517f7d1efebd1edb795fc2fef1b96025f39b311dd4c4481a7f726342969d70b423c89381019390935282015260608101859052608001612094565b5f7f0c087e39c84c32f053f4f3e0086d64914296a605bd371cfe0bdca1d506aed4707fe772c71320d83e91a3076e1414875f1affb9dbb84c39717315b34b38b9b4ef8e612a676020860186613f83565b6040516020016125dc9291909182526001600160a01b0316602082015260400190565b5f80612a96848461321d565b5f8181526020819052604090209193509150610f5e9083906134f5565b80516040516001600160601b031933606090811b821660208401529290921b90911660348201525f906048016124cc565b5f6124a88261353d565b5f30828585604051602001612b049291906144a1565b60405160208183030381529060405280519060200120604051602001612b5a939291906001600160f81b0319815260609390931b6001600160601b03191660018401526015830191909152603582015260550190565b60408051601f198184030181529190528051602090910120949350505050565b612b826136c8565b5f8481526002602052604081205465ffffffffffff16612bb557604051635f9bd90760e11b815260040160405180910390fd5b425f612bc7604086016020870161443a565b65ffffffffffff1614158015612bfc575065ffffffffffff8116612bf1604086016020870161443a565b65ffffffffffff1611155b15612c1a576040516308e8b93760e01b815260040160405180910390fd5b5f612c286020860186613f83565b90505f612c3582886123e2565b805490915065ffffffffffff1615801590612c5e57508054600160601b900465ffffffffffff16155b15612c7c576040516335d9080560e01b815260040160405180910390fd5b6001600160a01b0382165f90815260016020526040902054935083612cbf57604051634eb2dcd760e01b81526001600160a01b0383166004820152602401610748565b5f612cdd612cd66001600160a01b038a1685613576565b88906135ad565b90506040518061010001604052808565ffffffffffff168152602001886020016020810190612d0c919061443a565b65ffffffffffff1681525f6020820152604001612d65612d2f60608b018b6144b0565b808060200260200160405190810160405280939291908181526020018383602002808284375f920191909152506135f992505050565b63ffffffff168152602001846001600160a01b03168152602001896001600160a01b03168152602001826001600160a01b031681526020018a81525095508560045f856001600160a01b03166001600160a01b031681526020019081526020015f205f8a6001600160a01b03166001600160a01b031681526020019081526020015f205f820151815f015f6101000a81548165ffffffffffff021916908365ffffffffffff1602179055506020820151815f0160066101000a81548165ffffffffffff021916908365ffffffffffff1602179055506040820151815f01600c6101000a81548165ffffffffffff021916908365ffffffffffff1602179055506060820151815f0160126101000a81548163ffffffff021916908363ffffffff1602179055506080820151816001015f6101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a0820151816002015f6101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c0820151816003015f6101000a8154816001600160a01b0302191690836001600160a01b0316021790555060e08201518160040155905050806001600160a01b0316886001600160a01b0316846001600160a01b03167ff68f1df3d74509783e9300e8637b046836c091fd39cdcd33b14b0ffdf6940d628c604051612f6a91815260200190565b60405180910390a450505050935093915050565b805465ffffffffffff16612fa557604051635f9bd90760e11b815260040160405180910390fd5b8054600160301b90046001600160a01b0316801580159061302f57506040516365b7641360e11b81526001600160a01b0382169063cb6ec82690612fed908690600401613b01565b6020604051808303815f875af1158015613009573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061302d91906141d8565b155b1561103257604051635e1d867960e01b815260040160405180910390fd5b80546001600160a01b03168061306257505050565b6040516367b14e7760e11b81526001600160a01b0382169063cf629cee9061308e908690600401613b01565b6020604051808303815f875af11580156130aa573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906130ce91906141d8565b15155f0361103257604051635b0ae41f60e01b815260040160405180910390fd5b5f6130fb82600261466b565b831663ffffffff161515905092915050565b805465ffffffffffff1661313457604051635f9bd90760e11b815260040160405180910390fd5b8054600160301b90046001600160a01b0316801580159061302f5750604051637949978f60e01b81526001600160a01b03821690637949978f90612fed90869060040161404c565b80546001600160a01b031680158015906131ff57506040516334c85d0760e01b81526001600160a01b038216906334c85d07906131bd90869060040161404c565b6020604051808303815f875af11580156131d9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906131fd91906141d8565b155b1561103257604051635b0ae41f60e01b815260040160405180910390fd5b6132256136c8565b5f806004816132376020870187613f83565b6001600160a01b03908116825260208083019390935260409182015f90812089831682528452828120835161010081018552815465ffffffffffff8082168352600160301b8204811683890152600160601b82041695820195909552600160901b90940463ffffffff166060850152600180820154841660808601526002820154841660a0860152600382015490931660c0850152600481015460e0850152929650919350916132e990870187613f83565b6001600160a01b03908116825260208201929092526040015f205460c08501519093501661332a5760405163120a2e7760e01b815260040160405180910390fd5b846001600160a01b03168360a001516001600160a01b03161461336057604051634ca8886760e01b815260040160405180910390fd5b604083015165ffffffffffff161561338b5760405163905e710760e01b815260040160405180910390fd5b805465ffffffffffff60601b1916600160601b65ffffffffffff4216021781556001600160a01b0385166133c26020860186613f83565b6001600160a01b03167feee7de70b290c411a060d8bb9b1cba152a40d74147fef0974d7c2b25ac9b718a8560e0015160405161340091815260200190565b60405180910390a3509250929050565b80545f906001600160a01b03168061342c5760019150506124a8565b604051636ac403ff60e11b81526001600160a01b0382169063d58807fe90613458908790600401613b01565b6020604051808303815f875af1925050508015613492575060408051601f3d908101601f1916820190925261348f918101906141d8565b60015b6134db576040516001600160a01b03821681527fbab8c8262d5baeb21d73c5944504fb6c26d6eb88d29af8653bd3382ad8fe56a99060200160405180910390a15f9150506124a8565b80156134ec576001925050506124a8565b505b5092915050565b80545f906001600160a01b0316806135115760019150506124a8565b604051638b6e59ff60e01b81526001600160a01b03821690638b6e59ff9061345890879060040161404c565b805160019060021161357157815160051b82016020830192505b82516020909301805190931091508083188202613557575b505b919050565b6040516001600160601b0319606084811b8216602084015283901b1660348201524260488201524660688201525f9060880161260c565b5f6110696135be604085018561445f565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250869250613680915050565b80515f908180805b838110156136765785818151811061361b5761361b6141af565b60200260200101519150601f821180613639575061363983836130ef565b1561365757604051631092ef5760e11b815260040160405180910390fd5b61366282600261466b565b61366c9084614676565b9250600101613601565b5090949350505050565b5f8251600181018060401b6bfd61000080600a3d393df3001761ffff821186015283600a8201601587015ff5925050816136c15763301164255f526004601cfd5b9092525090565b60408051610100810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915290565b5f8083601f84011261371b575f80fd5b5081356001600160401b03811115613731575f80fd5b602083019150836020828501011115613748575f80fd5b9250929050565b5f805f805f805f8060a0898b031215613766575f80fd5b883597506020890135965060408901356001600160401b038082111561378a575f80fd5b6137968c838d0161370b565b909850965060608b01359150808211156137ae575f80fd5b6137ba8c838d0161370b565b909650945060808b01359150808211156137d2575f80fd5b506137df8b828c0161370b565b999c989b5096995094979396929594505050565b6001600160a01b03811681146110e8575f80fd5b5f8083601f840112613817575f80fd5b5081356001600160401b0381111561382d575f80fd5b6020830191508360208260051b8501011115613748575f80fd5b5f805f805f806080878903121561385c575f80fd5b86359550602087013561386e816137f3565b945060408701356001600160401b0380821115613889575f80fd5b6138958a838b01613807565b909650945060608901359150808211156138ad575f80fd5b506138ba89828a0161370b565b979a9699509497509295939492505050565b5f805f80606085870312156138df575f80fd5b84356138ea816137f3565b935060208501356001600160401b03811115613904575f80fd5b61391087828801613807565b9598909750949560400135949350505050565b5f8060408385031215613934575f80fd5b823591506020830135613946816137f3565b809150509250929050565b5f805f60408486031215613963575f80fd5b83356001600160401b03811115613978575f80fd5b6139848682870161370b565b9094509250506020840135613998816137f3565b809150509250925092565b5f6080828403121561356f575f80fd5b5f805f805f608086880312156139c7575f80fd5b8535945060208601356139d9816137f3565b935060408601356001600160401b03808211156139f4575f80fd5b613a0089838a016139a3565b94506060880135915080821115613a15575f80fd5b50613a228882890161370b565b969995985093965092949392505050565b5f805f60408486031215613a45575f80fd5b8335613a50816137f3565b925060208401356001600160401b03811115613a6a575f80fd5b613a7686828701613807565b9497909650939450505050565b65ffffffffffff8082511683528060208301511660208401528060408301511660408401525063ffffffff6060820151166060830152608081015160018060a01b0380821660808501528060a08401511660a0850152505060c0810151613af560c08401826001600160a01b03169052565b5060e090810151910152565b602080825282518282018190525f9190848201906040850190845b81811015613b4357613b2f838551613a83565b928401926101009290920191600101613b1c565b50909695505050505050565b5f805f805f60808688031215613b63575f80fd5b8535613b6e816137f3565b94506020860135935060408601356001600160401b03811115613b8f575f80fd5b613b9b88828901613807565b96999598509660600135949350505050565b5f8060208385031215613bbe575f80fd5b82356001600160401b03811115613bd3575f80fd5b613bdf85828601613807565b90969095509350505050565b5f8060408385031215613bfc575f80fd5b8235613c07816137f3565b91506020830135613946816137f3565b5f805f805f60608688031215613c2b575f80fd5b8535613c36816137f3565b945060208601356001600160401b0380821115613c51575f80fd5b613c5d89838a01613807565b90965094506040880135915080821115613a15575f80fd5b5f805f60608486031215613c87575f80fd5b8335613c92816137f3565b92506020840135613ca2816137f3565b929592945050506040919091013590565b5f8060408385031215613cc4575f80fd5b82356001600160401b03811115613cd9575f80fd5b613ce5858286016139a3565b9250506020830135613946816137f3565b5f805f60408486031215613d08575f80fd5b83356001600160401b03811115613d1d575f80fd5b61398486828701613807565b5f6020828403121561356f575f80fd5b5f8060408385031215613d4a575f80fd5b613c078484613d29565b5f60208284031215613d64575f80fd5b5035919050565b5f60208284031215613d7b575f80fd5b6110698383613d29565b5f5b83811015613d9f578181015183820152602001613d87565b50505f910152565b5f8151808452613dbe816020860160208601613d85565b601f01601f19169290920160200192915050565b60ff60f81b881681525f602060e06020840152613df260e084018a613da7565b8381036040850152613e04818a613da7565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825260208088019350909101905f5b81811015613e5757835183529284019291840191600101613e3b565b50909c9b505050505050505050505050565b5f805f805f8060808789031215613e7e575f80fd5b863595506020870135613e90816137f3565b945060408701356001600160401b0380821115613eab575f80fd5b6138958a838b0161370b565b5f805f8060608587031215613eca575f80fd5b8435613ed5816137f3565b9350613ee48660208701613d29565b925060408501356001600160401b03811115613efe575f80fd5b613f0a8782880161370b565b95989497509550505050565b5f8060408385031215613f27575f80fd5b8235915060208301356001600160401b03811115613f43575f80fd5b613f4f858286016139a3565b9150509250929050565b5f8060408385031215613f6a575f80fd5b8235613f75816137f3565b946020939093013593505050565b5f60208284031215613f93575f80fd5b8135611069816137f3565b6020815265ffffffffffff825116602082015260018060a01b0360208301511660408201525f60408301516060808401526110a46080840182613da7565b5f805f60408486031215613fee575f80fd5b8335925060208401356001600160401b03811115613a6a575f80fd5b8051825260018060a01b0360208201511660208301525f6040820151606060408501526110a46060850182613da7565b602081525f611069602083018461400a565b61010081016124a88284613a83565b602080825282518282018190525f9190848201906040850190845b81811015613b435783516001600160a01b031683529284019291840191600101614076565b5f805f604084860312156140ad575f80fd5b833560ff81168114613a50575f80fd5b5f805f604084860312156140cf575f80fd5b8335925060208401356001600160401b038111156140eb575f80fd5b613a768682870161370b565b5f805f805f805f8060a0898b03121561410e575f80fd5b8835614119816137f3565b975060208901356001600160401b0380821115614134575f80fd5b6141408c838d0161370b565b909950975060408b0135915080821115614158575f80fd5b6141648c838d0161370b565b909750955060608b0135945060808b01359150808211156137d2575f80fd5b634e487b7160e01b5f52601160045260245ffd5b5f600182016141a8576141a8614183565b5060010190565b634e487b7160e01b5f52603260045260245ffd5b5f816141d1576141d1614183565b505f190190565b5f602082840312156141e8575f80fd5b81518015158114611069575f80fd5b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061421f57607f821691505b60208210810361356f57634e487b7160e01b5f52602260045260245ffd5b601f82111561103257805f5260205f20601f840160051c810160208510156142625750805b601f840160051c820191505b81811015610f5e575f815560010161426e565b81516001600160401b0381111561429a5761429a6141f7565b6142ae816142a8845461420b565b8461423d565b602080601f8311600181146142e1575f84156142ca5750858301515b5f19600386901b1c1916600185901b178555611e93565b5f85815260208120601f198616915b8281101561430f578886015182559484019460019091019084016142f0565b508582101561432c57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156124a8576124a8614183565b818103818111156124a8576124a8614183565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b6001600160a01b03841681526040602082018190525f906143ae9083018486614362565b95945050505050565b5f602082840312156143c7575f80fd5b8151611069816137f3565b6001600160a01b038681168252851660208201526080604082018190525f906143fd9083018661400a565b8281036060840152614410818587614362565b98975050505050505050565b5f8235607e19833603018112614430575f80fd5b9190910192915050565b5f6020828403121561444a575f80fd5b813565ffffffffffff81168114611069575f80fd5b5f808335601e19843603018112614474575f80fd5b8301803591506001600160401b0382111561448d575f80fd5b602001915036819003821315613748575f80fd5b818382375f9101908152919050565b5f808335601e198436030181126144c5575f80fd5b8301803591506001600160401b038211156144de575f80fd5b6020019150600581901b3603821315613748575f80fd5b5f8184825b858110156145185781358352602092830192909101906001016144fa565b509095945050505050565b5f8351614534818460208801613d85565b9190910191825250602001919050565b5f6bffffffffffffffffffffffff19808660601b168352845161456e816014860160208901613d85565b60609490941b169190920160148101919091526028019392505050565b600181815b808511156145c557815f19048211156145ab576145ab614183565b808516156145b857918102915b93841c9390800290614590565b509250929050565b5f826145db575060016124a8565b816145e757505f6124a8565b81600181146145fd576002811461460757614623565b60019150506124a8565b60ff84111561461857614618614183565b50506001821b6124a8565b5060208310610133831016604e8410600b8410161715614646575081810a6124a8565b614650838361458b565b805f190482111561466357614663614183565b029392505050565b5f61106983836145cd565b63ffffffff8181168382160190808211156134ee576134ee61418356fea2646970667358221220329151deb29d4d802774a1c1b878536efd0cd2ec7ab3bdbdc5a40928eacba95664736f6c63430008180033608060405234801561000f575f80fd5b506101ac8061001d5f395ff3fe60806040526004361061001d575f3560e01c80636c26d54814610021575b5f80fd5b61003461002f3660046100ad565b610050565b6040516001600160a01b03909116815260200160405180910390f35b5f8060205f84516020860134885af190505f51915080610092576040516301b3a38360e21b81526001600160a01b038516600482015260240160405180910390fd5b5092915050565b634e487b7160e01b5f52604160045260245ffd5b5f80604083850312156100be575f80fd5b82356001600160a01b03811681146100d4575f80fd5b9150602083013567ffffffffffffffff808211156100f0575f80fd5b818501915085601f830112610103575f80fd5b81358181111561011557610115610099565b604051601f8201601f19908116603f0116810190838211818310171561013d5761013d610099565b81604052828152886020848701011115610155575f80fd5b826020860160208301375f602084830101528095505050505050925092905056fea26469706673582212205e622501b3caf85e6a8aab1fbf16c3cc9891810777b271eb62aac268ff426ef364736f6c63430008180033",
    "sourceMap": "3828:53:62:-:0;;;;;;;;;;;;;3068:23:65;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3047:44:65;;;2157:4:53;2119:45;;2191:13;2174:30;;2215:18;;2331:23;3959:27:68;;;;;;;;;;;-1:-1:-1;;;3959:27:68;;;;;;;;3996:16;;;;;;;;;;;-1:-1:-1;;;3996:16:68;;;;3959:27;3833:186;2331:23:53;2431:22;;;;;;;2545:25;;;;;;;;;2580:26;;;;2616:32;;;;2828:4;2822:11;;2893:16;2883:27;;2934:12;;;2927:30;;;;2981:12;;;2974:33;3045:9;3038:4;3031:12;;3024:31;3093:9;3086:4;3079:12;;3072:31;3146:4;3133:18;;3184:34;;-1:-1:-1;3828:53:62;;-1:-1:-1;3828:53:62;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101fc575f3560e01c80637cb2afd811610113578063b65d10121161009d578063dd0fd2781161006d578063dd0fd27814610675578063e14f3d32146106a1578063f05c04e1146106c0578063f095ec1b146106df578063f190e2b1146106fe575f80fd5b8063b65d1012146105df578063b6b791a1146105fe578063c23697a81461062a578063d904862414610649575f80fd5b8063945e3641116100e3578063945e36411461052b57806396fb72171461054a5780639f3e1b5314610569578063b060cb1e14610588578063b50b706b146105b4575f80fd5b80637cb2afd8146104a757806384b0196e146104c657806388dc678d146104ed5780638e6ec8241461050c575f80fd5b80634990a6821161019457806355f47dde1161016457806355f47dde146103a2578063617734d0146103c157806370d2af24146103e057806371c61a2b146103ff57806377efcab414610488575f80fd5b80634990a682146103265780634c13560c146103455780634ece78ca14610364578063529562a114610383575f80fd5b80631d4d9810116101cf5780631d4d98101461028f57806329757d37146102bc5780632b30c899146102db5780632ed9446714610307575f80fd5b806303b79c841461020057806304a1f298146102305780630bb30abc146102515780631896f70a14610270575b5f80fd5b61021361020e36600461374f565b610711565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561023b575f80fd5b5061024f61024a366004613847565b610789565b005b34801561025c575f80fd5b5061024f61026b3660046138cc565b610842565b34801561027b575f80fd5b5061024f61028a366004613923565b610955565b34801561029a575f80fd5b506102ae6102a9366004613951565b610a94565b604051908152602001610227565b3480156102c7575f80fd5b5061024f6102d63660046139b3565b610c7f565b3480156102e6575f80fd5b506102fa6102f5366004613a33565b610d30565b6040516102279190613b01565b348015610312575f80fd5b5061024f610321366004613b4f565b610e71565b348015610331575f80fd5b5061024f610340366004613bad565b610f65565b348015610350575f80fd5b5061024f61035f366004613beb565b610f74565b34801561036f575f80fd5b5061024f61037e366004613c17565b610f7f565b34801561038e575f80fd5b5061024f61039d366004613c75565b611027565b3480156103ad575f80fd5b506102ae6103bc366004613cb3565b611037565b3480156103cc575f80fd5b506102ae6103db366004613cf6565b611070565b3480156103eb575f80fd5b506102ae6103fa366004613d39565b6110ac565b34801561040a575f80fd5b50610461610419366004613d54565b604080518082019091525f8082526020820152505f9081526020818152604091829020825180840190935280546001600160a01b039081168452600190910154169082015290565b6040805182516001600160a01b039081168252602093840151169281019290925201610227565b348015610493575f80fd5b5061024f6104a2366004613d6b565b6110de565b3480156104b2575f80fd5b5061024f6104c1366004613923565b6110eb565b3480156104d1575f80fd5b506104da61118b565b6040516102279796959493929190613dd2565b3480156104f8575f80fd5b5061024f610507366004613e69565b6111f3565b348015610517575f80fd5b5061024f610526366004613eb7565b61124b565b348015610536575f80fd5b5061024f610545366004613f16565b6112fa565b348015610555575f80fd5b5061024f610564366004613f59565b611305565b348015610574575f80fd5b506102ae610583366004613f83565b611310565b348015610593575f80fd5b506105a76105a2366004613d54565b61148e565b6040516102279190613f9e565b3480156105bf575f80fd5b506102ae6105ce366004613f83565b60056020525f908152604090205481565b3480156105ea575f80fd5b5061024f6105f9366004613fdc565b611584565b348015610609575f80fd5b5061061d610618366004613f83565b611590565b604051610227919061403a565b348015610635575f80fd5b5061024f610644366004613f83565b6115ef565b348015610654575f80fd5b50610668610663366004613beb565b6115fa565b604051610227919061404c565b348015610680575f80fd5b5061069461068f366004613f83565b611693565b604051610227919061405b565b3480156106ac575f80fd5b506102ae6106bb366004613cf6565b6117e1565b3480156106cb575f80fd5b5061024f6106da36600461409b565b611815565b3480156106ea575f80fd5b506102136106f93660046140bd565b611a82565b61021361070c3660046140f7565b611a8e565b5f87815260208190526040812060018101546001600160a01b03166107515760405163f184406b60e01b8152600481018a90526024015b60405180910390fd5b61075c88888c611ba0565b91505f61076c83338c8a8a611c70565b905061077b8184848888611dea565b505098975050505050505050565b6001600160a01b0385165f908152600560205260408120805482906107ad90614197565b918290555090505f6107c86107c3878785611e9b565b6120b5565b90505f61080b888387878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506121cb92505050565b90508061082b57604051638baa579f60e01b815260040160405180910390fd5b610837888a89896122c8565b505050505050505050565b8180158061084e575081155b1561086c576040516305a74e6160e01b815260040160405180910390fd5b8181101561088d576040516339093e6560e21b815260040160405180910390fd5b5f805b82811015610935575f8686838181106108ab576108ab6141af565b90506020020160208101906108c09190613f83565b9050826001600160a01b0316816001600160a01b0316116108f45760405163cd0ecff160e01b815260040160405180910390fd5b80925061090b5f6109058a846123e2565b9061240b565b1561091c57610919856141c3565b94505b845f0361092c575050505061094f565b50600101610890565b506040516339093e6560e21b815260040160405180910390fd5b50505050565b806001600160a01b03811615806109d657506040516301ffc9a760e01b81526314f0f87d60e21b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa1580156109b0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109d491906141d8565b155b156109ff5760405163f9492e7560e01b81526001600160a01b0382166004820152602401610748565b5f8381526020819052604090206001015483906001600160a01b03163314610a3a57604051634ca8886760e01b815260040160405180910390fd5b5f8481526020819052604080822080546001600160a01b0319166001600160a01b03871690811782559151909287917f335721b01866dc23fbee8b6b2c7b1e14d6f05c28cd35a2c934239f94095602a09190a35050505050565b5f816001600160a01b03811615801590610b1857506040516301ffc9a760e01b815263b2275fa960e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa158015610af2573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b1691906141d8565b155b15610b4157604051630f09140760e01b81526001600160a01b0382166004820152602401610748565b5f6040518060600160405280610b544290565b65ffffffffffff168152602001856001600160a01b0316815260200187878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050509152509050610bb2816124ae565b5f8181526002602052604090205490935065ffffffffffff1615610bec57604051635988c65560e11b815260048101849052602401610748565b5f8381526002602090815260409182902083518154928501516001600160a01b0316600160301b026001600160d01b031990931665ffffffffffff90911617919091178155908201518291906001820190610c479082614281565b505060405133915084907fd16733fb8c2a502f4e1d1d63970cbab355e37ff6d6d12a215b7d0197ea5535f4905f90a350509392505050565b6001600160a01b0384165f90815260056020526040812080548290610ca390614197565b918290555090505f610cb86107c386846124e9565b90505f610cfb878387878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506121cb92505050565b905080610d1b57604051638baa579f60e01b815260040160405180910390fd5b610d2687898861262a565b5050505050505050565b606081806001600160401b03811115610d4b57610d4b6141f7565b604051908082528060200260200182016040528015610d8457816020015b610d716136c8565b815260200190600190039081610d695790505b5091505f5b81811015610e6857610dc186868684818110610da757610da76141af565b9050602002016020810190610dbc9190613f83565b6123e2565b6040805161010081018252825465ffffffffffff8082168352600160301b820481166020840152600160601b82041692820192909252600160901b90910463ffffffff16606082015260018201546001600160a01b0390811660808301526002830154811660a083015260038301541660c082015260049091015460e08201528351849083908110610e5557610e556141af565b6020908102919091010152600101610d89565b50509392505050565b81801580610e7d575081155b15610e9b576040516305a74e6160e01b815260040160405180910390fd5b81811015610ebc576040516339093e6560e21b815260040160405180910390fd5b5f805b82811015610935575f868683818110610eda57610eda6141af565b9050602002016020810190610eef9190613f83565b9050826001600160a01b0316816001600160a01b031611610f235760405163cd0ecff160e01b815260040160405180910390fd5b809250610f34886109058b846123e2565b15610f4557610f42856141c3565b94505b845f03610f555750505050610f5e565b50600101610ebf565b5050505050565b610f7033838361266c565b5050565b610f7082825f612761565b6001600160a01b0385165f90815260056020526040812080548290610fa390614197565b918290555090505f610fb96107c3878785612913565b90505f610ffc888387878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506121cb92505050565b90508061101c57604051638baa579f60e01b815260040160405180910390fd5b610d2688888861266c565b611032838383612761565b505050565b6001600160a01b0381165f90815260056020526040812054611069906107c39061106290600161433c565b85906124e9565b9392505050565b6001600160a01b0381165f908152600560205260408120546110a4906107c39061109b90600161433c565b86908690612913565b949350505050565b6001600160a01b0381165f90815260056020526040812054611069906107c3906110d790600161433c565b8590612a17565b6110e83382612a8a565b50565b5f8281526020819052604090206001015482906001600160a01b0316331461112657604051634ca8886760e01b815260040160405180910390fd5b5f838152602081815260409182902060010180546001600160a01b0319166001600160a01b038616908117909155915191825284917f7a2c54badf601a71ed23c3ec8c070bac418dfd4fb160e0351861983746662d77910160405180910390a2505050565b600f60f81b6060805f8080836111e160408051808201825260128152715268696e6573746f6e65526567697374727960701b60208083019190915282518084019093526004835263076312e360e41b9083015291565b97989097965046955030945091925090565b5f86815260208190526040902060018101546001600160a01b031661122e5760405163f184406b60e01b815260048101889052602401610748565b5f61123c875f8a8989611c70565b9050610d268188848787611dea565b6001600160a01b0384165f9081526005602052604081208054829061126f90614197565b918290555090505f6112846107c38684612a17565b90505f6112c7878387878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506121cb92505050565b9050806112e757604051638baa579f60e01b815260040160405180910390fd5b6112f18787612a8a565b50505050505050565b610f7033838361262a565b610f70338383612761565b5f816001600160a01b038116158061139257506040516301ffc9a760e01b81526314f0f87d60e21b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa15801561136c573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061139091906141d8565b155b156113bb5760405163f9492e7560e01b81526001600160a01b0382166004820152602401610748565b604080518082019091526001600160a01b03841681523360208201526113e081612ab3565b5f818152602081905260409020549093506001600160a01b03161561141857604051630f5f2ba160e21b815260040160405180910390fd5b5f83815260208181526040808320845181546001600160a01b03199081166001600160a01b03928316178355938601516001909201805490941691811691909117909255519086169185917f335721b01866dc23fbee8b6b2c7b1e14d6f05c28cd35a2c934239f94095602a09190a35050919050565b60408051606080820183525f8083526020830152918101919091525f828152600260209081526040918290208251606081018452815465ffffffffffff81168252600160301b90046001600160a01b03169281019290925260018101805492939192918401916114fd9061420b565b80601f01602080910402602001604051908101604052809291908181526020018280546115299061420b565b80156115745780601f1061154b57610100808354040283529160200191611574565b820191905f5260205f20905b81548152906001019060200180831161155757829003601f168201915b5050505050815250509050919050565b611032338484846122c8565b60408051606080820183525f80835260208084018290528385018390526001600160a01b03868116835260018083529286902086519485018752805485529283015416908301526002810180549394929391928401916114fd9061420b565b6110e833825f612761565b6116026136c8565b61160c83836123e2565b6040805161010081018252825465ffffffffffff8082168352600160301b820481166020840152600160601b82041692820192909252600160901b90910463ffffffff16606082015260018201546001600160a01b0390811660808301526002830154811660a083015260038301541660c082015260049091015460e08201529392505050565b6001600160a01b038082165f9081526003602052604081208054606093919260ff82169262010000909204909116908290036116d157505050919050565b816001600160401b038111156116e9576116e96141f7565b604051908082528060200260200182016040528015611712578160200160208202803683370190505b50935080845f81518110611728576117286141af565b6001600160a01b039092166020928302919091019091015260015b828110156117d857836001015f8660018461175e919061434f565b8151811061176e5761176e6141af565b6020908102919091018101516001600160a01b0390811683528282019390935260409182015f9081208a85168252909152205486519116908690839081106117b8576117b86141af565b6001600160a01b0390921660209283029190910190910152600101611743565b50505050919050565b6001600160a01b0381165f908152600560205260408120546110a4906107c39061180c90600161433c565b86908690611e9b565b604080516020808402828101820190935283825283926118519291869185918291908501908490808284375f92019190915250612ae492505050565b61186e5760405163cd0ecff160e01b815260040160405180910390fd5b80158061187b575060ff81115b156118995760405163cd0ecff160e01b815260040160405180910390fd5b8181146118b95760405163cd0ecff160e01b815260040160405180910390fd5b5f838382816118ca576118ca6141af565b90506020020160208101906118df9190613f83565b6001600160a01b0316036119065760405163cd0ecff160e01b815260040160405180910390fd5b335f90815260036020526040902060ff85168210156119385760405163aabd5a0960e01b815260040160405180910390fd5b805460ff8681166101000261ffff199092169084161717815583835f81611961576119616141af565b90506020020160208101906119769190613f83565b81546001600160a01b0391909116620100000262010000600160b01b0319909116178155816119a4816141c3565b9250505f5b82811015611a50575f8585838181106119c4576119c46141af565b90506020020160208101906119d99190613f83565b905085856119e884600161433c565b8181106119f7576119f76141af565b9050602002016020810190611a0c9190613f83565b6001600160a01b039182165f90815260018581016020908152604080842033855290915290912080546001600160a01b0319169290931691909117909155016119a9565b5060405133907ff689fb4afceb60ac48a5ca8113a5a57cb15e51d317f0ec57e07340192d9fb459905f90a25050505050565b5f6110a4838386612aee565b5f83815260208190526040812060018101546001600160a01b0316611ac95760405163f184406b60e01b815260048101869052602401610748565b306001600160a01b038b1603611afd576040516301b3a38360e21b81526001600160a01b038b166004820152602401610748565b604051630d84daa960e31b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636c26d548903490611b4f908e908e908e9060040161438a565b60206040518083038185885af1158015611b6b573d5f803e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190611b9091906143b7565b91505f61076c835f888b8b611c70565b5f81606081901c3314801590611bbf57506001600160601b0319811615155b15611bdd576040516381e69d9b60e01b815260040160405180910390fd5b5f85858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920182905250939450611c23925089915088905087612aee565b905081602001825186818334f595505050806001600160a01b0316846001600160a01b031614611c665760405163e6c4247b60e01b815260040160405180910390fd5b5050509392505050565b60408051606080820183525f8083526020830152918101919091526001600160a01b0386165f90815260016020526040812054611cac91141590565b15611cd5576040516345ed80e960e01b81526001600160a01b0387166004820152602401610748565b6001600160a01b0386163b611cfd57604051637483e90760e01b815260040160405180910390fd5b6040518060600160405280858152602001866001600160a01b0316815260200184848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201829052509390945250506001600160a01b03898116825260016020818152604093849020865181559086015191810180546001600160a01b03191692909316919091179091559083015192935083929091506002820190611dab9082614281565b50506040516001600160a01b03881691507fbc854169953f463b8509327459b9a9785beb45f6cdafdad8e75b9a33f4016768905f90a295945050505050565b82546001600160a01b03168015801590611e755750604051633da3df8760e21b81526001600160a01b0382169063f68f7e1c90611e3390339089908b90899089906004016143d2565b6020604051808303815f875af1158015611e4f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611e7391906141d8565b155b15611e9357604051633b0cfdad60e01b815260040160405180910390fd5b505050505050565b5f606083825b8181101561204e57827fe78ff87b9693fc54b8a43c3b84702ae7bfbb7fc6235105790033913428381e1f888884818110611edd57611edd6141af565b9050602002810190611eef919061441c565b611efd906020810190613f83565b898985818110611f0f57611f0f6141af565b9050602002810190611f21919061441c565b611f3290604081019060200161443a565b8a8a86818110611f4457611f446141af565b9050602002810190611f56919061441c565b611f6490604081019061445f565b604051611f729291906144a1565b60405180910390208b8b87818110611f8c57611f8c6141af565b9050602002810190611f9e919061441c565b611fac9060608101906144b0565b604051602001611fbd9291906144f5565b60408051601f198184030181528282528051602091820120908301969096526001600160a01b039094169381019390935265ffffffffffff9091166060830152608082015260a081019190915260c00160405160208183030381529060405280519060200120604051602001612034929190614523565b60408051601f198184030181529190529250600101611ea1565b508151602080840191909120604080517f432f54a02ff5e7b0998295a12eea6e09f826e00e15ebb49cdb5dd6914e7eadf793810193909352820152606081018590526080015b60405160208183030381529060405280519060200120925050509392505050565b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000030147f00000000000000000000000000000000000000000000000000000000000000004614166121a85750604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81527f000000000000000000000000000000000000000000000000000000000000000060208201527f00000000000000000000000000000000000000000000000000000000000000009181019190915246606082015230608082015260a090205b6719010000000000005f5280601a5281603a52604260182090505f603a52919050565b6001600160a01b03909216915f831561106957604051835f5260208301516040526040835103612237576040830151601b8160ff1c016020528060011b60011c606052506020600160805f60015afa805186183d151761223557505f606052604052506001611069565b505b604183510361227a5760608301515f1a60205260408301516060526020600160805f60015afa805186183d151761227857505f606052604052506001611069565b505b5f60605280604052631626ba7e60e01b808252846004830152602482016040815284516020018060448501828860045afa505060208160443d01858a5afa9051909114169150509392505050565b805f816001600160401b038111156122e2576122e26141f7565b60405190808252806020026020018201604052801561231b57816020015b6123086136c8565b8152602001906001900390816123005790505b5090505f805b838110156123b1575f612358888a898986818110612341576123416141af565b9050602002810190612353919061441c565b612b7a565b85848151811061236a5761236a6141af565b602002602001018193508290525050815f03612388578092506123a8565b8281146123a857604051631ac80ea760e01b815260040160405180910390fd5b50600101612321565b505f8681526002602052604090206123ca908390612f7e565b5f8181526020819052604090206112f190839061304d565b6001600160a01b039182165f908152600460209081526040808320939094168252919091522090565b81545f9063ffffffff81811691603081901c821691606082901c81169160901c168361243d575f9450505050506124a8565b821580159061244b57508242115b1561245c575f9450505050506124a8565b811561246e575f9450505050506124a8565b851515801561248e575061248c63ffffffff8083169088906130ef16565b155b1561249f575f9450505050506124a8565b60019450505050505b92915050565b5f33826040015183602001516040516020016124cc93929190614544565b604051602081830303815290604052805190602001209050919050565b5f7fe6fb0252edfa0719f65bc4b7ff11df181a55bbef752d6bacaff6f4a369160b757fe78ff87b9693fc54b8a43c3b84702ae7bfbb7fc6235105790033913428381e1f6125396020860186613f83565b612549604087016020880161443a565b612556604088018861445f565b6040516125649291906144a1565b60405190819003902061257a60608901896144b0565b60405160200161258b9291906144f5565b60408051601f198184030181528282528051602091820120908301969096526001600160a01b039094169381019390935265ffffffffffff9091166060830152608082015260a081019190915260c0015b60408051601f19818403018152828252805160209182012090830193909352810191909152606081018390526080015b60405160208183030381529060405280519060200120905092915050565b5f80612637848685612b7a565b5f868152600260205260409020919350915061265490839061310d565b5f818152602081905260409020610f5e90839061317c565b805f816001600160401b03811115612686576126866141f7565b6040519080825280602002602001820160405280156126bf57816020015b6126ac6136c8565b8152602001906001900390816126a45790505b5090505f805b83811015612748575f6126ef888888858181106126e4576126e46141af565b90506020020161321d565b858481518110612701576127016141af565b602002602001018193508290525050815f0361271f5780925061273f565b82811461273f57604051631ac80ea760e01b815260040160405180910390fd5b506001016126c5565b505f8181526020819052604090206112f1908390613410565b6001600160a01b038084165f9081526003602052604090208054909160ff80831692610100810490911691620100009091041680158061279f575081155b156127bd576040516305a74e6160e01b815260040160405180910390fd5b8160010361284f575f6127d087836123e2565b90506127dc818761240b565b156127eb575050505050505050565b5f5b84811015610935576001600160a01b039283165f90815260018701602090815260408083208c871684529091529020549092169161282b88846123e2565b9150612837828861240b565b1561284757505050505050505050565b6001016127ed565b5f61285a87836123e2565b9050612866818761240b565b156128795782612875816141c3565b9350505b60015b848110156128f3576001600160a01b039283165f90815260018701602090815260408083208c87168452909152902054909216916128ba88846123e2565b91506128c6828861240b565b156128d957836128d5816141c3565b9450505b835f036128eb57505050505050505050565b60010161287c565b508215610d26576040516339093e6560e21b815260040160405180910390fd5b5f606083825b818110156129cd57827fe772c71320d83e91a3076e1414875f1affb9dbb84c39717315b34b38b9b4ef8e888884818110612955576129556141af565b612969926020918202019081019150613f83565b60405160200161298c9291909182526001600160a01b0316602082015260400190565b604051602081830303815290604052805190602001206040516020016129b3929190614523565b60408051601f198184030181529190529250600101612919565b508151602080840191909120604080517f7d1efebd1edb795fc2fef1b96025f39b311dd4c4481a7f726342969d70b423c89381019390935282015260608101859052608001612094565b5f7f0c087e39c84c32f053f4f3e0086d64914296a605bd371cfe0bdca1d506aed4707fe772c71320d83e91a3076e1414875f1affb9dbb84c39717315b34b38b9b4ef8e612a676020860186613f83565b6040516020016125dc9291909182526001600160a01b0316602082015260400190565b5f80612a96848461321d565b5f8181526020819052604090209193509150610f5e9083906134f5565b80516040516001600160601b031933606090811b821660208401529290921b90911660348201525f906048016124cc565b5f6124a88261353d565b5f30828585604051602001612b049291906144a1565b60405160208183030381529060405280519060200120604051602001612b5a939291906001600160f81b0319815260609390931b6001600160601b03191660018401526015830191909152603582015260550190565b60408051601f198184030181529190528051602090910120949350505050565b612b826136c8565b5f8481526002602052604081205465ffffffffffff16612bb557604051635f9bd90760e11b815260040160405180910390fd5b425f612bc7604086016020870161443a565b65ffffffffffff1614158015612bfc575065ffffffffffff8116612bf1604086016020870161443a565b65ffffffffffff1611155b15612c1a576040516308e8b93760e01b815260040160405180910390fd5b5f612c286020860186613f83565b90505f612c3582886123e2565b805490915065ffffffffffff1615801590612c5e57508054600160601b900465ffffffffffff16155b15612c7c576040516335d9080560e01b815260040160405180910390fd5b6001600160a01b0382165f90815260016020526040902054935083612cbf57604051634eb2dcd760e01b81526001600160a01b0383166004820152602401610748565b5f612cdd612cd66001600160a01b038a1685613576565b88906135ad565b90506040518061010001604052808565ffffffffffff168152602001886020016020810190612d0c919061443a565b65ffffffffffff1681525f6020820152604001612d65612d2f60608b018b6144b0565b808060200260200160405190810160405280939291908181526020018383602002808284375f920191909152506135f992505050565b63ffffffff168152602001846001600160a01b03168152602001896001600160a01b03168152602001826001600160a01b031681526020018a81525095508560045f856001600160a01b03166001600160a01b031681526020019081526020015f205f8a6001600160a01b03166001600160a01b031681526020019081526020015f205f820151815f015f6101000a81548165ffffffffffff021916908365ffffffffffff1602179055506020820151815f0160066101000a81548165ffffffffffff021916908365ffffffffffff1602179055506040820151815f01600c6101000a81548165ffffffffffff021916908365ffffffffffff1602179055506060820151815f0160126101000a81548163ffffffff021916908363ffffffff1602179055506080820151816001015f6101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a0820151816002015f6101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c0820151816003015f6101000a8154816001600160a01b0302191690836001600160a01b0316021790555060e08201518160040155905050806001600160a01b0316886001600160a01b0316846001600160a01b03167ff68f1df3d74509783e9300e8637b046836c091fd39cdcd33b14b0ffdf6940d628c604051612f6a91815260200190565b60405180910390a450505050935093915050565b805465ffffffffffff16612fa557604051635f9bd90760e11b815260040160405180910390fd5b8054600160301b90046001600160a01b0316801580159061302f57506040516365b7641360e11b81526001600160a01b0382169063cb6ec82690612fed908690600401613b01565b6020604051808303815f875af1158015613009573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061302d91906141d8565b155b1561103257604051635e1d867960e01b815260040160405180910390fd5b80546001600160a01b03168061306257505050565b6040516367b14e7760e11b81526001600160a01b0382169063cf629cee9061308e908690600401613b01565b6020604051808303815f875af11580156130aa573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906130ce91906141d8565b15155f0361103257604051635b0ae41f60e01b815260040160405180910390fd5b5f6130fb82600261466b565b831663ffffffff161515905092915050565b805465ffffffffffff1661313457604051635f9bd90760e11b815260040160405180910390fd5b8054600160301b90046001600160a01b0316801580159061302f5750604051637949978f60e01b81526001600160a01b03821690637949978f90612fed90869060040161404c565b80546001600160a01b031680158015906131ff57506040516334c85d0760e01b81526001600160a01b038216906334c85d07906131bd90869060040161404c565b6020604051808303815f875af11580156131d9573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906131fd91906141d8565b155b1561103257604051635b0ae41f60e01b815260040160405180910390fd5b6132256136c8565b5f806004816132376020870187613f83565b6001600160a01b03908116825260208083019390935260409182015f90812089831682528452828120835161010081018552815465ffffffffffff8082168352600160301b8204811683890152600160601b82041695820195909552600160901b90940463ffffffff166060850152600180820154841660808601526002820154841660a0860152600382015490931660c0850152600481015460e0850152929650919350916132e990870187613f83565b6001600160a01b03908116825260208201929092526040015f205460c08501519093501661332a5760405163120a2e7760e01b815260040160405180910390fd5b846001600160a01b03168360a001516001600160a01b03161461336057604051634ca8886760e01b815260040160405180910390fd5b604083015165ffffffffffff161561338b5760405163905e710760e01b815260040160405180910390fd5b805465ffffffffffff60601b1916600160601b65ffffffffffff4216021781556001600160a01b0385166133c26020860186613f83565b6001600160a01b03167feee7de70b290c411a060d8bb9b1cba152a40d74147fef0974d7c2b25ac9b718a8560e0015160405161340091815260200190565b60405180910390a3509250929050565b80545f906001600160a01b03168061342c5760019150506124a8565b604051636ac403ff60e11b81526001600160a01b0382169063d58807fe90613458908790600401613b01565b6020604051808303815f875af1925050508015613492575060408051601f3d908101601f1916820190925261348f918101906141d8565b60015b6134db576040516001600160a01b03821681527fbab8c8262d5baeb21d73c5944504fb6c26d6eb88d29af8653bd3382ad8fe56a99060200160405180910390a15f9150506124a8565b80156134ec576001925050506124a8565b505b5092915050565b80545f906001600160a01b0316806135115760019150506124a8565b604051638b6e59ff60e01b81526001600160a01b03821690638b6e59ff9061345890879060040161404c565b805160019060021161357157815160051b82016020830192505b82516020909301805190931091508083188202613557575b505b919050565b6040516001600160601b0319606084811b8216602084015283901b1660348201524260488201524660688201525f9060880161260c565b5f6110696135be604085018561445f565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250869250613680915050565b80515f908180805b838110156136765785818151811061361b5761361b6141af565b60200260200101519150601f821180613639575061363983836130ef565b1561365757604051631092ef5760e11b815260040160405180910390fd5b61366282600261466b565b61366c9084614676565b9250600101613601565b5090949350505050565b5f8251600181018060401b6bfd61000080600a3d393df3001761ffff821186015283600a8201601587015ff5925050816136c15763301164255f526004601cfd5b9092525090565b60408051610100810182525f80825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915290565b5f8083601f84011261371b575f80fd5b5081356001600160401b03811115613731575f80fd5b602083019150836020828501011115613748575f80fd5b9250929050565b5f805f805f805f8060a0898b031215613766575f80fd5b883597506020890135965060408901356001600160401b038082111561378a575f80fd5b6137968c838d0161370b565b909850965060608b01359150808211156137ae575f80fd5b6137ba8c838d0161370b565b909650945060808b01359150808211156137d2575f80fd5b506137df8b828c0161370b565b999c989b5096995094979396929594505050565b6001600160a01b03811681146110e8575f80fd5b5f8083601f840112613817575f80fd5b5081356001600160401b0381111561382d575f80fd5b6020830191508360208260051b8501011115613748575f80fd5b5f805f805f806080878903121561385c575f80fd5b86359550602087013561386e816137f3565b945060408701356001600160401b0380821115613889575f80fd5b6138958a838b01613807565b909650945060608901359150808211156138ad575f80fd5b506138ba89828a0161370b565b979a9699509497509295939492505050565b5f805f80606085870312156138df575f80fd5b84356138ea816137f3565b935060208501356001600160401b03811115613904575f80fd5b61391087828801613807565b9598909750949560400135949350505050565b5f8060408385031215613934575f80fd5b823591506020830135613946816137f3565b809150509250929050565b5f805f60408486031215613963575f80fd5b83356001600160401b03811115613978575f80fd5b6139848682870161370b565b9094509250506020840135613998816137f3565b809150509250925092565b5f6080828403121561356f575f80fd5b5f805f805f608086880312156139c7575f80fd5b8535945060208601356139d9816137f3565b935060408601356001600160401b03808211156139f4575f80fd5b613a0089838a016139a3565b94506060880135915080821115613a15575f80fd5b50613a228882890161370b565b969995985093965092949392505050565b5f805f60408486031215613a45575f80fd5b8335613a50816137f3565b925060208401356001600160401b03811115613a6a575f80fd5b613a7686828701613807565b9497909650939450505050565b65ffffffffffff8082511683528060208301511660208401528060408301511660408401525063ffffffff6060820151166060830152608081015160018060a01b0380821660808501528060a08401511660a0850152505060c0810151613af560c08401826001600160a01b03169052565b5060e090810151910152565b602080825282518282018190525f9190848201906040850190845b81811015613b4357613b2f838551613a83565b928401926101009290920191600101613b1c565b50909695505050505050565b5f805f805f60808688031215613b63575f80fd5b8535613b6e816137f3565b94506020860135935060408601356001600160401b03811115613b8f575f80fd5b613b9b88828901613807565b96999598509660600135949350505050565b5f8060208385031215613bbe575f80fd5b82356001600160401b03811115613bd3575f80fd5b613bdf85828601613807565b90969095509350505050565b5f8060408385031215613bfc575f80fd5b8235613c07816137f3565b91506020830135613946816137f3565b5f805f805f60608688031215613c2b575f80fd5b8535613c36816137f3565b945060208601356001600160401b0380821115613c51575f80fd5b613c5d89838a01613807565b90965094506040880135915080821115613a15575f80fd5b5f805f60608486031215613c87575f80fd5b8335613c92816137f3565b92506020840135613ca2816137f3565b929592945050506040919091013590565b5f8060408385031215613cc4575f80fd5b82356001600160401b03811115613cd9575f80fd5b613ce5858286016139a3565b9250506020830135613946816137f3565b5f805f60408486031215613d08575f80fd5b83356001600160401b03811115613d1d575f80fd5b61398486828701613807565b5f6020828403121561356f575f80fd5b5f8060408385031215613d4a575f80fd5b613c078484613d29565b5f60208284031215613d64575f80fd5b5035919050565b5f60208284031215613d7b575f80fd5b6110698383613d29565b5f5b83811015613d9f578181015183820152602001613d87565b50505f910152565b5f8151808452613dbe816020860160208601613d85565b601f01601f19169290920160200192915050565b60ff60f81b881681525f602060e06020840152613df260e084018a613da7565b8381036040850152613e04818a613da7565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825260208088019350909101905f5b81811015613e5757835183529284019291840191600101613e3b565b50909c9b505050505050505050505050565b5f805f805f8060808789031215613e7e575f80fd5b863595506020870135613e90816137f3565b945060408701356001600160401b0380821115613eab575f80fd5b6138958a838b0161370b565b5f805f8060608587031215613eca575f80fd5b8435613ed5816137f3565b9350613ee48660208701613d29565b925060408501356001600160401b03811115613efe575f80fd5b613f0a8782880161370b565b95989497509550505050565b5f8060408385031215613f27575f80fd5b8235915060208301356001600160401b03811115613f43575f80fd5b613f4f858286016139a3565b9150509250929050565b5f8060408385031215613f6a575f80fd5b8235613f75816137f3565b946020939093013593505050565b5f60208284031215613f93575f80fd5b8135611069816137f3565b6020815265ffffffffffff825116602082015260018060a01b0360208301511660408201525f60408301516060808401526110a46080840182613da7565b5f805f60408486031215613fee575f80fd5b8335925060208401356001600160401b03811115613a6a575f80fd5b8051825260018060a01b0360208201511660208301525f6040820151606060408501526110a46060850182613da7565b602081525f611069602083018461400a565b61010081016124a88284613a83565b602080825282518282018190525f9190848201906040850190845b81811015613b435783516001600160a01b031683529284019291840191600101614076565b5f805f604084860312156140ad575f80fd5b833560ff81168114613a50575f80fd5b5f805f604084860312156140cf575f80fd5b8335925060208401356001600160401b038111156140eb575f80fd5b613a768682870161370b565b5f805f805f805f8060a0898b03121561410e575f80fd5b8835614119816137f3565b975060208901356001600160401b0380821115614134575f80fd5b6141408c838d0161370b565b909950975060408b0135915080821115614158575f80fd5b6141648c838d0161370b565b909750955060608b0135945060808b01359150808211156137d2575f80fd5b634e487b7160e01b5f52601160045260245ffd5b5f600182016141a8576141a8614183565b5060010190565b634e487b7160e01b5f52603260045260245ffd5b5f816141d1576141d1614183565b505f190190565b5f602082840312156141e8575f80fd5b81518015158114611069575f80fd5b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061421f57607f821691505b60208210810361356f57634e487b7160e01b5f52602260045260245ffd5b601f82111561103257805f5260205f20601f840160051c810160208510156142625750805b601f840160051c820191505b81811015610f5e575f815560010161426e565b81516001600160401b0381111561429a5761429a6141f7565b6142ae816142a8845461420b565b8461423d565b602080601f8311600181146142e1575f84156142ca5750858301515b5f19600386901b1c1916600185901b178555611e93565b5f85815260208120601f198616915b8281101561430f578886015182559484019460019091019084016142f0565b508582101561432c57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156124a8576124a8614183565b818103818111156124a8576124a8614183565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b6001600160a01b03841681526040602082018190525f906143ae9083018486614362565b95945050505050565b5f602082840312156143c7575f80fd5b8151611069816137f3565b6001600160a01b038681168252851660208201526080604082018190525f906143fd9083018661400a565b8281036060840152614410818587614362565b98975050505050505050565b5f8235607e19833603018112614430575f80fd5b9190910192915050565b5f6020828403121561444a575f80fd5b813565ffffffffffff81168114611069575f80fd5b5f808335601e19843603018112614474575f80fd5b8301803591506001600160401b0382111561448d575f80fd5b602001915036819003821315613748575f80fd5b818382375f9101908152919050565b5f808335601e198436030181126144c5575f80fd5b8301803591506001600160401b038211156144de575f80fd5b6020019150600581901b3603821315613748575f80fd5b5f8184825b858110156145185781358352602092830192909101906001016144fa565b509095945050505050565b5f8351614534818460208801613d85565b9190910191825250602001919050565b5f6bffffffffffffffffffffffff19808660601b168352845161456e816014860160208901613d85565b60609490941b169190920160148101919091526028019392505050565b600181815b808511156145c557815f19048211156145ab576145ab614183565b808516156145b857918102915b93841c9390800290614590565b509250929050565b5f826145db575060016124a8565b816145e757505f6124a8565b81600181146145fd576002811461460757614623565b60019150506124a8565b60ff84111561461857614618614183565b50506001821b6124a8565b5060208310610133831016604e8410600b8410161715614646575081810a6124a8565b614650838361458b565b805f190482111561466357614663614183565b029392505050565b5f61106983836145cd565b63ffffffff8181168382160190808211156134ee576134ee61418356fea2646970667358221220329151deb29d4d802774a1c1b878536efd0cd2ec7ab3bdbdc5a40928eacba95664736f6c63430008180033",
    "sourceMap": "3828:53:62:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3149:985:65;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1819:32:98;;;1801:51;;1789:2;1774:18;3149:985:65;;;;;;;;2035:473:68;;;;;;;;;;-1:-1:-1;2035:473:68;;;;;:::i;:::-;;:::i;:::-;;889:834:70;;;;;;;;;;-1:-1:-1;889:834:70;;;;;:::i;:::-;;:::i;4312:350:66:-;;;;;;;;;;-1:-1:-1;4312:350:66;;;;;:::i;:::-;;:::i;1469:766:67:-;;;;;;;;;;-1:-1:-1;1469:766:67;;;;;:::i;:::-;;:::i;:::-;;;5262:25:98;;;5250:2;5235:18;1469:766:67;5085:208:98;1517:467:68;;;;;;;;;;-1:-1:-1;1517:467:68;;;;;:::i;:::-;;:::i;4178:414:63:-;;;;;;;;;;-1:-1:-1;4178:414:63;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1773:852:70:-;;;;;;;;;;-1:-1:-1;1773:852:70;;;;;:::i;:::-;;:::i;3782:110:63:-;;;;;;;;;;-1:-1:-1;3782:110:63;;;;;:::i;:::-;;:::i;3030:140:69:-;;;;;;;;;;-1:-1:-1;3030:140:69;;;;;:::i;:::-;;:::i;3033:429:68:-;;;;;;;;;;-1:-1:-1;3033:429:68;;;;;:::i;:::-;;:::i;3393:157:69:-;;;;;;;;;;-1:-1:-1;3393:157:69;;;;;:::i;:::-;;:::i;4025:196:68:-;;;;;;;;;;-1:-1:-1;4025:196:68;;;;;:::i;:::-;;:::i;4634:199::-;;;;;;;;;;-1:-1:-1;4634:199:68;;;;;:::i;:::-;;:::i;4433:195::-;;;;;;;;;;-1:-1:-1;4433:195:68;;;;;:::i;:::-;;:::i;4969:124:66:-;;;;;;;;;;-1:-1:-1;4969:124:66;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;5071:10:66;:15;;;;;;;;;;;;5064:22;;;;;;;;;;-1:-1:-1;;;;;5064:22:66;;;;;;;;;;;;;;;;4969:124;;;;;13991:13:98;;-1:-1:-1;;;;;13987:22:98;;;13969:41;;14070:4;14058:17;;;14052:24;14048:33;14026:20;;;14019:63;;;;13904:18;4969:124:66;13719:369:98;3625:106:63;;;;;;;;;;-1:-1:-1;3625:106:63;;;;;:::i;:::-;;:::i;4713:205:66:-;;;;;;;;;;-1:-1:-1;4713:205:66;;;;;:::i;:::-;;:::i;6989:596:53:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;4384:934:65:-;;;;;;;;;;-1:-1:-1;4384:934:65;;;;;:::i;:::-;;:::i;2559:423:68:-;;;;;;;;;;-1:-1:-1;2559:423:68;;;;;:::i;:::-;;:::i;3241:139:63:-;;;;;;;;;;-1:-1:-1;3241:139:63;;;;;:::i;:::-;;:::i;3220:123:69:-;;;;;;;;;;-1:-1:-1;3220:123:69;;;;;:::i;:::-;;:::i;3507:754:66:-;;;;;;;;;;-1:-1:-1;3507:754:66;;;;;:::i;:::-;;:::i;2286:124:67:-;;;;;;;;;;-1:-1:-1;2286:124:67;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1402:63:68:-;;;;;;;;;;-1:-1:-1;1402:63:68;;;;;:::i;:::-;;;;;;;;;;;;;;3431:143:63;;;;;;;;;;-1:-1:-1;3431:143:63;;;;;:::i;:::-;;:::i;8581:159:65:-;;;;;;;;;;-1:-1:-1;8581:159:65;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2874:106:69:-;;;;;;;;;;-1:-1:-1;2874:106:69;;;;;:::i;:::-;;:::i;3943:184:63:-;;;;;;;;;;-1:-1:-1;3943:184:63;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;6406:685:69:-;;;;;;;;;;-1:-1:-1;6406:685:69;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4227:200:68:-;;;;;;;;;;-1:-1:-1;4227:200:68;;;;;:::i;:::-;;:::i;1376:1448:69:-;;;;;;;;;;-1:-1:-1;1376:1448:69;;;;;:::i;:::-;;:::i;4185:148:65:-;;;;;;;;;;-1:-1:-1;4185:148:65;;;;;:::i;:::-;;:::i;5369:1420::-;;;;;;:::i;:::-;;:::i;3149:985::-;3388:21;3460:23;;;;;;;;;;3497;;;;-1:-1:-1;;;;;3497:23:65;3493:83;;3545:31;;-1:-1:-1;;;3545:31:65;;;;;5262:25:98;;;5235:18;;3545:31:65;;;;;;;;3493:83;3603:21;:8;;3619:4;3603:15;:21::i;:::-;3587:37;;3773:26;3814:118;3850:13;3873:10;3898:11;3921:8;;3814:18;:118::i;:::-;3773:159;-1:-1:-1;3943:184:65;3773:159;4023:13;4061:9;4101:15;;3943:50;:184::i;:::-;3415:719;;3149:985;;;;;;;;;;:::o;2035:473:68:-;-1:-1:-1;;;;;2193:23:68;;2175:13;2193:23;;;:13;:23;;;;;2191:25;;2175:13;;2191:25;;;:::i;:::-;;;;;-1:-1:-1;2191:25:68;-1:-1:-1;2226:14:68;2243:36;2258:20;:8;;2191:25;2258:13;:20::i;:::-;2243:14;:36::i;:::-;2226:53;;2289:10;2302:68;2342:8;2352:6;2360:9;;2302:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2302:39:68;;-1:-1:-1;;;2302:68:68:i;:::-;2289:81;;2385:5;2380:37;;2399:18;;-1:-1:-1;;;2399:18:68;;;;;;;;;;;2380:37;2428:73;2448:8;2469:9;2490:8;;2428:7;:73::i;:::-;2165:343;;;2035:473;;;;;;:::o;889:834:70:-;1019:9;1049:20;;;:38;;-1:-1:-1;1073:14:70;;1049:38;1045:198;;;1110:25;;-1:-1:-1;;;1110:25:70;;;;;;;;;;;1045:198;1174:9;1156:15;:27;1152:91;;;1206:26;;-1:-1:-1;;;1206:26:70;;;;;;;;;;;1152:91;1253:22;1290:9;1285:389;1305:15;1301:1;:19;1285:389;;;1341:16;1360:9;;1370:1;1360:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;1341:31;;1402:14;-1:-1:-1;;;;;1390:26:70;:8;-1:-1:-1;;;;;1390:26:70;;1386:112;;1425:29;;-1:-1:-1;;;1425:29:70;;;;;;;;;;;1386:112;1490:8;1473:25;;1516:62;577:1:59;1516:33:70;1532:6;1540:8;1516:15;:33::i;:::-;:44;;:62::i;:::-;1512:112;;;1598:11;;;:::i;:::-;;;1512:112;1641:9;1654:1;1641:14;1637:27;;1657:7;;;;;;1637:27;-1:-1:-1;1322:3:70;;1285:389;;;;1690:26;;-1:-1:-1;;;1690:26:70;;;;;;;;;;;889:834;;;;;:::o;4312:350:66:-;4438:8;-1:-1:-1;;;;;3281:31:66;;;;:99;;-1:-1:-1;3317:63:66;;-1:-1:-1;;;3317:63:66;;-1:-1:-1;;;3317:63:66;;;26527:52:98;-1:-1:-1;;;;;3317:26:66;;;;;26500:18:98;;3317:63:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3316:64;3281:99;3277:162;;;3403:25;;-1:-1:-1;;;3403:25:66;;-1:-1:-1;;;;;1819:32:98;;3403:25:66;;;1801:51:98;1774:18;;3403:25:66;1655:203:98;3277:162:66;2989:10:::1;:15:::0;;;::::1;::::0;;;;;;:29:::1;;::::0;4474:3;;-1:-1:-1;;;;;2989:29:66::1;3022:10;2989:43;2985:95;;3055:14;;-1:-1:-1::0;;;3055:14:66::1;;;;;;;;;;;2985:95;4518:31:::2;4552:15:::0;;;::::2;::::0;;;;;;;4577:28;;-1:-1:-1;;;;;;4577:28:66::2;-1:-1:-1::0;;;;;4577:28:66;::::2;::::0;;::::2;::::0;;4620:35;;4552:15;;;;4620:35:::2;::::0;4518:31;4620:35:::2;4508:154;3448:1:::1;4312:350:::0;;;:::o;1469:766:67:-;1648:13;1620:9;-1:-1:-1;;;;;1226:32:67;;;;;;:108;;-1:-1:-1;1263:71:67;;-1:-1:-1;;;1263:71:67;;-1:-1:-1;;;1263:71:67;;;26527:52:98;-1:-1:-1;;;;;1263:27:67;;;;;26500:18:98;;1263:71:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1262:72;1226:108;1222:179;;;1357:33;;-1:-1:-1;;;1357:33:67;;-1:-1:-1;;;;;1819:32:98;;1357:33:67;;;1801:51:98;1774:18;;1357:33:67;1655:203:98;1222:179:67;1677:32:::1;1712:77;;;;;;;;1763:7;873:15:59::0;;814:78;1763:7:67::1;1712:77;;;;;;1738:9;-1:-1:-1::0;;;;;1712:77:67::1;;;;;1780:6;;1712:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;;;1712:77:67;;-1:-1:-1;1677:112:67;-1:-1:-1;1875:21:67::1;1677:112:::0;1875:19:::1;:21::i;:::-;474:1:59;2015:12:67::0;;;:7:::1;:12;::::0;;;;:25;1869:27;;-1:-1:-1;2015:25:67::1;;:43:::0;2011:80:::1;;2067:24;::::0;-1:-1:-1;;;2067:24:67;;::::1;::::0;::::1;5262:25:98::0;;;5235:18;;2067:24:67::1;5085:208:98::0;2011:80:67::1;2152:12;::::0;;;:7:::1;:12;::::0;;;;;;;;:27;;;;;;::::1;::::0;-1:-1:-1;;;;;2152:27:67::1;-1:-1:-1::0;;;2152:27:67::1;-1:-1:-1::0;;;;;;2152:27:67;;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;;;::::1;::::0;2167:12;;2152;:27;;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;;2195:33:67::1;::::0;2217:10:::1;::::0;-1:-1:-1;2212:3:67;;2195:33:::1;::::0;;;::::1;1667:568;1469:766:::0;;;;;;:::o;1517:467:68:-;-1:-1:-1;;;;;1672:23:68;;1654:13;1672:23;;;:13;:23;;;;;1670:25;;1654:13;;1670:25;;;:::i;:::-;;;;;-1:-1:-1;1670:25:68;-1:-1:-1;1705:14:68;1722:35;1737:19;:7;1670:25;1737:12;:19::i;1722:35::-;1705:52;;1767:10;1780:68;1820:8;1830:6;1838:9;;1780:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1780:39:68;;-1:-1:-1;;;1780:68:68:i;:::-;1767:81;;1863:5;1858:37;;1877:18;;-1:-1:-1;;;1877:18:68;;;;;;;;;;;1858:37;1906:71;1926:8;1947:9;1967:7;1906;:71::i;:::-;1644:340;;;1517:467;;;;;:::o;4178:414:63:-;4319:39;4391:9;;-1:-1:-1;;;;;4432:31:63;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4417:46;;4478:9;4473:113;4493:6;4489:1;:10;4473:113;;;4538:37;4554:6;4562:9;;4572:1;4562:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;4538:15;:37::i;:::-;4520:55;;;;;;;;;;;;;;;;-1:-1:-1;;;4520:55:63;;;;;;;;-1:-1:-1;;;4520:55:63;;;;;;;;;;-1:-1:-1;;;4520:55:63;;;;;;;;;;;;;-1:-1:-1;;;;;4520:55:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:15;;;;4533:1;;4520:15;;;;;;:::i;:::-;;;;;;;;;;:55;4501:3;;4473:113;;;;4364:228;4178:414;;;;;:::o;1773:852:70:-;1926:9;1956:20;;;:38;;-1:-1:-1;1980:14:70;;1956:38;1952:198;;;2017:25;;-1:-1:-1;;;2017:25:70;;;;;;;;;;;1952:198;2081:9;2063:15;:27;2059:91;;;2113:26;;-1:-1:-1;;;2113:26:70;;;;;;;;;;;2059:91;2160:22;2197:9;2192:384;2212:15;2208:1;:19;2192:384;;;2248:16;2267:9;;2277:1;2267:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;2248:31;;2310:14;-1:-1:-1;;;;;2298:26:70;:8;-1:-1:-1;;;;;2298:26:70;;2294:112;;2333:29;;-1:-1:-1;;;2333:29:70;;;;;;;;;;;2294:112;2398:8;2381:25;;2424:56;2469:10;2424:33;2440:6;2448:8;2424:15;:33::i;:56::-;2420:106;;;2500:11;;;:::i;:::-;;;2420:106;2543:9;2556:1;2543:14;2539:27;;2559:7;;;;;;2539:27;-1:-1:-1;2229:3:70;;2192:384;;1773:852;;;;;;:::o;3782:110:63:-;3856:29;3864:10;3876:8;;3856:7;:29::i;:::-;3782:110;;:::o;3030:140:69:-;3117:46;3124:12;3138:6;577:1:59;3117:6:69;:46::i;3033:429:68:-;-1:-1:-1;;;;;3169:23:68;;3151:13;3169:23;;;:13;:23;;;;;3167:25;;3151:13;;3167:25;;;:::i;:::-;;;;;-1:-1:-1;3167:25:68;-1:-1:-1;3202:14:68;3219:36;3234:20;:8;;3167:25;3234:13;:20::i;3219:36::-;3202:53;;3265:10;3278:68;3318:8;3328:6;3336:9;;3278:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3278:39:68;;-1:-1:-1;;;3278:68:68:i;:::-;3265:81;;3361:5;3356:37;;3375:18;;-1:-1:-1;;;3375:18:68;;;;;;;;;;;3356:37;3404:51;3424:8;3444;;3404:7;:51::i;3393:157:69:-;3503:40;3510:12;3524:6;3532:10;3503:6;:40::i;:::-;3393:157;;;:::o;4025:196:68:-;-1:-1:-1;;;;;4185:23:68;;4122:14;4185:23;;;:13;:23;;;;;;4157:57;;4172:41;;4185:27;;4211:1;4185:27;:::i;:::-;4172:7;;:12;:41::i;4157:57::-;4148:66;4025:196;-1:-1:-1;;;4025:196:68:o;4634:199::-;-1:-1:-1;;;;;4797:23:68;;4733:14;4797:23;;;:13;:23;;;;;;4768:58;;4783:42;;4797:27;;4823:1;4797:27;:::i;:::-;4783:8;;;;:13;:42::i;4768:58::-;4759:67;4634:199;-1:-1:-1;;;;4634:199:68:o;4433:195::-;-1:-1:-1;;;;;4592:23:68;;4529:14;4592:23;;;:13;:23;;;;;;4564:57;;4579:41;;4592:27;;4618:1;4592:27;:::i;:::-;4579:7;;:12;:41::i;3625:106:63:-;3696:28;3704:10;3716:7;3696;:28::i;:::-;3625:106;:::o;4713:205:66:-;2989:10;:15;;;;;;;;;;:29;;;4810:3;;-1:-1:-1;;;;;2989:29:66;3022:10;2989:43;2985:95;;3055:14;;-1:-1:-1;;;3055:14:66;;;;;;;;;;;2985:95;4825:10:::1;:15:::0;;;::::1;::::0;;;;;;;;:29:::1;;:40:::0;;-1:-1:-1;;;;;;4825:40:66::1;-1:-1:-1::0;;;;;4825:40:66;::::1;::::0;;::::1;::::0;;;4880:31;;1801:51:98;;;4825:15:66;;4880:31:::1;::::0;1774:18:98;4880:31:66::1;;;;;;;4713:205:::0;;;:::o;6989:596:53:-;-1:-1:-1;;;7114:18:53;;7087:13;;;7114:18;7385:23;3959:27:68;;;;;;;;;;;-1:-1:-1;;;3959:27:68;;;;;;;;3996:16;;;;;;;;;;;-1:-1:-1;;;3996:16:68;;;;3959:27;3833:186;7385:23:53;6989:596;;7367:41;;;-1:-1:-1;7428:13:53;;-1:-1:-1;7479:4:53;;-1:-1:-1;6989:596:53;;-1:-1:-1;6989:596:53;:::o;4384:934:65:-;4582:32;4617:23;;;;;;;;;;4712;;;;-1:-1:-1;;;;;4712:23:65;4708:83;;4760:31;;-1:-1:-1;;;4760:31:65;;;;;5262:25:98;;;5235:18;;4760:31:65;5085:208:98;4708:83:65;4802:26;4831:246;4879:13;518:1:59;5023:11:65;5058:8;;4831:18;:246::i;:::-;4802:275;-1:-1:-1;5127:184:65;4802:275;5207:13;5245:9;5285:15;;5127:50;:184::i;2559:423:68:-;-1:-1:-1;;;;;2692:23:68;;2674:13;2692:23;;;:13;:23;;;;;2690:25;;2674:13;;2690:25;;;:::i;:::-;;;;;-1:-1:-1;2690:25:68;-1:-1:-1;2725:14:68;2742:35;2757:19;:7;2690:25;2757:12;:19::i;2742:35::-;2725:52;;2787:10;2800:68;2840:8;2850:6;2858:9;;2800:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2800:39:68;;-1:-1:-1;;;2800:68:68:i;:::-;2787:81;;2883:5;2878:37;;2897:18;;-1:-1:-1;;;2897:18:68;;;;;;;;;;;2878:37;2926:49;2946:8;2965:7;2926;:49::i;:::-;2664:318;;;2559:423;;;;:::o;3241:139:63:-;3334:39;3342:10;3354:9;3365:7;3334;:39::i;3220:123:69:-;3298:38;3305:10;3317:6;3325:10;3298:6;:38::i;3507:754:66:-;3602:15;3583:8;-1:-1:-1;;;;;3281:31:66;;;;:99;;-1:-1:-1;3317:63:66;;-1:-1:-1;;;3317:63:66;;-1:-1:-1;;;3317:63:66;;;26527:52:98;-1:-1:-1;;;;;3317:26:66;;;;;26500:18:98;;3317:63:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3316:64;3281:99;3277:162;;;3403:25;;-1:-1:-1;;;3403:25:66;;-1:-1:-1;;;;;1819:32:98;;3403:25:66;;;1801:51:98;1774:18;;3403:25:66;1655:203:98;3277:162:66;3717:65:::1;::::0;;;;::::1;::::0;;;-1:-1:-1;;;;;3717:65:66;::::1;::::0;;3769:10:::1;3717:65;::::0;::::1;::::0;3868:23:::1;3717:65:::0;3868:21:::1;:23::i;:::-;518:1:59;4013:15:66::0;;;::::1;::::0;;;;;;:24;3862:29;;-1:-1:-1;;;;;;4013:24:66::1;4005:49:::0;4001:110:::1;;4077:23;;-1:-1:-1::0;;;4077:23:66::1;;;;;;;;;;;4001:110;4171:10;:15:::0;;;::::1;::::0;;;;;;;:32;;;;-1:-1:-1;;;;;;4171:32:66;;::::1;-1:-1:-1::0;;;;;4171:32:66;;::::1;;::::0;;;;::::1;::::0;-1:-1:-1;4171:32:66;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;4219:35;;;::::1;::::0;4171:15;;4219:35:::1;::::0;4171:10;4219:35:::1;3619:642;3507:754:::0;;;;:::o;2286:124:67:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;2391:12:67;;;;:7;:12;;;;;;;;;2384:19;;;;;;;;;;;;;;-1:-1:-1;;;2384:19:67;;-1:-1:-1;;;;;2384:19:67;;;;;;;;;;;;;;;2391:12;;2384:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2286:124;;;:::o;3431:143:63:-;3527:40;3535:10;3547:9;3558:8;;3527:7;:40::i;8581:159:65:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8698:35:65;;;;;:20;:35;;;;;;;8691:42;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8691:42:65;;8698:35;;8691:42;;;;;;:::i;2874:106:69:-;2929:44;2936:10;2948:6;577:1:59;2929:6:69;:44::i;3943:184:63:-;4025:36;;:::i;:::-;4087:33;4103:6;4111:8;4087:15;:33::i;:::-;4073:47;;;;;;;;;;;;;;;;-1:-1:-1;;;4073:47:63;;;;;;;;-1:-1:-1;;;4073:47:63;;;;;;;;;;-1:-1:-1;;;4073:47:63;;;;;;;;;;;;;-1:-1:-1;;;;;4073:47:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3943:184:63:o;6406:685:69:-;-1:-1:-1;;;;;6567:32:69;;;6517:47;6567:32;;;:18;:32;;;;;6626:31;;6479:26;;6567:32;;6626:31;;;;6687:26;;;;;;;;6778:10;;;6774:32;;6790:16;;;6406:685;;;:::o;6774:32::-;6843:5;-1:-1:-1;;;;;6829:20:69;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6829:20:69;;6817:32;;6874:9;6859;6869:1;6859:12;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6859:24:69;;;:12;;;;;;;;;;;:24;6911:1;6894:191;6918:5;6914:1;:9;6894:191;;;7009:17;:33;;:51;7043:9;7057:1;7053;:5;;;;:::i;:::-;7043:16;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;7009:51:69;;;;;;;;;;;;;;;;-1:-1:-1;7009:51:69;;;:65;;;;;;;;;;6994:12;;7009:65;;;6994:9;;7004:1;;6994:12;;;;;;:::i;:::-;-1:-1:-1;;;;;6994:80:69;;;:12;;;;;;;;;;;:80;6925:3;;6894:191;;;;6507:584;;;6406:685;;;:::o;4227:200:68:-;-1:-1:-1;;;;;4391:23:68;;4327:14;4391:23;;;:13;:23;;;;;;4362:58;;4377:42;;4391:27;;4417:1;4391:27;:::i;:::-;4377:8;;;;:13;:42::i;1376:1448:69:-;1524:31;;;;;;;;;;;;;;;;;;1492:9;;1524:33;;:31;1492:9;;;;;;1524:31;;;;1492:9;;1524:31;1492:9;1524:31;;;;;;;;;-1:-1:-1;1524:31:69;;-1:-1:-1;;;1524:33:69:i;:::-;1519:76;;1566:29;;-1:-1:-1;;;1566:29:69;;;;;;;;;;;1519:76;1678:20;;;:57;;-1:-1:-1;1720:15:69;1702:33;;1678:57;1674:99;;;1744:29;;-1:-1:-1;;;1744:29:69;;;;;;;;;;;1674:99;1787:35;;;1783:77;;1831:29;;-1:-1:-1;;;1831:29:69;;;;;;;;;;;1783:77;518:1:59;2010:9:69;;518:1:59;2010:12:69;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2010:28:69;;2006:70;;2047:29;;-1:-1:-1;;;2047:29:69;;;;;;;;;;;2006:70;2155:10;2087:46;2136:30;;;:18;:30;;;;;2249:27;;;;-1:-1:-1;2245:83:69;;;2299:18;;-1:-1:-1;;;2299:18:69;;;;;;;;;;;2245:83;2338:55;;;2403:38;;;2338:55;2403:38;-1:-1:-1;;2403:38:69;;;2338:55;;;2403:38;;;;2479:9;;2338:30;2479:12;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;2451:40;;-1:-1:-1;;;;;2451:40:69;;;;;;-1:-1:-1;;;;;;2451:40:69;;;;;;2502:17;;;;:::i;:::-;;;;2589:9;2584:187;2604:15;2600:1;:19;2584:187;;;2640:17;2660:9;;2670:1;2660:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;2640:32;-1:-1:-1;2744:9:69;;2754:5;:1;2758;2754:5;:::i;:::-;2744:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2686:43:69;;;;;;;:32;;;;:43;;;;;;;;2730:10;2686:55;;;;;;;;:74;;-1:-1:-1;;;;;;2686:74:69;;;;;;;;;;;;2621:3;2584:187;;;-1:-1:-1;2786:31:69;;2806:10;;2786:31;;;;;1456:1368;;1376:1448;;;:::o;4185:148:65:-;4274:7;4300:26;:8;;4321:4;4300:20;:26::i;5369:1420::-;5620:21;5692:23;;;;;;;;;;5729;;;;-1:-1:-1;;;;;5729:23:65;5725:83;;5777:31;;-1:-1:-1;;;5777:31:65;;;;;5262:25:98;;;5235:18;;5777:31:65;5085:208:98;5725:83:65;5927:4;-1:-1:-1;;;;;5908:24:65;;;5904:63;;5941:26;;-1:-1:-1;;;5941:26:65;;-1:-1:-1;;;;;1819:32:98;;5941:26:65;;;1801:51:98;1774:18;;5941:26:65;1655:203:98;5904:63:65;6194:107;;-1:-1:-1;;;6194:107:65;;-1:-1:-1;;;;;6194:18:65;:35;;;;6238:9;;6194:107;;6261:7;;6285:13;;;;6194:107;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6178:123;;6312:26;6341:246;6389:13;518:1:59;6533:11:65;6568:8;;6341:18;:246::i;712:1172:79:-;807:25;792:4;596:22;;;;622:10;596:36;;;;595:71;;-1:-1:-1;;;;;;;638:27:79;;;;595:71;591:97;;;675:13;;-1:-1:-1;;;675:13:79;;;;;;;;;;;591:97;909:21:::1;933:9;;909:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;-1:-1:-1;909:33:79;;-1:-1:-1;1052:28:79::1;::::0;-1:-1:-1;1064:9:79;;-1:-1:-1;1064:9:79;;-1:-1:-1;1075:4:79;1052:11:::1;:28::i;:::-;1018:62;;1227:8;1221:4;1217:19;1304:8;1298:15;1653:4;1588:12;1522;1458:11;1395:307;1358:344;;;;1829:23;-1:-1:-1::0;;;;;1808:44:79::1;:17;-1:-1:-1::0;;;;;1808:44:79::1;;1804:73;;1861:16;;-1:-1:-1::0;;;1861:16:79::1;;;;;;;;;;;1804:73;834:1050;;712:1172:::0;;;;;;:::o;7531:999:65:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7836:35:65;;;;;;:20;:35;;;;;:47;:69;;4207:52:60;;;4115:147;7836:69:65;7832:139;;;7928:32;;-1:-1:-1;;;7928:32:65;;-1:-1:-1;;;;;1819:32:98;;7928::65;;;1801:51:98;1774:18;;7928:32:65;1655:203:98;7832:139:65;-1:-1:-1;;;;;1121:16:59;;;8073:59:65;;8113:19;;-1:-1:-1;;;8113:19:65;;;;;;;;;;;8073:59;8217:78;;;;;;;;8245:11;8217:78;;;;8266:6;-1:-1:-1;;;;;8217:78:65;;;;;8284:8;;8217:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8217:78:65;;;;-1:-1:-1;;;;;;;8357:35:65;;;;;:20;:35;;;;;;;;;:56;;;;;;;;;;;;;-1:-1:-1;;;;;;8357:56:65;;;;;;;;;;;;;;;;;;-1:-1:-1;8357:56:65;;:35;;-1:-1:-1;8357:56:65;;;;;;;;:::i;:::-;-1:-1:-1;;8470:53:65;;-1:-1:-1;;;;;8470:53:65;;;-1:-1:-1;8470:53:65;;;;;7531:999;;;;;;;:::o;7243:739:81:-;7525:18;;-1:-1:-1;;;;;7525:18:81;7571:41;;;;;:318;;-1:-1:-1;7632:248:81;;-1:-1:-1;;;7632:248:81;;-1:-1:-1;;;;;7632:42:81;;;;;:248;;7705:10;;7752:13;;7795:12;;7846:15;;;;7632:248;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:257;7571:318;7554:422;;;7921:44;;-1:-1:-1;;;7921:44:81;;;;;;;;;;;7554:422;7478:504;7243:739;;;;;:::o;4229:878:77:-;4321:13;4346:37;4411:8;4321:13;4436:558;4456:6;4452:1;:10;4436:558;;;4544:24;399:109;4721:8;;4730:1;4721:11;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:25;;;;;;;:::i;:::-;4772:8;;4781:1;4772:11;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:26;;;;;;;;;:::i;:::-;4834:8;;4843:1;4834:11;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:16;;;;;;;:::i;:::-;4824:27;;;;;;;:::i;:::-;;;;;;;;4904:8;;4913:1;4904:11;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:23;;;;;;;:::i;:::-;4887:41;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4887:41:77;;;;;;;;;4877:52;;4887:41;4877:52;;;;4636:315;;;36011:25:98;;;;-1:-1:-1;;;;;36072:32:98;;;36052:18;;;36045:60;;;;36153:14;36141:27;;;36121:18;;;36114:55;36185:18;;;36178:34;36228:19;;;36221:35;;;;35983:19;;4636:315:77;;;;;;;;;;;;4605:364;;;;;;4510:473;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4510:473:77;;;;;;;;;;-1:-1:-1;4464:3:77;;4436:558;;;-1:-1:-1;5056:35:77;;;;;;;;;;5022:77;;;881:193;5022:77;;;36857:25:98;;;;36898:18;;36891:34;36941:18;;;36934:34;;;36830:18;;5022:77:77;;;;;;;;;;;;;5012:88;;;;;;5004:96;;4336:771;;4229:878;;;;;:::o;5757:885:53:-;6066:22;9114:11;9255:9;9252:25;9069:14;9225:9;9222:28;9218:60;6102:73;;-1:-1:-1;8545:4:53;8539:11;;8606:16;8596:27;;8383:15;8650:4;8643:12;;8636:31;8426:18;8701:12;;;8694:33;;;;8761:9;8754:4;8747:12;;8740:31;8805:9;8798:4;8791:12;;8784:31;8854:4;8841:18;;6102:73;6309:18;6303:4;6296:32;6375:6;6369:4;6362:20;6439:10;6433:4;6426:24;6515:4;6509;6499:21;6489:31;;6624:1;6618:4;6611:15;5757:885;;;:::o;1980:4154:56:-;-1:-1:-1;;;;;2295:24:56;;;;2110:12;2322:6;2279:3839;;;2365:4;2359:11;2400:4;2394;2387:18;2456:4;2445:9;2441:20;2435:27;2429:4;2422:41;2512:2;2500:9;2494:16;2491:24;2488:1077;;2569:4;2558:9;2554:20;2548:27;2627:2;2622;2617:3;2613:12;2609:21;2603:4;2596:35;2687:2;2684:1;2680:10;2677:1;2673:18;2667:4;2660:32;;3089:4;3035;2983;2930;2872:1;2794:5;2754:384;3309:1;3303:8;3295:6;3291:21;3272:16;3265:24;3262:51;3252:295;;-1:-1:-1;3391:1:56;3385:4;3378:15;3451:4;3444:15;-1:-1:-1;3352:1:56;3520:5;;3252:295;;2488:1077;3606:2;3594:9;3588:16;3585:24;3582:1043;;3674:4;3663:9;3659:20;3653:27;3650:1;3645:36;3639:4;3632:50;3745:4;3734:9;3730:20;3724:27;3718:4;3711:41;4149:4;4095;4043;3990;3932:1;3854:5;3814:384;4369:1;4363:8;4355:6;4351:21;4332:16;4325:24;4322:51;4312:295;;-1:-1:-1;4451:1:56;4445:4;4438:15;4511:4;4504:15;-1:-1:-1;4412:1:56;4580:5;;4312:295;;3582:1043;4655:1;4649:4;4642:15;4713:1;4707:4;4700:15;4787:10;4782:3;4778:20;4825:1;4822;4815:12;4924:4;4917;4914:1;4910:12;4903:26;4962:4;4959:1;4955:12;4994:4;4991:1;4984:15;5137:9;5131:16;5125:4;5121:27;5218:1;5211:4;5208:1;5204:12;5201:1;5190:9;5187:1;5180:5;5169:51;5165:56;;6004:4;5952:1;5888:4;5870:16;5866:27;5806:1;5749:6;5700:5;5664:400;5418:8;;5415:15;;;5296:786;;-1:-1:-1;;1980:4154:56;;;;;:::o;3559:1256:64:-;3691:8;3674:14;3691:8;-1:-1:-1;;;;;3753:31:64;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3716:68;;3885:23;3923:9;3918:642;3938:6;3934:1;:10;3918:642;;;3965:29;4105:85;4136:9;4157:8;4176;;4185:1;4176:11;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;4105:17;:85::i;:::-;4072:7;4080:1;4072:10;;;;;;;;:::i;:::-;;;;;;4071:119;;;;;;;;4426:1;4431;4426:6;4422:127;;4448:17;4434:31;;4422:127;;;4207:52:60;;;4484:65:64;;4529:20;;-1:-1:-1;;;4529:20:64;;;;;;;;;;;4484:65;-1:-1:-1;3946:3:64;;3918:642;;;-1:-1:-1;4693:18:64;;;;:7;:18;;;;;4642:72;;:7;;:39;:72::i;:::-;4782:10;:23;;;;;;;;;;4724:84;;:7;;:44;:84::i;12375:212::-;-1:-1:-1;;;;;12531:39:64;;;12466:38;12531:39;;;:31;:39;;;;;;;;:49;;;;;;;;;;;;12375:212::o;3414:1729:82:-;4089:24;;3522:4;;4054:10;4140:15;;;;4180:2;4176:13;;;4220:15;;;4256:13;;;;4300:15;;;4336:13;;4382:15;4140;4462:71;;4517:5;4510:12;;;;;;;;4462:71;4591:32;;;;;:68;;;4645:14;4627:15;:32;4591:68;4587:111;;;4682:5;4675:12;;;;;;;;4587:111;4761:32;;4757:75;;4816:5;4809:12;;;;;;;;4757:75;4207:52:60;;;5003:74:82;;;;-1:-1:-1;5040:37:82;:23;;;;;5064:12;;5040:23;:37;:::i;:::-;5039:38;5003:74;4999:117;;;5100:5;5093:12;;;;;;;;4999:117;5132:4;5125:11;;;;;;3414:1729;;;;;:::o;330:217:78:-;403:9;473:10;485:12;:19;;;514:12;:22;;;456:82;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;446:93;;;;;;424:116;;330:217;;;:::o;3406:608:77:-;3495:13;597:189;399:109;3728:21;;;;:7;:21;:::i;:::-;3775:22;;;;;;;;:::i;:::-;3833:12;;;;:7;:12;:::i;:::-;3823:23;;;;;;;:::i;:::-;;;;;;;;;3899:19;;;;:7;:19;:::i;:::-;3882:37;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3882:37:77;;;;;;;;;3872:48;;3882:37;3872:48;;;;3643:299;;;36011:25:98;;;;-1:-1:-1;;;;;36072:32:98;;;36052:18;;;36045:60;;;;36153:14;36141:27;;;36121:18;;;36114:55;36185:18;;;36178:34;36228:19;;;36221:35;;;;35983:19;;3643:299:77;;;;-1:-1:-1;;3643:299:77;;;;;;;;;3612:348;;3643:299;3612:348;;;;3551:446;;;36857:25:98;;;;36898:18;;36891:34;;;;36941:18;;;36934:34;;;36830:18;;3551:446:77;;;;;;;;;;;;;3528:479;;;;;;3520:487;;3406:608;;;;:::o;2576:448:64:-;2689:31;2722:23;2761:81;2792:9;2813:8;2832:7;2761:17;:81::i;:::-;2903:18;;;;:7;:18;;;;;2688:154;;-1:-1:-1;2688:154:64;-1:-1:-1;2853:71:64;;2688:154;;2853:38;:71::i;:::-;2991:10;:23;;;;;;;;;;2934:83;;:6;;:43;:83::i;9359:1077::-;9469:8;9452:14;9469:8;-1:-1:-1;;;;;9531:31:64;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;9494:68;;9572:23;9921:9;9916:315;9936:6;9932:1;:10;9916:315;;;9963:29;10040:39;10057:8;10067;;10076:1;10067:11;;;;;;;:::i;:::-;;;;;;10040:16;:39::i;:::-;10007:7;10015:1;10007:10;;;;;;;;:::i;:::-;;;;;;10006:73;;;;;;;;10097:1;10102;10097:6;10093:127;;10119:17;10105:31;;10093:127;;;4207:52:60;;;10155:65:64;;10200:20;;-1:-1:-1;;;10200:20:64;;;;;;;;;;;10155:65;-1:-1:-1;9944:3:64;;9916:315;;;-1:-1:-1;10403:10:64;:23;;;;;;;;;;10350:79;;:7;;:39;:79::i;4018:2337:69:-;-1:-1:-1;;;;;4169:32:69;;;4119:47;4169:32;;;:18;:32;;;;;4267:31;;4169:32;;4267:31;;;;;;4328:27;;;;;;4384:26;;;;;4479:24;;;:42;;-1:-1:-1;4507:14:69;;4479:42;4475:1874;;;4544:25;;-1:-1:-1;;;4544:25:69;;;;;;;;;;;4475:1874;4695:9;4708:1;4695:14;4691:1658;;4725:38;4766:55;4792:6;4810:8;4766:15;:55::i;:::-;4725:96;-1:-1:-1;4839:35:69;4725:96;4863:10;4839:23;:35::i;:::-;4835:48;;;4876:7;;;;;4018:2337;;;:::o;4835:48::-;5047:9;5042:294;5062:13;5058:1;:17;5042:294;;;-1:-1:-1;;;;;5111:43:69;;;;;;;:33;;;:43;;;;;;;;:57;;;;;;;;;;;;;;;5201:55;5227:6;5111:57;5201:15;:55::i;:::-;5186:70;-1:-1:-1;5278:35:69;5186:70;5302:10;5278:23;:35::i;:::-;5274:48;;;5315:7;;;;;;4018:2337;;;:::o;5274:48::-;5077:3;;5042:294;;4691:1658;5643:38;5684:55;5710:6;5728:8;5684:15;:55::i;:::-;5643:96;-1:-1:-1;5757:35:69;5643:96;5781:10;5757:23;:35::i;:::-;5753:52;;;5794:11;;;;:::i;:::-;;;;5753:52;5837:1;5820:453;5844:13;5840:1;:17;5820:453;;;-1:-1:-1;;;;;5947:43:69;;;;;;;:33;;;:43;;;;;;;;:57;;;;;;;;;;;;;;;6037:55;6063:6;5947:57;6037:15;:55::i;:::-;6022:70;-1:-1:-1;6114:35:69;6022:70;6138:10;6114:23;:35::i;:::-;6110:52;;;6151:11;;;;:::i;:::-;;;;6110:52;6236:9;6249:1;6236:14;6232:27;;6252:7;;;;;;4018:2337;;;:::o;6232:27::-;5859:3;;5820:453;;;-1:-1:-1;6290:13:69;;6286:52;;6312:26;;-1:-1:-1;;;6312:26:69;;;;;;;;;;;5772:586:77;5863:13;5888:37;5953:8;5863:13;5978:267;5998:6;5994:1;:10;5978:267;;;6086:24;1228:53;6193:8;;6202:1;6193:11;;;;;;;:::i;:::-;:25;;:11;;;;;:25;;;;-1:-1:-1;6193:25:77;:::i;:::-;6157:62;;;;;;;;37692:25:98;;;-1:-1:-1;;;;;37753:32:98;37748:2;37733:18;;37726:60;37680:2;37665:18;;37518:274;6157:62:77;;;;;;;;;;;;;6147:73;;;;;;6052:182;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6052:182:77;;;;;;;;;;-1:-1:-1;6006:3:77;;5978:267;;;-1:-1:-1;6307:35:77;;;;;;;;;;6273:77;;;1520:121;6273:77;;;36857:25:98;;;;36898:18;;36891:34;36941:18;;;36934:34;;;36830:18;;6273:77:77;36655:319:98;5314:244:77;5402:13;1339:117;1228:53;5519:21;;;;:7;:21;:::i;:::-;5483:58;;;;;;;;37692:25:98;;;-1:-1:-1;;;;;37753:32:98;37748:2;37733:18;;37726:60;37680:2;37665:18;;37518:274;8809:281:64;8900:31;8933:23;8960:35;8977:8;8987:7;8960:16;:35::i;:::-;9057:10;:23;;;;;;;;;;8899:96;;-1:-1:-1;8899:96:64;-1:-1:-1;9005:78:64;;8899:96;;9005:38;:78::i;703:184:78:-;860:17;;831:47;;-1:-1:-1;;;;;;848:10:78;38051:2:98;38047:15;;;38043:24;;831:47:78;;;38031:37:98;38102:15;;;;38098:24;;;38084:12;;;38077:46;774:11:78;;38139:12:98;;831:47:78;37797:360:98;15976:147:54;16050:11;16082:34;16113:1;16082:21;:34::i;2656:915:79:-;2739:31;3222:4;3294;3464:8;;3447:26;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3364:110;;;;;;3046:454;;;;;;;;;-1:-1:-1;;;;;;38448:26:98;;38511:2;38507:15;;;;-1:-1:-1;;;;;;38503:53:98;38499:1;38490:11;;38483:74;38582:2;38573:12;;38566:28;;;;38619:2;38610:12;;38603:28;38656:2;38647:12;;38162:503;3046:454:79;;;;-1:-1:-1;;3046:454:79;;;;;;;;;2967:555;;3046:454;2967:555;;;;;2656:915;-1:-1:-1;;;;2656:915:79:o;5858:2399:64:-;6025:31;;:::i;:::-;6058:23;6166:18;;;:7;:18;;;;;:31;;;6162:77;;6224:15;;-1:-1:-1;;;6224:15:64;;;;;;;;;;;6162:77;873:15:59;6250:14:64;6379:22;;;;;;;;:::i;:::-;:40;;;;:77;;;;-1:-1:-1;6423:33:64;;;:22;;;;;;;;:::i;:::-;:33;;;;6379:77;6375:138;;;6479:23;;-1:-1:-1;;;6479:23:64;;;;;;;;;;;6375:138;6557:14;6574:21;;;;:7;:21;:::i;:::-;6557:38;;6605:33;6641:55;6667:6;6685:8;6641:15;:55::i;:::-;6794:12;;6605:91;;-1:-1:-1;6794:12:64;;:30;;;;:74;;-1:-1:-1;6828:22:64;;-1:-1:-1;;;6828:22:64;;;;:40;6794:74;6790:129;;;6891:17;;-1:-1:-1;;;6891:17:64;;;;;;;;;;;6790:129;-1:-1:-1;;;;;6997:28:64;;;;;;:20;:28;;;;;:40;;-1:-1:-1;4058:52:60;7117:103:64;;7177:32;;-1:-1:-1;;;7177:32:64;;-1:-1:-1;;;;;1819:32:98;;7177::64;;;1801:51:98;1774:18;;7177:32:64;1655:203:98;7117:103:64;7463:33;7499:55;7523:28;-1:-1:-1;;;;;7523:20:64;;7544:6;7523:20;:28::i;:::-;7499:7;;:15;:55::i;:::-;7463:91;;7652:355;;;;;;;;7690:7;7652:355;;;;;;7727:7;:22;;;;;;;;;;:::i;:::-;7652:355;;;;474:1:59;7652:355:64;;;;;;7828:26;:19;;;;:7;:19;:::i;:::-;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7828:24:64;;-1:-1:-1;;;7828:26:64:i;:::-;7652:355;;;;;;7917:6;-1:-1:-1;;;;;7652:355:64;;;;;7947:8;-1:-1:-1;;;;;7652:355:64;;;;;7982:14;-1:-1:-1;;;;;7652:355:64;;;;;7879:9;7652:355;;;7643:364;;8119:6;8067:31;:39;8099:6;-1:-1:-1;;;;;8067:39:64;-1:-1:-1;;;;;8067:39:64;;;;;;;;;;;;:49;8107:8;-1:-1:-1;;;;;8067:49:64;-1:-1:-1;;;;;8067:49:64;;;;;;;;;;;;:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8067:58:64;;;;;-1:-1:-1;;;;;8067:58:64;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8067:58:64;;;;;-1:-1:-1;;;;;8067:58:64;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8067:58:64;;;;;-1:-1:-1;;;;;8067:58:64;;;;;;;;;;;;;;;;;8233:14;-1:-1:-1;;;;;8141:109:64;8185:8;-1:-1:-1;;;;;8141:109:64;8167:6;-1:-1:-1;;;;;8141:109:64;;8206:9;8141:109;;;;5262:25:98;;5250:2;5235:18;;5085:208;8141:109:64;;;;;;;;6087:2170;;;;5858:2399;;;;;;:::o;2124:609:81:-;2332:20;;;;2328:76;;2379:25;;-1:-1:-1;;;2379:25:81;;;;;;;;;;;2328:76;2478:17;;-1:-1:-1;;;2478:17:81;;-1:-1:-1;;;;;2478:17:81;2560:34;;;;;:91;;-1:-1:-1;2598:44:81;;-1:-1:-1;;;2598:44:81;;-1:-1:-1;;;;;2598:24:81;;;;;:44;;2623:18;;2598:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;2560:91;2556:171;;;2674:42;;-1:-1:-1;;;2674:42:81;;;;;;;;;;;3943:462;4160:18;;-1:-1:-1;;;;;4160:18:81;;4189:54;;4236:7;3943:462;;:::o;4189:54::-;4257:55;;-1:-1:-1;;;4257:55:81;;-1:-1:-1;;;;;4257:35:81;;;;;:55;;4293:18;;4257:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;4316:5;4257:64;4253:146;;4344:44;;-1:-1:-1;;;4344:44:81;;;;;;;;;;;199:190:80;285:4;342:34;365:10;342:1;:34;:::i;:::-;309:67;;;;308:74;;;-1:-1:-1;199:190:80;;;;:::o;1112:605:81:-;1317:20;;;;1313:76;;1364:25;;-1:-1:-1;;;1364:25:81;;;;;;;;;;;1313:76;1463:17;;-1:-1:-1;;;1463:17:81;;-1:-1:-1;;;;;1463:17:81;1545:34;;;;;:90;;-1:-1:-1;1583:43:81;;-1:-1:-1;;;1583:43:81;;-1:-1:-1;;;;;1583:24:81;;;;;:43;;1608:17;;1583:43;;;:::i;3134:405::-;3314:18;;-1:-1:-1;;;;;3314:18:81;3347:41;;;;;:108;;-1:-1:-1;3392:54:81;;-1:-1:-1;;;3392:54:81;;-1:-1:-1;;;;;3392:35:81;;;;;:54;;3428:17;;3392:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;3347:108;3343:190;;;3478:44;;-1:-1:-1;;;3478:44:81;;;;;;;;;;;10872:1286:64;11007:31;;:::i;:::-;11040:23;;11120:31;11040:23;11152:21;;;;:7;:21;:::i;:::-;-1:-1:-1;;;;;11120:54:64;;;;;;;;;;;;;;;;;-1:-1:-1;11120:54:64;;;:63;;;;;;;;;;11268:21;;;;;;;;;;;;;;;-1:-1:-1;;;11268:21:64;;;;;;;;-1:-1:-1;;;11268:21:64;;;;;;;;;;-1:-1:-1;;;11268:21:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11120:63:64;;-1:-1:-1;11268:21:64;11334;;;;;;:::i;:::-;-1:-1:-1;;;;;11313:43:64;;;;;;;;;;;;;;-1:-1:-1;11313:43:64;:55;11465:18;;;;11313:55;;-1:-1:-1;4483:66:60;11461:102:64;;11531:21;;-1:-1:-1;;;11531:21:64;;;;;;;;;;;11461:102;11667:7;-1:-1:-1;;;;;11648:26:64;:6;:15;;;-1:-1:-1;;;;;11648:26:64;;11644:78;;11697:14;;-1:-1:-1;;;11697:14:64;;;;;;;;;;;11644:78;11814:21;;;;:39;;;11810:93;;11876:16;;-1:-1:-1;;;11876:16:64;;;;;;;;;;;11810:93;12005:37;;-1:-1:-1;;;;12005:37:64;-1:-1:-1;;;12005:37:64;873:15:59;12005:37:64;;;;;-1:-1:-1;;;;;12058:93:64;;12083:21;;;;;;:::i;:::-;-1:-1:-1;;;;;12058:93:64;;12132:6;:16;;;12058:93;;;;5262:25:98;;5250:2;5235:18;;5085:208;12058:93:64;;;;;;;;11069:1089;10872:1286;;;;;:::o;6050:586:81:-;6294:18;;6228:13;;-1:-1:-1;;;;;6294:18:81;;6323:58;;6377:4;6370:11;;;;;6323:58;6395:54;;-1:-1:-1;;;6395:54:81;;-1:-1:-1;;;;;6395:34:81;;;;;:54;;6430:18;;6395:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6395:54:81;;;;;;;;-1:-1:-1;;6395:54:81;;;;;;;;;;;;:::i;:::-;;;6391:239;;6552:41;;-1:-1:-1;;;;;1819:32:98;;1801:51;;6552:41:81;;1789:2:98;1774:18;6552:41:81;;;;;;;6614:5;6607:12;;;;;6391:239;6493:9;6489:26;;;6511:4;6504:11;;;;;;6489:26;6450:76;6391:239;6247:389;6050:586;;;;:::o;4936:582::-;5177:18;;5111:13;;-1:-1:-1;;;;;5177:18:81;;5206:58;;5260:4;5253:11;;;;;5206:58;5278:53;;-1:-1:-1;;;5278:53:81;;-1:-1:-1;;;;;5278:34:81;;;;;:53;;5313:17;;5278:53;;;:::i;14688:552:54:-;14888:8;;14861:1;;14898;-1:-1:-1;14875:349:54;;14951:1;14945:8;14942:1;14938:16;14935:1;14931:24;14990:4;14987:1;14983:12;14978:17;;14972:238;15034:8;;15075:4;15068:12;;;15117:8;;15068:12;;15111:15;;-1:-1:-1;15169:11:54;;;15157:24;;14972:238;15147:45;14972:238;14976:21;14875:349;14688:552;;;:::o;3005:193:77:-;3124:66;;-1:-1:-1;;;;;;40321:2:98;40317:15;;;40313:24;;3124:66:77;;;40301:37:98;40372:15;;;40368:24;40354:12;;;40347:46;3159:15:77;40409:12:98;;;40402:28;3176:13:77;40446:12:98;;;40439:28;3083:12:77;;40483:13:98;;3124:66:77;40038:464:98;2245:451:77;2331:30;2642:46;2669:12;;;;:7;:12;:::i;:::-;2642:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2683:4:77;;-1:-1:-1;2642:26:77;;-1:-1:-1;;2642:46:77:i;526:483:80:-;642:18;;596:17;;;;;716:240;736:6;732:1;:10;716:240;;;789:11;801:1;789:14;;;;;;;;:::i;:::-;;;;;;;763:41;;830:2;822:5;:10;:35;;;;836:21;843:6;851:5;836:6;:21::i;:::-;818:77;;;866:29;;-1:-1:-1;;;866:29:80;;;;;;;;;;;818:77;934:10;939:5;934:1;:10;:::i;:::-;918:27;;:6;:27;:::i;:::-;909:36;-1:-1:-1;744:3:80;;716:240;;;-1:-1:-1;995:6:80;;526:483;-1:-1:-1;;;;526:483:80:o;4710:1266:55:-;4805:15;4934:4;4928:11;4992;4972:18;4968:36;5385:8;5379:4;5375:19;5347:26;5344:51;5224:6;5214:8;5211:20;5205:4;5201:31;5018:391;5553:4;5547:3;5537:8;5533:18;5526:4;5520;5516:15;5513:1;5505:53;5494:64;;;5627:7;5617:229;;5739:10;5733:4;5726:24;5827:4;5821;5814:18;5617:229;5928:32;;;-1:-1:-1;4710:1266:55;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:347:98:-;65:8;75:6;129:3;122:4;114:6;110:17;106:27;96:55;;147:1;144;137:12;96:55;-1:-1:-1;170:20:98;;-1:-1:-1;;;;;202:30:98;;199:50;;;245:1;242;235:12;199:50;282:4;274:6;270:17;258:29;;334:3;327:4;318:6;310;306:19;302:30;299:39;296:59;;;351:1;348;341:12;296:59;14:347;;;;;:::o;366:1175::-;527:6;535;543;551;559;567;575;583;636:3;624:9;615:7;611:23;607:33;604:53;;;653:1;650;643:12;604:53;689:9;676:23;666:33;;746:2;735:9;731:18;718:32;708:42;;801:2;790:9;786:18;773:32;-1:-1:-1;;;;;865:2:98;857:6;854:14;851:34;;;881:1;878;871:12;851:34;920:58;970:7;961:6;950:9;946:22;920:58;:::i;:::-;997:8;;-1:-1:-1;894:84:98;-1:-1:-1;1085:2:98;1070:18;;1057:32;;-1:-1:-1;1101:16:98;;;1098:36;;;1130:1;1127;1120:12;1098:36;1169:60;1221:7;1210:8;1199:9;1195:24;1169:60;:::i;:::-;1248:8;;-1:-1:-1;1143:86:98;-1:-1:-1;1336:3:98;1321:19;;1308:33;;-1:-1:-1;1353:16:98;;;1350:36;;;1382:1;1379;1372:12;1350:36;;1421:60;1473:7;1462:8;1451:9;1447:24;1421:60;:::i;:::-;366:1175;;;;-1:-1:-1;366:1175:98;;-1:-1:-1;366:1175:98;;;;;;1500:8;-1:-1:-1;;;366:1175:98:o;1863:131::-;-1:-1:-1;;;;;1938:31:98;;1928:42;;1918:70;;1984:1;1981;1974:12;1999:394;2089:8;2099:6;2153:3;2146:4;2138:6;2134:17;2130:27;2120:55;;2171:1;2168;2161:12;2120:55;-1:-1:-1;2194:20:98;;-1:-1:-1;;;;;2226:30:98;;2223:50;;;2269:1;2266;2259:12;2223:50;2306:4;2298:6;2294:17;2282:29;;2366:3;2359:4;2349:6;2346:1;2342:14;2334:6;2330:27;2326:38;2323:47;2320:67;;;2383:1;2380;2373:12;2398:1046;2592:6;2600;2608;2616;2624;2632;2685:3;2673:9;2664:7;2660:23;2656:33;2653:53;;;2702:1;2699;2692:12;2653:53;2738:9;2725:23;2715:33;;2798:2;2787:9;2783:18;2770:32;2811:31;2836:5;2811:31;:::i;:::-;2861:5;-1:-1:-1;2917:2:98;2902:18;;2889:32;-1:-1:-1;;;;;2970:14:98;;;2967:34;;;2997:1;2994;2987:12;2967:34;3036:97;3125:7;3116:6;3105:9;3101:22;3036:97;:::i;:::-;3152:8;;-1:-1:-1;3010:123:98;-1:-1:-1;3240:2:98;3225:18;;3212:32;;-1:-1:-1;3256:16:98;;;3253:36;;;3285:1;3282;3275:12;3253:36;;3324:60;3376:7;3365:8;3354:9;3350:24;3324:60;:::i;:::-;2398:1046;;;;-1:-1:-1;2398:1046:98;;-1:-1:-1;2398:1046:98;;3403:8;;2398:1046;-1:-1:-1;;;2398:1046:98:o;3449:667::-;3553:6;3561;3569;3577;3630:2;3618:9;3609:7;3605:23;3601:32;3598:52;;;3646:1;3643;3636:12;3598:52;3685:9;3672:23;3704:31;3729:5;3704:31;:::i;:::-;3754:5;-1:-1:-1;3810:2:98;3795:18;;3782:32;-1:-1:-1;;;;;3826:30:98;;3823:50;;;3869:1;3866;3859:12;3823:50;3908:97;3997:7;3988:6;3977:9;3973:22;3908:97;:::i;:::-;3449:667;;4024:8;;-1:-1:-1;3882:123:98;;4106:2;4091:18;4078:32;;3449:667;-1:-1:-1;;;;3449:667:98:o;4121:375::-;4249:6;4257;4310:2;4298:9;4289:7;4285:23;4281:32;4278:52;;;4326:1;4323;4316:12;4278:52;4362:9;4349:23;4339:33;;4422:2;4411:9;4407:18;4394:32;4435:31;4460:5;4435:31;:::i;:::-;4485:5;4475:15;;;4121:375;;;;;:::o;4501:579::-;4615:6;4623;4631;4684:2;4672:9;4663:7;4659:23;4655:32;4652:52;;;4700:1;4697;4690:12;4652:52;4740:9;4727:23;-1:-1:-1;;;;;4765:6:98;4762:30;4759:50;;;4805:1;4802;4795:12;4759:50;4844:58;4894:7;4885:6;4874:9;4870:22;4844:58;:::i;:::-;4921:8;;-1:-1:-1;4818:84:98;-1:-1:-1;;5006:2:98;4991:18;;4978:32;5019:31;4978:32;5019:31;:::i;:::-;5069:5;5059:15;;;4501:579;;;;;:::o;5298:167::-;5369:5;5414:3;5405:6;5400:3;5396:16;5392:26;5389:46;;;5431:1;5428;5421:12;5470:922;5637:6;5645;5653;5661;5669;5722:3;5710:9;5701:7;5697:23;5693:33;5690:53;;;5739:1;5736;5729:12;5690:53;5775:9;5762:23;5752:33;;5835:2;5824:9;5820:18;5807:32;5848:31;5873:5;5848:31;:::i;:::-;5898:5;-1:-1:-1;5954:2:98;5939:18;;5926:32;-1:-1:-1;;;;;6007:14:98;;;6004:34;;;6034:1;6031;6024:12;6004:34;6057:78;6127:7;6118:6;6107:9;6103:22;6057:78;:::i;:::-;6047:88;;6188:2;6177:9;6173:18;6160:32;6144:48;;6217:2;6207:8;6204:16;6201:36;;;6233:1;6230;6223:12;6201:36;;6272:60;6324:7;6313:8;6302:9;6298:24;6272:60;:::i;:::-;5470:922;;;;-1:-1:-1;5470:922:98;;-1:-1:-1;6351:8:98;;6246:86;5470:922;-1:-1:-1;;;5470:922:98:o;6397:599::-;6492:6;6500;6508;6561:2;6549:9;6540:7;6536:23;6532:32;6529:52;;;6577:1;6574;6567:12;6529:52;6616:9;6603:23;6635:31;6660:5;6635:31;:::i;:::-;6685:5;-1:-1:-1;6741:2:98;6726:18;;6713:32;-1:-1:-1;;;;;6757:30:98;;6754:50;;;6800:1;6797;6790:12;6754:50;6839:97;6928:7;6919:6;6908:9;6904:22;6839:97;:::i;:::-;6397:599;;6955:8;;-1:-1:-1;6813:123:98;;-1:-1:-1;;;;6397:599:98:o;7001:725::-;7082:14;7135:2;7127:5;7121:12;7117:21;7112:3;7105:34;7200:2;7192:4;7185:5;7181:16;7175:23;7171:32;7164:4;7159:3;7155:14;7148:56;7265:2;7257:4;7250:5;7246:16;7240:23;7236:32;7229:4;7224:3;7220:14;7213:56;;7330:10;7322:4;7315:5;7311:16;7305:23;7301:40;7294:4;7289:3;7285:14;7278:64;7388:4;7381:5;7377:16;7371:23;7430:1;7426;7421:3;7417:11;7413:19;7482:2;7468:12;7464:21;7457:4;7452:3;7448:14;7441:45;7547:2;7539:4;7532:5;7528:16;7522:23;7518:32;7511:4;7506:3;7502:14;7495:56;;;7599:4;7592:5;7588:16;7582:23;7614:50;7658:4;7653:3;7649:14;7633;-1:-1:-1;;;;;1612:31:98;1600:44;;1546:104;7614:50;-1:-1:-1;7713:4:98;7702:16;;;7696:23;7680:14;;7673:47;7001:725::o;7731:737::-;7974:2;8026:21;;;8096:13;;7999:18;;;8118:22;;;7945:4;;7974:2;8197:15;;;;8171:2;8156:18;;;7945:4;8240:202;8254:6;8251:1;8248:13;8240:202;;;8303:55;8354:3;8345:6;8339:13;8303:55;:::i;:::-;8417:15;;;;8387:6;8378:16;;;;;8276:1;8269:9;8240:202;;;-1:-1:-1;8459:3:98;;7731:737;-1:-1:-1;;;;;;7731:737:98:o;8473:768::-;8618:6;8626;8634;8642;8650;8703:3;8691:9;8682:7;8678:23;8674:33;8671:53;;;8720:1;8717;8710:12;8671:53;8759:9;8746:23;8778:31;8803:5;8778:31;:::i;:::-;8828:5;-1:-1:-1;8880:2:98;8865:18;;8852:32;;-1:-1:-1;8935:2:98;8920:18;;8907:32;-1:-1:-1;;;;;8951:30:98;;8948:50;;;8994:1;8991;8984:12;8948:50;9033:97;9122:7;9113:6;9102:9;9098:22;9033:97;:::i;:::-;8473:768;;;;-1:-1:-1;9149:8:98;9231:2;9216:18;9203:32;;8473:768;-1:-1:-1;;;;8473:768:98:o;9246:502::-;9370:6;9378;9431:2;9419:9;9410:7;9406:23;9402:32;9399:52;;;9447:1;9444;9437:12;9399:52;9487:9;9474:23;-1:-1:-1;;;;;9512:6:98;9509:30;9506:50;;;9552:1;9549;9542:12;9506:50;9591:97;9680:7;9671:6;9660:9;9656:22;9591:97;:::i;:::-;9707:8;;9565:123;;-1:-1:-1;9246:502:98;-1:-1:-1;;;;9246:502:98:o;9753:388::-;9821:6;9829;9882:2;9870:9;9861:7;9857:23;9853:32;9850:52;;;9898:1;9895;9888:12;9850:52;9937:9;9924:23;9956:31;9981:5;9956:31;:::i;:::-;10006:5;-1:-1:-1;10063:2:98;10048:18;;10035:32;10076:33;10035:32;10076:33;:::i;10146:945::-;10299:6;10307;10315;10323;10331;10384:2;10372:9;10363:7;10359:23;10355:32;10352:52;;;10400:1;10397;10390:12;10352:52;10439:9;10426:23;10458:31;10483:5;10458:31;:::i;:::-;10508:5;-1:-1:-1;10564:2:98;10549:18;;10536:32;-1:-1:-1;;;;;10617:14:98;;;10614:34;;;10644:1;10641;10634:12;10614:34;10683:97;10772:7;10763:6;10752:9;10748:22;10683:97;:::i;:::-;10799:8;;-1:-1:-1;10657:123:98;-1:-1:-1;10887:2:98;10872:18;;10859:32;;-1:-1:-1;10903:16:98;;;10900:36;;;10932:1;10929;10922:12;11096:488;11205:6;11213;11221;11274:2;11262:9;11253:7;11249:23;11245:32;11242:52;;;11290:1;11287;11280:12;11242:52;11329:9;11316:23;11348:31;11373:5;11348:31;:::i;:::-;11398:5;-1:-1:-1;11455:2:98;11440:18;;11427:32;11468:33;11427:32;11468:33;:::i;:::-;11096:488;;11520:7;;-1:-1:-1;;;11574:2:98;11559:18;;;;11546:32;;11096:488::o;11589:514::-;11696:6;11704;11757:2;11745:9;11736:7;11732:23;11728:32;11725:52;;;11773:1;11770;11763:12;11725:52;11813:9;11800:23;-1:-1:-1;;;;;11838:6:98;11835:30;11832:50;;;11878:1;11875;11868:12;11832:50;11901:78;11971:7;11962:6;11951:9;11947:22;11901:78;:::i;:::-;11891:88;;;12029:2;12018:9;12014:18;12001:32;12042:31;12067:5;12042:31;:::i;12290:637::-;12423:6;12431;12439;12492:2;12480:9;12471:7;12467:23;12463:32;12460:52;;;12508:1;12505;12498:12;12460:52;12548:9;12535:23;-1:-1:-1;;;;;12573:6:98;12570:30;12567:50;;;12613:1;12610;12603:12;12567:50;12652:97;12741:7;12732:6;12721:9;12717:22;12652:97;:::i;12932:165::-;13002:5;13047:2;13038:6;13033:3;13029:16;13025:25;13022:45;;;13063:1;13060;13053:12;13102:394;13208:6;13216;13269:2;13257:9;13248:7;13244:23;13240:32;13237:52;;;13285:1;13282;13275:12;13237:52;13308:64;13364:7;13353:9;13308:64;:::i;13501:213::-;13593:6;13646:2;13634:9;13625:7;13621:23;13617:32;13614:52;;;13662:1;13659;13652:12;13614:52;-1:-1:-1;13685:23:98;;13501:213;-1:-1:-1;13501:213:98:o;14093:259::-;14190:6;14243:2;14231:9;14222:7;14218:23;14214:32;14211:52;;;14259:1;14256;14249:12;14211:52;14282:64;14338:7;14327:9;14282:64;:::i;14710:250::-;14795:1;14805:113;14819:6;14816:1;14813:13;14805:113;;;14895:11;;;14889:18;14876:11;;;14869:39;14841:2;14834:10;14805:113;;;-1:-1:-1;;14952:1:98;14934:16;;14927:27;14710:250::o;14965:271::-;15007:3;15045:5;15039:12;15072:6;15067:3;15060:19;15088:76;15157:6;15150:4;15145:3;15141:14;15134:4;15127:5;15123:16;15088:76;:::i;:::-;15218:2;15197:15;-1:-1:-1;;15193:29:98;15184:39;;;;15225:4;15180:50;;14965:271;-1:-1:-1;;14965:271:98:o;15241:1259::-;15647:3;15642;15638:13;15630:6;15626:26;15615:9;15608:45;15589:4;15672:2;15710:3;15705:2;15694:9;15690:18;15683:31;15737:46;15778:3;15767:9;15763:19;15755:6;15737:46;:::i;:::-;15831:9;15823:6;15819:22;15814:2;15803:9;15799:18;15792:50;15865:33;15891:6;15883;15865:33;:::i;:::-;15929:2;15914:18;;15907:34;;;-1:-1:-1;;;;;15978:32:98;;15972:3;15957:19;;15950:61;15998:3;16027:19;;16020:35;;;16092:22;;;16086:3;16071:19;;16064:51;16164:13;;16186:22;;;16236:2;16262:15;;;;-1:-1:-1;16224:15:98;;;;-1:-1:-1;16305:169:98;16319:6;16316:1;16313:13;16305:169;;;16380:13;;16368:26;;16449:15;;;;16414:12;;;;16341:1;16334:9;16305:169;;;-1:-1:-1;16491:3:98;;15241:1259;-1:-1:-1;;;;;;;;;;;;15241:1259:98:o;16505:954::-;16646:6;16654;16662;16670;16678;16686;16739:3;16727:9;16718:7;16714:23;16710:33;16707:53;;;16756:1;16753;16746:12;16707:53;16792:9;16779:23;16769:33;;16852:2;16841:9;16837:18;16824:32;16865:31;16890:5;16865:31;:::i;:::-;16915:5;-1:-1:-1;16971:2:98;16956:18;;16943:32;-1:-1:-1;;;;;17024:14:98;;;17021:34;;;17051:1;17048;17041:12;17021:34;17090:58;17140:7;17131:6;17120:9;17116:22;17090:58;:::i;17464:691::-;17590:6;17598;17606;17614;17667:2;17655:9;17646:7;17642:23;17638:32;17635:52;;;17683:1;17680;17673:12;17635:52;17722:9;17709:23;17741:31;17766:5;17741:31;:::i;:::-;17791:5;-1:-1:-1;17815:73:98;17880:7;17875:2;17860:18;;17815:73;:::i;:::-;17805:83;;17939:2;17928:9;17924:18;17911:32;-1:-1:-1;;;;;17958:6:98;17955:30;17952:50;;;17998:1;17995;17988:12;17952:50;18037:58;18087:7;18078:6;18067:9;18063:22;18037:58;:::i;:::-;17464:691;;;;-1:-1:-1;18114:8:98;-1:-1:-1;;;;17464:691:98:o;18160:478::-;18298:6;18306;18359:2;18347:9;18338:7;18334:23;18330:32;18327:52;;;18375:1;18372;18365:12;18327:52;18411:9;18398:23;18388:33;;18472:2;18461:9;18457:18;18444:32;-1:-1:-1;;;;;18491:6:98;18488:30;18485:50;;;18531:1;18528;18521:12;18485:50;18554:78;18624:7;18615:6;18604:9;18600:22;18554:78;:::i;:::-;18544:88;;;18160:478;;;;;:::o;18643:347::-;18743:6;18751;18804:2;18792:9;18783:7;18779:23;18775:32;18772:52;;;18820:1;18817;18810:12;18772:52;18859:9;18846:23;18878:31;18903:5;18878:31;:::i;:::-;18928:5;18980:2;18965:18;;;;18952:32;;-1:-1:-1;;;18643:347:98:o;18995:274::-;19081:6;19134:2;19122:9;19113:7;19109:23;19105:32;19102:52;;;19150:1;19147;19140:12;19102:52;19189:9;19176:23;19208:31;19233:5;19208:31;:::i;19705:519::-;19896:2;19885:9;19878:21;19954:14;19945:6;19939:13;19935:34;19930:2;19919:9;19915:18;19908:62;20051:1;20047;20042:3;20038:11;20034:19;20028:2;20020:6;20016:15;20010:22;20006:48;20001:2;19990:9;19986:18;19979:76;19859:4;20102:2;20094:6;20090:15;20084:22;20144:4;20137;20126:9;20122:20;20115:34;20166:52;20213:3;20202:9;20198:19;20184:12;20166:52;:::i;20663:602::-;20828:6;20836;20844;20897:2;20885:9;20876:7;20872:23;20868:32;20865:52;;;20913:1;20910;20903:12;20865:52;20949:9;20936:23;20926:33;;21010:2;20999:9;20995:18;20982:32;-1:-1:-1;;;;;21029:6:98;21026:30;21023:50;;;21069:1;21066;21059:12;21270:338;21361:5;21355:12;21350:3;21343:25;21446:1;21442;21437:3;21433:11;21429:19;21421:4;21414:5;21410:16;21404:23;21400:49;21393:4;21388:3;21384:14;21377:73;21325:3;21496:4;21489:5;21485:16;21479:23;21534:4;21527;21522:3;21518:14;21511:28;21555:47;21596:4;21591:3;21587:14;21573:12;21555:47;:::i;21613:275::-;21804:2;21793:9;21786:21;21767:4;21824:58;21878:2;21867:9;21863:18;21855:6;21824:58;:::i;21893:279::-;22099:3;22084:19;;22112:54;22088:9;22148:6;22112:54;:::i;22177:658::-;22348:2;22400:21;;;22470:13;;22373:18;;;22492:22;;;22319:4;;22348:2;22571:15;;;;22545:2;22530:18;;;22319:4;22614:195;22628:6;22625:1;22622:13;22614:195;;;22693:13;;-1:-1:-1;;;;;22689:39:98;22677:52;;22784:15;;;;22749:12;;;;22725:1;22643:9;22614:195;;23483:621;23576:6;23584;23592;23645:2;23633:9;23624:7;23620:23;23616:32;23613:52;;;23661:1;23658;23651:12;23613:52;23700:9;23687:23;23750:4;23743:5;23739:16;23732:5;23729:27;23719:55;;23770:1;23767;23760:12;24109:477;24188:6;24196;24204;24257:2;24245:9;24236:7;24232:23;24228:32;24225:52;;;24273:1;24270;24263:12;24225:52;24309:9;24296:23;24286:33;;24370:2;24359:9;24355:18;24342:32;-1:-1:-1;;;;;24389:6:98;24386:30;24383:50;;;24429:1;24426;24419:12;24383:50;24468:58;24518:7;24509:6;24498:9;24494:22;24468:58;:::i;24591:1242::-;24752:6;24760;24768;24776;24784;24792;24800;24808;24861:3;24849:9;24840:7;24836:23;24832:33;24829:53;;;24878:1;24875;24868:12;24829:53;24917:9;24904:23;24936:31;24961:5;24936:31;:::i;:::-;24986:5;-1:-1:-1;25042:2:98;25027:18;;25014:32;-1:-1:-1;;;;;25095:14:98;;;25092:34;;;25122:1;25119;25112:12;25092:34;25161:58;25211:7;25202:6;25191:9;25187:22;25161:58;:::i;:::-;25238:8;;-1:-1:-1;25135:84:98;-1:-1:-1;25326:2:98;25311:18;;25298:32;;-1:-1:-1;25342:16:98;;;25339:36;;;25371:1;25368;25361:12;25339:36;25410:60;25462:7;25451:8;25440:9;25436:24;25410:60;:::i;:::-;25489:8;;-1:-1:-1;25384:86:98;-1:-1:-1;25571:2:98;25556:18;;25543:32;;-1:-1:-1;25628:3:98;25613:19;;25600:33;;-1:-1:-1;25645:16:98;;;25642:36;;;25674:1;25671;25664:12;25838:127;25899:10;25894:3;25890:20;25887:1;25880:31;25930:4;25927:1;25920:15;25954:4;25951:1;25944:15;25970:135;26009:3;26030:17;;;26027:43;;26050:18;;:::i;:::-;-1:-1:-1;26097:1:98;26086:13;;25970:135::o;26110:127::-;26171:10;26166:3;26162:20;26159:1;26152:31;26202:4;26199:1;26192:15;26226:4;26223:1;26216:15;26242:136;26281:3;26309:5;26299:39;;26318:18;;:::i;:::-;-1:-1:-1;;;26354:18:98;;26242:136::o;26590:277::-;26657:6;26710:2;26698:9;26689:7;26685:23;26681:32;26678:52;;;26726:1;26723;26716:12;26678:52;26758:9;26752:16;26811:5;26804:13;26797:21;26790:5;26787:32;26777:60;;26833:1;26830;26823:12;27349:127;27410:10;27405:3;27401:20;27398:1;27391:31;27441:4;27438:1;27431:15;27465:4;27462:1;27455:15;27481:380;27560:1;27556:12;;;;27603;;;27624:61;;27678:4;27670:6;27666:17;27656:27;;27624:61;27731:2;27723:6;27720:14;27700:18;27697:38;27694:161;;27777:10;27772:3;27768:20;27765:1;27758:31;27812:4;27809:1;27802:15;27840:4;27837:1;27830:15;27992:518;28094:2;28089:3;28086:11;28083:421;;;28130:5;28127:1;28120:16;28174:4;28171:1;28161:18;28244:2;28232:10;28228:19;28225:1;28221:27;28215:4;28211:38;28280:4;28268:10;28265:20;28262:47;;;-1:-1:-1;28303:4:98;28262:47;28358:2;28353:3;28349:12;28346:1;28342:20;28336:4;28332:31;28322:41;;28413:81;28431:2;28424:5;28421:13;28413:81;;;28490:1;28476:16;;28457:1;28446:13;28413:81;;28686:1345;28812:3;28806:10;-1:-1:-1;;;;;28831:6:98;28828:30;28825:56;;;28861:18;;:::i;:::-;28890:97;28980:6;28940:38;28972:4;28966:11;28940:38;:::i;:::-;28934:4;28890:97;:::i;:::-;29042:4;;29099:2;29088:14;;29116:1;29111:663;;;;29818:1;29835:6;29832:89;;;-1:-1:-1;29887:19:98;;;29881:26;29832:89;-1:-1:-1;;28643:1:98;28639:11;;;28635:24;28631:29;28621:40;28667:1;28663:11;;;28618:57;29934:81;;29081:944;;29111:663;27939:1;27932:14;;;27976:4;27963:18;;-1:-1:-1;;29147:20:98;;;29265:236;29279:7;29276:1;29273:14;29265:236;;;29368:19;;;29362:26;29347:42;;29460:27;;;;29428:1;29416:14;;;;29295:19;;29265:236;;;29269:3;29529:6;29520:7;29517:19;29514:201;;;29590:19;;;29584:26;-1:-1:-1;;29673:1:98;29669:14;;;29685:3;29665:24;29661:37;29657:42;29642:58;29627:74;;29514:201;-1:-1:-1;;;;;29761:1:98;29745:14;;;29741:22;29728:36;;-1:-1:-1;28686:1345:98:o;30036:125::-;30101:9;;;30122:10;;;30119:36;;;30135:18;;:::i;30166:128::-;30233:9;;;30254:11;;;30251:37;;;30268:18;;:::i;30299:266::-;30387:6;30382:3;30375:19;30439:6;30432:5;30425:4;30420:3;30416:14;30403:43;-1:-1:-1;30491:1:98;30466:16;;;30484:4;30462:27;;;30455:38;;;;30547:2;30526:15;;;-1:-1:-1;;30522:29:98;30513:39;;;30509:50;;30299:266::o;30570:341::-;-1:-1:-1;;;;;30755:32:98;;30737:51;;30824:2;30819;30804:18;;30797:30;;;-1:-1:-1;;30844:61:98;;30886:18;;30878:6;30870;30844:61;:::i;:::-;30836:69;30570:341;-1:-1:-1;;;;;30570:341:98:o;30916:251::-;30986:6;31039:2;31027:9;31018:7;31014:23;31010:32;31007:52;;;31055:1;31052;31045:12;31007:52;31087:9;31081:16;31106:31;31131:5;31106:31;:::i;32520:662::-;-1:-1:-1;;;;;32861:15:98;;;32843:34;;32913:15;;32908:2;32893:18;;32886:43;32965:3;32960:2;32945:18;;32938:31;;;32786:4;;32992:59;;33031:19;;33023:6;32992:59;:::i;:::-;33099:9;33091:6;33087:22;33082:2;33071:9;33067:18;33060:50;33127:49;33169:6;33161;33153;33127:49;:::i;:::-;33119:57;32520:662;-1:-1:-1;;;;;;;;32520:662:98:o;33187:337::-;33292:4;33350:11;33337:25;33444:3;33440:8;33429;33413:14;33409:29;33405:44;33385:18;33381:69;33371:97;;33464:1;33461;33454:12;33371:97;33485:33;;;;;33187:337;-1:-1:-1;;33187:337:98:o;33529:280::-;33587:6;33640:2;33628:9;33619:7;33615:23;33611:32;33608:52;;;33656:1;33653;33646:12;33608:52;33695:9;33682:23;33745:14;33738:5;33734:26;33727:5;33724:37;33714:65;;33775:1;33772;33765:12;33814:521;33891:4;33897:6;33957:11;33944:25;34051:2;34047:7;34036:8;34020:14;34016:29;34012:43;33992:18;33988:68;33978:96;;34070:1;34067;34060:12;33978:96;34097:33;;34149:20;;;-1:-1:-1;;;;;;34181:30:98;;34178:50;;;34224:1;34221;34214:12;34178:50;34257:4;34245:17;;-1:-1:-1;34288:14:98;34284:27;;;34274:38;;34271:58;;;34325:1;34322;34315:12;34340:271;34523:6;34515;34510:3;34497:33;34479:3;34549:16;;34574:13;;;34549:16;34340:271;-1:-1:-1;34340:271:98:o;34616:577::-;34741:4;34747:6;34807:11;34794:25;34901:2;34897:7;34886:8;34870:14;34866:29;34862:43;34842:18;34838:68;34828:96;;34920:1;34917;34910:12;34828:96;34947:33;;34999:20;;;-1:-1:-1;;;;;;35031:30:98;;35028:50;;;35074:1;35071;35064:12;35028:50;35107:4;35095:17;;-1:-1:-1;35158:1:98;35154:14;;;35138;35134:35;35124:46;;35121:66;;;35183:1;35180;35173:12;35198:551;35401:3;35432;35479:6;35401:3;35513:209;35527:6;35524:1;35521:13;35513:209;;;35590:20;;35576:35;;35634:4;35660:14;;;;35697:15;;;;35549:1;35542:9;35513:209;;;-1:-1:-1;35738:5:98;;35198:551;-1:-1:-1;;;;;35198:551:98:o;36267:383::-;36424:3;36462:6;36456:13;36478:66;36537:6;36532:3;36525:4;36517:6;36513:17;36478:66;:::i;:::-;36566:16;;;;36591:21;;;-1:-1:-1;36639:4:98;36628:16;;36267:383;-1:-1:-1;36267:383:98:o;36979:534::-;37166:3;37198:26;37194:31;37267:2;37258:6;37254:2;37250:15;37246:24;37241:3;37234:37;37300:6;37294:13;37316:75;37384:6;37379:2;37374:3;37370:12;37363:4;37355:6;37351:17;37316:75;:::i;:::-;37463:2;37459:15;;;;37455:24;37410:16;;;;37450:2;37442:11;;37435:45;;;;37504:2;37496:11;;;-1:-1:-1;;;36979:534:98:o;38670:416::-;38759:1;38796:5;38759:1;38810:270;38831:7;38821:8;38818:21;38810:270;;;38890:4;38886:1;38882:6;38878:17;38872:4;38869:27;38866:53;;;38899:18;;:::i;:::-;38949:7;38939:8;38935:22;38932:55;;;38969:16;;;;38932:55;39048:22;;;;39008:15;;;;38810:270;;;38814:3;38670:416;;;;;:::o;39091:806::-;39140:5;39170:8;39160:80;;-1:-1:-1;39211:1:98;39225:5;;39160:80;39259:4;39249:76;;-1:-1:-1;39296:1:98;39310:5;;39249:76;39341:4;39359:1;39354:59;;;;39427:1;39422:130;;;;39334:218;;39354:59;39384:1;39375:10;;39398:5;;;39422:130;39459:3;39449:8;39446:17;39443:43;;;39466:18;;:::i;:::-;-1:-1:-1;;39522:1:98;39508:16;;39537:5;;39334:218;;39636:2;39626:8;39623:16;39617:3;39611:4;39608:13;39604:36;39598:2;39588:8;39585:16;39580:2;39574:4;39571:12;39567:35;39564:77;39561:159;;;-1:-1:-1;39673:19:98;;;39705:5;;39561:159;39752:34;39777:8;39771:4;39752:34;:::i;:::-;39822:6;39818:1;39814:6;39810:19;39801:7;39798:32;39795:58;;;39833:18;;:::i;:::-;39871:20;;39091:806;-1:-1:-1;;;39091:806:98:o;39902:131::-;39962:5;39991:36;40018:8;40012:4;39991:36;:::i;40507:172::-;40574:10;40604;;;40616;;;40600:27;;40639:11;;;40636:37;;;40653:18;;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "51391": [{ "start": 8408, "length": 32 }],
      "51393": [{ "start": 8443, "length": 32 }],
      "51395": [{ "start": 8523, "length": 32 }],
      "51397": [{ "start": 8561, "length": 32 }],
      "51399": [{ "start": 8375, "length": 32 }],
      "54562": [{ "start": 6932, "length": 32 }]
    }
  },
  "methodIdentifiers": {
    "attest(bytes32,(address,uint48,bytes,uint256[]))": "945e3641",
    "attest(bytes32,(address,uint48,bytes,uint256[])[])": "b65d1012",
    "attest(bytes32,address,(address,uint48,bytes,uint256[]),bytes)": "29757d37",
    "attest(bytes32,address,(address,uint48,bytes,uint256[])[],bytes)": "04a1f298",
    "attesterNonce(address)": "b50b706b",
    "calcModuleAddress(bytes32,bytes)": "f095ec1b",
    "check(address)": "c23697a8",
    "check(address,address[],uint256)": "0bb30abc",
    "check(address,uint256)": "96fb7217",
    "check(address,uint256,address[],uint256)": "2ed94467",
    "checkForAccount(address,address)": "4c13560c",
    "checkForAccount(address,address,uint256)": "529562a1",
    "deployModule(bytes32,bytes32,bytes,bytes,bytes)": "03b79c84",
    "deployViaFactory(address,bytes,bytes,bytes32,bytes)": "f190e2b1",
    "eip712Domain()": "84b0196e",
    "findAttestation(address,address)": "d9048624",
    "findAttestations(address,address[])": "2b30c899",
    "findModule(address)": "b6b791a1",
    "findResolver(bytes32)": "71c61a2b",
    "findSchema(bytes32)": "b060cb1e",
    "findTrustedAttesters(address)": "dd0fd278",
    "getDigest((address),address)": "70d2af24",
    "getDigest((address)[],address)": "617734d0",
    "getDigest((address,uint48,bytes,uint256[]),address)": "55f47dde",
    "getDigest((address,uint48,bytes,uint256[])[],address)": "e14f3d32",
    "registerModule(bytes32,address,bytes,bytes)": "88dc678d",
    "registerResolver(address)": "9f3e1b53",
    "registerSchema(string,address)": "1d4d9810",
    "revoke((address))": "77efcab4",
    "revoke((address)[])": "4990a682",
    "revoke(address,(address),bytes)": "8e6ec824",
    "revoke(address,(address)[],bytes)": "4ece78ca",
    "setResolver(bytes32,address)": "1896f70a",
    "transferResolverOwnership(bytes32,address)": "7cb2afd8",
    "trustAttesters(uint8,address[])": "f05c04e1"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessDenied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyAttested\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"AlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyRevoked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AttestationNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DifferentResolvers\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExternalError_ModuleRegistration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExternalError_ResolveAttestation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExternalError_ResolveRevocation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExternalError_SchemaValidation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"name\":\"FactoryCallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAttestations\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAttestation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDeployment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidExpirationTime\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidModuleType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidModuleTypes\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IExternalResolver\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"InvalidResolver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"ResolverUID\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"InvalidResolverUID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSalt\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSchema\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"contract IExternalSchemaValidator\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"InvalidSchemaValidator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidThreshold\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTrustedAttesterInput\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"}],\"name\":\"ModuleAddressIsNotContract\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"ModuleNotFoundInRegistry\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoTrustedAttestersFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ResolverAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"}],\"name\":\"RevokedAttestation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"SchemaUID\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"SchemaAlreadyExists\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"SchemaUID\",\"name\":\"schemaUID\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"AttestationDataRef\",\"name\":\"sstore2Pointer\",\"type\":\"address\"}],\"name\":\"Attested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ModuleRegistration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"ResolverUID\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"NewResolver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"ResolverUID\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"NewResolverOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"smartAccount\",\"type\":\"address\"}],\"name\":\"NewTrustedAttesters\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IExternalResolver\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"ResolverRevocationError\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"revoker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"SchemaUID\",\"name\":\"schema\",\"type\":\"bytes32\"}],\"name\":\"Revoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"SchemaUID\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registerer\",\"type\":\"address\"}],\"name\":\"SchemaRegistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"SchemaUID\",\"name\":\"schemaUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expirationTime\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"ModuleType[]\",\"name\":\"moduleTypes\",\"type\":\"uint256[]\"}],\"internalType\":\"struct AttestationRequest[]\",\"name\":\"requests\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"attest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"SchemaUID\",\"name\":\"schemaUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expirationTime\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"ModuleType[]\",\"name\":\"moduleTypes\",\"type\":\"uint256[]\"}],\"internalType\":\"struct AttestationRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"attest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"SchemaUID\",\"name\":\"schemaUID\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expirationTime\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"ModuleType[]\",\"name\":\"moduleTypes\",\"type\":\"uint256[]\"}],\"internalType\":\"struct AttestationRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"attest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"SchemaUID\",\"name\":\"schemaUID\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expirationTime\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"ModuleType[]\",\"name\":\"moduleTypes\",\"type\":\"uint256[]\"}],\"internalType\":\"struct AttestationRequest[]\",\"name\":\"requests\",\"type\":\"tuple[]\"}],\"name\":\"attest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"}],\"name\":\"attesterNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"}],\"name\":\"calcModuleAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"attesters\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"check\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"ModuleType\",\"name\":\"moduleType\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"attesters\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"check\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"ModuleType\",\"name\":\"moduleType\",\"type\":\"uint256\"}],\"name\":\"check\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"check\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartAccount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"}],\"name\":\"checkForAccount\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartAccount\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"ModuleType\",\"name\":\"moduleType\",\"type\":\"uint256\"}],\"name\":\"checkForAccount\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"ResolverUID\",\"name\":\"resolverUID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"resolverContext\",\"type\":\"bytes\"}],\"name\":\"deployModule\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callOnFactory\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"ResolverUID\",\"name\":\"resolverUID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"resolverContext\",\"type\":\"bytes\"}],\"name\":\"deployViaFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"}],\"name\":\"findAttestation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"time\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"expirationTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"revocationTime\",\"type\":\"uint48\"},{\"internalType\":\"PackedModuleTypes\",\"name\":\"moduleTypes\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"AttestationDataRef\",\"name\":\"dataPointer\",\"type\":\"address\"},{\"internalType\":\"SchemaUID\",\"name\":\"schemaUID\",\"type\":\"bytes32\"}],\"internalType\":\"struct AttestationRecord\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"module\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"attesters\",\"type\":\"address[]\"}],\"name\":\"findAttestations\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"time\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"expirationTime\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"revocationTime\",\"type\":\"uint48\"},{\"internalType\":\"PackedModuleTypes\",\"name\":\"moduleTypes\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"AttestationDataRef\",\"name\":\"dataPointer\",\"type\":\"address\"},{\"internalType\":\"SchemaUID\",\"name\":\"schemaUID\",\"type\":\"bytes32\"}],\"internalType\":\"struct AttestationRecord[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"}],\"name\":\"findModule\",\"outputs\":[{\"components\":[{\"internalType\":\"ResolverUID\",\"name\":\"resolverUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"internalType\":\"struct ModuleRecord\",\"name\":\"moduleRecord\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResolverUID\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"findResolver\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IExternalResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resolverOwner\",\"type\":\"address\"}],\"internalType\":\"struct ResolverRecord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"SchemaUID\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"findSchema\",\"outputs\":[{\"components\":[{\"internalType\":\"uint48\",\"name\":\"registeredAt\",\"type\":\"uint48\"},{\"internalType\":\"contract IExternalSchemaValidator\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"}],\"internalType\":\"struct SchemaRecord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartAccount\",\"type\":\"address\"}],\"name\":\"findTrustedAttesters\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"attesters\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expirationTime\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"ModuleType[]\",\"name\":\"moduleTypes\",\"type\":\"uint256[]\"}],\"internalType\":\"struct AttestationRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"}],\"name\":\"getDigest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"}],\"internalType\":\"struct RevocationRequest[]\",\"name\":\"requests\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"}],\"name\":\"getDigest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"}],\"internalType\":\"struct RevocationRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"}],\"name\":\"getDigest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"expirationTime\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"ModuleType[]\",\"name\":\"moduleTypes\",\"type\":\"uint256[]\"}],\"internalType\":\"struct AttestationRequest[]\",\"name\":\"requests\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"}],\"name\":\"getDigest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResolverUID\",\"name\":\"resolverUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"resolverContext\",\"type\":\"bytes\"}],\"name\":\"registerModule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IExternalResolver\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"registerResolver\",\"outputs\":[{\"internalType\":\"ResolverUID\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"},{\"internalType\":\"contract IExternalSchemaValidator\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"registerSchema\",\"outputs\":[{\"internalType\":\"SchemaUID\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"}],\"internalType\":\"struct RevocationRequest[]\",\"name\":\"requests\",\"type\":\"tuple[]\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"}],\"internalType\":\"struct RevocationRequest[]\",\"name\":\"requests\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"}],\"internalType\":\"struct RevocationRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"moduleAddress\",\"type\":\"address\"}],\"internalType\":\"struct RevocationRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResolverUID\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"contract IExternalResolver\",\"name\":\"resolver\",\"type\":\"address\"}],\"name\":\"setResolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"ResolverUID\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferResolverOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"threshold\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"attesters\",\"type\":\"address[]\"}],\"name\":\"trustAttesters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"rhinestone | zeroknots.eth, Konrad Kopp (@kopy-kat)\",\"kind\":\"dev\",\"methods\":{\"attest(bytes32,(address,uint48,bytes,uint256[]))\":{\"details\":\"This function will revert if the same module is attested twice by the same attester.      If you want to re-attest, you have to revoke your attestation first, and then attest again.\",\"params\":{\"request\":\"a single AttestationRequest\",\"schemaUID\":\"The SchemaUID of the schema the attestation is based on.\"}},\"attest(bytes32,(address,uint48,bytes,uint256[])[])\":{\"details\":\"This function will revert if the same module is attested twice by the same attester.      If you want to re-attest, you have to revoke your attestation first, and then attest again.\",\"params\":{\"requests\":\"An array of AttestationRequest\",\"schemaUID\":\"The SchemaUID of the schema the attestation is based on.\"}},\"attest(bytes32,address,(address,uint48,bytes,uint256[]),bytes)\":{\"details\":\"This function will revert if the same module is attested twice by the same attester.      If you want to re-attest, you have to revoke your attestation first, and then attest again.\",\"params\":{\"attester\":\"The address of the attester\",\"request\":\"An AttestationRequest\",\"schemaUID\":\"The SchemaUID of the schema the attestation is based on.\",\"signature\":\"The signature of the attester. ECDSA or ERC1271\"}},\"attest(bytes32,address,(address,uint48,bytes,uint256[])[],bytes)\":{\"details\":\"This function will revert if the same module is attested twice by the same attester.      If you want to re-attest, you have to revoke your attestation first, and then attest again.\",\"params\":{\"attester\":\"The address of the attester\",\"requests\":\"An array of AttestationRequest\",\"schemaUID\":\"The SchemaUID of the schema the attestation is based on.\",\"signature\":\"The signature of the attester. ECDSA or ERC1271\"}},\"calcModuleAddress(bytes32,bytes)\":{\"params\":{\"initCode\":\"module initcode\",\"salt\":\"CREATE2 salt\"},\"returns\":{\"_0\":\"moduleAddress counterfactual address of the module deployment\"}},\"deployModule(bytes32,bytes32,bytes,bytes,bytes)\":{\"params\":{\"initCode\":\"The initCode to be used in the `CREATE2` factory\",\"metadata\":\"The metadata to be stored on the registry.            This field is optional, and might be used by the module developer to store additional            information about the module or facilitate business logic with the Resolver stub\",\"resolverContext\":\"bytes that will be passed to the resolver contract\",\"resolverUID\":\"The resolverUID to be used in the `CREATE2` factory\",\"salt\":\"The salt to be used in the `CREATE2` factory. This adheres to Pr000xy/Create2Factory.sol salt formatting.             The salt's first bytes20 should be the address of the sender             or bytes20(0) to bypass the check (this will lose replay protection)\"}},\"deployViaFactory(address,bytes,bytes,bytes32,bytes)\":{\"details\":\"Registry can use other factories to deploy the module.Note that this function will call the external factory via the FactoryTrampoline contract.           Factory MUST not assume that msg.sender == registryThis function is used to deploy and register a module using a factory contract.           Since one of the parameters of this function is a unique resolverUID and any           registered module address can only be registered once,           using this function is of risk for a frontrun attack\"},\"eip712Domain()\":{\"details\":\"See: https://eips.ethereum.org/EIPS/eip-5267\"},\"findModule(address)\":{\"params\":{\"moduleAddress\":\"The address of the module\"}},\"findResolver(bytes32)\":{\"params\":{\"uid\":\"The UID of the resolver.\"}},\"findTrustedAttesters(address)\":{\"params\":{\"smartAccount\":\"The address of the Smart Account\"}},\"registerModule(bytes32,address,bytes,bytes)\":{\"details\":\"This function is used to deploy and register an already deployed module.           Since one of the parameters of this function is a unique resolverUID and any           registered module address can only be registered once,           using this function is of risk for a frontrun attackthe sender address of this registration is set to address(0) since anyone can invoke this function\",\"params\":{\"metadata\":\"The metadata to be stored on the registry.            This field is optional, and might be used by the module developer to store additional            information about the module or facilitate business logic with the Resolver stub\",\"moduleAddress\":\"The address of the module to be registered\",\"resolverContext\":\"bytes that will be passed to the resolver contract\",\"resolverUID\":\"The resolverUID to be used for the module\"}},\"registerResolver(address)\":{\"params\":{\"resolver\":\"external resolver contract\"},\"returns\":{\"uid\":\"ResolverUID of the registered resolver\"}},\"registerSchema(string,address)\":{\"params\":{\"schema\":\"ABI schema used to encode attestations that are made with this schema\",\"validator\":\"(optional) external schema validator that will be used to validate attestations.                  use address(0), if you don't need an external validator\"},\"returns\":{\"uid\":\"SchemaUID of the registered schema\"}},\"revoke((address))\":{\"details\":\"this function will revert if the attestation is not foundthis function will revert if the attestation is already revoked\",\"params\":{\"request\":\"single RevocationRequest\"}},\"revoke((address)[])\":{\"details\":\"this function will revert if the attestation is not foundthis function will revert if the attestation is already revoked\",\"params\":{\"requests\":\"the RevocationRequests\"}},\"revoke(address,(address),bytes)\":{\"params\":{\"attester\":\"the signer / revoker\",\"request\":\"single RevocationRequest\",\"signature\":\"ECDSA or ERC1271 signature\"}},\"revoke(address,(address)[],bytes)\":{\"details\":\"if you want to revoke multiple attestations, but from different attesters, call this function multiple times\",\"params\":{\"attester\":\"the signer / revoker\",\"requests\":\"array of RevocationRequests\",\"signature\":\"ECDSA or ERC1271 signature\"}},\"setResolver(bytes32,address)\":{\"params\":{\"resolver\":\"The new resolver implementation address.\",\"uid\":\"The UID of the resolver.\"}},\"transferResolverOwnership(bytes32,address)\":{\"params\":{\"newOwner\":\"The address of the new owner\",\"uid\":\"The UID of the resolver to transfer ownership for\"}},\"trustAttesters(uint8,address[])\":{\"details\":\"this function reverts, if address(0), or duplicates are provided in attesters[]\",\"params\":{\"attesters\":\"The addresses of the attesters to be trusted.\",\"threshold\":\"The minimum number of attestations required for a module                  to be considered secure.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"attest(bytes32,(address,uint48,bytes,uint256[]))\":{\"notice\":\"Allows `msg.sender` to attest to multiple modules' security status. The `AttestationRequest.Data` provided should match the attestation schema defined by the Schema corresponding to the SchemaUID\"},\"attest(bytes32,(address,uint48,bytes,uint256[])[])\":{\"notice\":\"Allows `msg.sender` to attest to multiple modules' security status. The `AttestationRequest.Data` provided should match the attestation schema defined by the Schema corresponding to the SchemaUID\"},\"attest(bytes32,address,(address,uint48,bytes,uint256[]),bytes)\":{\"notice\":\"Allows attester to attest by signing an `AttestationRequest` (`ECDSA` or `ERC1271`) The `AttestationRequest.Data` provided should match the attestation schema defined by the Schema corresponding to the SchemaUID\"},\"attest(bytes32,address,(address,uint48,bytes,uint256[])[],bytes)\":{\"notice\":\"Allows attester to attest by signing an `AttestationRequest` (`ECDSA` or `ERC1271`) The `AttestationRequest.Data` provided should match the attestation schema defined by the Schema corresponding to the SchemaUID\"},\"calcModuleAddress(bytes32,bytes)\":{\"notice\":\"in conjunction with the deployModule() function, this function let's you predict the address of a CREATE2 module deployment\"},\"deployModule(bytes32,bytes32,bytes,bytes,bytes)\":{\"notice\":\"Module Developers can deploy their module Bytecode directly via the registry. This registry implements a `CREATE2` factory, that allows module developers to register and deploy module bytecode\"},\"deployViaFactory(address,bytes,bytes,bytes32,bytes)\":{\"notice\":\"In order to make the integration into existing business logics possible, the Registry is able to utilize external factories that can be utilized to deploy the modules.\"},\"findAttestation(address,address)\":{\"notice\":\"Getter function to get AttestationRequest made by one attester\"},\"findAttestations(address,address[])\":{\"notice\":\"Getter function to get AttestationRequest made by multiple attesters\"},\"findModule(address)\":{\"notice\":\"Getter function to get the stored ModuleRecord for a specific module address.\"},\"findResolver(bytes32)\":{\"notice\":\"Getter function to get the ResolverRecord of a registered resolver\"},\"findSchema(bytes32)\":{\"notice\":\"Getter function to retrieve SchemaRecord\"},\"findTrustedAttesters(address)\":{\"notice\":\"Get trusted attester for a specific Smart Account\"},\"registerModule(bytes32,address,bytes,bytes)\":{\"notice\":\"Already deployed module addresses can be registered on the registry\"},\"registerResolver(address)\":{\"notice\":\"Allows Marketplace Agents to register external resolvers.\"},\"registerSchema(string,address)\":{\"notice\":\"Register Schema and (optional) external `IExternalSchemaValidator` A Schema describe the structure of the data of attestations every attestation made on this registry, will reference a SchemaUID to  make it possible to decode attestation data in human readable form overwriting a schema is not allowed, and will revert\"},\"revoke((address))\":{\"notice\":\"Allows `msg.sender` to revoke an attestation made by the same `msg.sender`\"},\"revoke((address)[])\":{\"notice\":\"Allows msg.sender to revoke multiple attestation made by the same msg.sender\"},\"revoke(address,(address),bytes)\":{\"notice\":\"Allows attester to revoke an attestation by signing an `RevocationRequest` (`ECDSA` or `ERC1271`)\"},\"revoke(address,(address)[],bytes)\":{\"notice\":\"Allows attester to revoke an attestation by signing an `RevocationRequest` (`ECDSA` or `ERC1271`)\"},\"setResolver(bytes32,address)\":{\"notice\":\"Entities that previously registered an external resolver, may update the implementation address.\"},\"transferResolverOwnership(bytes32,address)\":{\"notice\":\"Transfer ownership of resolverUID to a new address\"},\"trustAttesters(uint8,address[])\":{\"notice\":\"Allows Smart Accounts - the end users of the registry - to appoint one or many attesters as trusted.\"}},\"notice\":\"## Overview Account abstraction (or smart accounts) will deliver three key enhancements for the Ethereum ecosystem: improved UX, enhanced user security and greater wallet extensibility. Modular smart accounts are the next frontier for achieving these goals. However, it also opens up a number of new challenges that could drastically undermine the objective by opening up a plethora of new attack vectors and security concerns for accounts. The Registry aims to solve this concern by providing a means of verifying the legitimacy and security of independently built smart account modules for installation and use across any integrated smart account. It allows entities to attest to statements about modules and smart accounts to query these  at module installation and/or execution time. The Registry is a Singleton that is free, open and  permissionless. It also serves as the reference implementation  for [ERC-7484](https://eips.ethereum.org/EIPS/eip-7484). ## Core Concepts ### Attestations Attestations on the Registry represent statements about Modules. An Attestation is made using a  particular [Schema](./Schemas.md) that is used to encode and decode the Attestation data. The  most important usecase for Attestations is to make statements about the security of a Module. An attestation consists of two primary elements: the Schema and the Attestation data. The Schema acts as a standardized structure for creating and validating Attestations, defining how the Attestation data is encoded and decoded. ### Schemas [Schemas](./docs/Schema.md) represent predefined structures utilized for the formation and verification of Attestation data. Using flexible Schemas rather than a single, fixed Schema allows Attesters to encode their data in a custom way, providing flexibility when creating Attestations. For example, the data of an Attestation about the outcome of the formal verification on a Module will have a very format than the data of an Attestation about what interfaces a Module supports. ### Resolvers Resolvers are external contracts that are tied to Modules and called when specific Registry actions are executed. These actions are: - attestation - revocation - module registration / deployment This architectural design aims to provide entities like Smart Account vendors or DAOs, with the flexibility to incorporate custom business logic while maintaining the robustness and security of the core functionalities implemented by the Registry ### Attesters Attesters are individuals or organizations responsible for creating and signing Attestations. They add the Attestation to the Registry, making it available for verification. ### Modules Modules are smart contracts that act as modular components that can be added to Smart Accounts. The registry is agnostic towards Smart Account or Module implementations. Only Module addresses and deployment metadata are stored on the registry. Modules are registered on the Registry either during, using `CREATE2`, `CREATE3`  or a custom deployment factory, or after deployment. ## Architecture ![Sequence Diagram](https://raw.githubusercontent.com/rhinestonewtf/registry/main/public/docs/all.svg) Implementation of all features of the registry:      - Register Schemas      - Register External Resolvers      - Register Modules      - Make Attestations      - Make Revocations      - Delegate Trust to Attester(s)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Registry.sol\":\"Registry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":account-abstraction-v0.6/=node_modules/account-abstraction-v0.6/contracts/\",\":account-abstraction/=node_modules/account-abstraction/contracts/\",\":ds-test/=node_modules/ds-test/src/\",\":erc4337-validation/=node_modules/@rhinestone/erc4337-validation/src/\",\":forge-std/=node_modules/forge-std/src/\",\":solady/=node_modules/solady/src/\",\":solmate/=node_modules/solmate/src/\"]},\"sources\":{\"node_modules/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"node_modules/solady/src/utils/EIP712.sol\":{\"keccak256\":\"0xb5c4c8ac5368c9785b4e30314f4ad6f3ae13bdc21679007735681d13da797bec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4456a4eaa8748f802fd1188db6405d18c452eb7c0dde84a49b49a7f94b5970d\",\"dweb:/ipfs/QmZzsFn4VwvBFy2MJVJXvntCQsDRCXbRrSKKfXxXv9jYGM\"]},\"node_modules/solady/src/utils/LibSort.sol\":{\"keccak256\":\"0xfa4028961ad53620a8e8e6e8d141c5f409c45d7ca4240aa39f2a48e3d817fbec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284d332203cc8f6d6bcbc48b2021fb35b4adc2ebdd5482b8ce8b89f64b8897ba\",\"dweb:/ipfs/QmRptNWkfa6CGSGhPJ5qqN83qfXBst1WiEGU51i4y4AXVy\"]},\"node_modules/solady/src/utils/SSTORE2.sol\":{\"keccak256\":\"0xc6641e3dbc885d6a3032f5c92ebc703c3c7c821c8c3c645b26c9bea298736276\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7751ad70faf3d0a0412d4ec80397ca56edb97ffd319dd4589fa38b2549f1c2e\",\"dweb:/ipfs/QmVJztYdnsxTwFT5WWYvbjyi38aUQUZisL5qZsYW2jqDHV\"]},\"node_modules/solady/src/utils/SignatureCheckerLib.sol\":{\"keccak256\":\"0x7a7acc59723ed291f24d9a2ed019109c8be69f32701f35f8a61dc7fff6652379\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bab15a03dfca0567d7472933ee4e776fc21f9dfb6c4dbc06934fa75eceeff5e\",\"dweb:/ipfs/QmPUuKsRwpZXz15DpsoJMMPN9DtZiRvMfwjqJScxkppNsP\"]},\"src/Common.sol\":{\"keccak256\":\"0x819a41a1fa49f93e2921aac38ed7cacc9d810dce18bbb02cc99eab7264a1f176\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0989a6aadf4f11155f15992ba743464ca38f113ec12c80ceacced5dc3fdc6935\",\"dweb:/ipfs/QmeiCsTzGjSbWnWEqq91YTuynm9gLWFRnTN2cLw8YitvTe\"]},\"src/DataTypes.sol\":{\"keccak256\":\"0x17a21d96dbda1704f888f46565731cc676d5fd4d989ea6819a87a8fb0895c47b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://91c12e4dc5254821d3ac965369b40656242d90e098a6ecc1e721d6dcf61e64fc\",\"dweb:/ipfs/Qma78sqHvpP7AFj2gKAQe2z4Na3nxT5NRtaSuEJGezDyN8\"]},\"src/IRegistry.sol\":{\"keccak256\":\"0xb03203d856c112b1e663615484f27b7597f0ef09b573a42eb68425683a386437\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ff723cd22c1c4f02c1be8ed6fe69531d99791cf49be95fc9429002edcec2d0f6\",\"dweb:/ipfs/QmXBuVzbS5v1TSpNo57LUgisM35KiYwQdhrKythwLmBxFQ\"]},\"src/Registry.sol\":{\"keccak256\":\"0x04a514f7afbe44935726784e61188377c49f812373858ebae8d67983e3b9b0c6\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://cbc52031e47f3a58be6ca63e1884a032896e0e3a96056919504f7a99cb152cf9\",\"dweb:/ipfs/QmT25Kjvn7GnjHJjFj3r4y372ucMdKhqd67JH2uwsMM7KQ\"]},\"src/core/Attestation.sol\":{\"keccak256\":\"0x60184387856220ebc5df67f9fe7139d12a0f39a904d5612ad8149ad80ec0146a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2002908b543d03320c1b2158b632e42acd5353c63e61417ee7627de0dc9a704b\",\"dweb:/ipfs/QmdyV9ZBxJyEizhkuutWngRPQzsvcbrRzu7EKFZ77Pyf4H\"]},\"src/core/AttestationManager.sol\":{\"keccak256\":\"0xb6e5ab1c5b473550c9119d89085b7ed304cc5e0c33d66f3b22a1c3b9040eed9d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://efb6495c8246b834beb449c0d9f48e576c1a3603a09a684cb0e1cd0b1dc62990\",\"dweb:/ipfs/Qmcj4gqXefVZFf5TVoWT6KKH6DDqYv4SrA4N1XYnLrDNci\"]},\"src/core/ModuleManager.sol\":{\"keccak256\":\"0xe95b55406347a1051a0fb636f0c520466bd54c1d0c5ad8546241fe0cfbf67169\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://52843bb46c61acfad5ae5bce80b4508f1e851352371051d027675c7bc3744332\",\"dweb:/ipfs/QmdAuWEq2ogsrALuYnXsVbNYD6nwodN6GcLt4Jcv9PDZpS\"]},\"src/core/ResolverManager.sol\":{\"keccak256\":\"0x62c56f2894817468894e66036e7e4693da1856baef1b70d7fa52723182e5de3c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7999eb35bc4063fce696c15ef6e56115a648c5ecf6afd395679d61365ed1f2f7\",\"dweb:/ipfs/QmaoauDC8Rmi4z5NDpyYQuLHi3JtNZWTmk6CJ2rRanwSJi\"]},\"src/core/SchemaManager.sol\":{\"keccak256\":\"0xf5f7fe4ea89cc88ea1cc68ca9ba765790fda7eb309fb05d5bf4387c13068231d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://419dc546ad4c27f754385815c51c78baa9653897c28335df73cda13db365acd3\",\"dweb:/ipfs/QmPCiUpNv9u2DbYL3Cc27Y1Bdc1RgZzHcsNiDLYHRGB4Mh\"]},\"src/core/SignedAttestation.sol\":{\"keccak256\":\"0x1cdd47ad08862edb59a18aa6a3ef68f7e1ed5034573f26a2ad7e7406f4e49aa5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3b105e932f5959d8a5709ae7eaa699da694683dd88ad3f2d5026a8854c4a8cc8\",\"dweb:/ipfs/QmSEGkJhdGppzFJ2au8hKQJE5hjooFiCkYhSXscUX1e6Y7\"]},\"src/core/TrustManager.sol\":{\"keccak256\":\"0x7310e4d0cc27000c2bc9045fdd84046585c0832e4adbd88c37cfc4bd9333a001\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d248513fab87138bba2617b3c8137aaf014bcb4b404ff0ce03fc0c4eaa4aa74e\",\"dweb:/ipfs/QmeHNtJW5BVzEGDf3R7n8B4QNTpEUypjhVD98jBQ2Qpqcq\"]},\"src/core/TrustManagerExternalAttesterList.sol\":{\"keccak256\":\"0x02234dafb9c88de12091ecf187db1f762ba16b13520118be5c0a4153b79eab18\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f6b5f68415f31bdc8139366465199aacd0b30ca7550a2d1040e23fa89ceb2cd0\",\"dweb:/ipfs/QmVgNUkDRRMC6bLJFyymi6Wt6kwyysZDhPvZRUG3TvkHQb\"]},\"src/external/IExternalResolver.sol\":{\"keccak256\":\"0x258211aa342cdcde51952e0f523136b71d320a2208a7873b03d0c6c210776d5f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3406f08574205e786e228c0126d06d78ffb3d8724efa6344a18675eef61e9077\",\"dweb:/ipfs/QmZTZEY5eWmBq6ho6F75UGJ7VYuh2JwJiuQfUXGPrJD7JK\"]},\"src/external/IExternalSchemaValidator.sol\":{\"keccak256\":\"0xeaefb6118769085ca0de5b3048e5b4a8f860f99d4361008b4220195f603e4bd2\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d8a12afbc6a3a453d5810b67d775d9cb24bc52d1fc2843625910576285257526\",\"dweb:/ipfs/QmXDcULeqy7VSXitbyrYcr32Bt7msuv7krG7g5u1nuCJx2\"]},\"src/interfaces/IERC7484.sol\":{\"keccak256\":\"0xaffbc0cff08e0bd99e1d3d338829ee7b7a1fed9cb25fc949b21c150111a9084a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7860e358c9dc537250107b07821ebc5eb7fcf4b014a67100ca15957c842fca2\",\"dweb:/ipfs/QmSWjcQewHnTJDCdDdMWYBfc6tgkcX9DmkDUwsg8xNqMCF\"]},\"src/lib/AttestationLib.sol\":{\"keccak256\":\"0x10ec6b63b3a8b0863445d3b450c68e6f49929834eee0d87687e39370c9cdf7a8\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3d8fe6e24363c50143314048ece64704d701cfda0cdb491b82c76a45fcfe5f42\",\"dweb:/ipfs/QmNkG8P2FWe1iVHcbLBvtZmifEAMnJksRKttEtfGGm8AEE\"]},\"src/lib/Helpers.sol\":{\"keccak256\":\"0x7bd10d203db343b4e5ae416a24a1380ab9de2e729b83694c9a76a6f4c365be22\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d5f74fa5b6c7d8cc9ec7780b143d2d4057e2c18b5bdeed17187fd35b31192bd1\",\"dweb:/ipfs/QmPJQLXB7t1KyyCB54imUXGzBhCRKV1aLubiNiD3deFXAB\"]},\"src/lib/ModuleDeploymentLib.sol\":{\"keccak256\":\"0x835b2a14e5a5afb37c44a2c28631a00c1de0e179dc76331ec0941aeb5819c2fe\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://df0eccc2feaf225f19a8e6ff47b759ccc01343f39c492675a55760580e28c1e8\",\"dweb:/ipfs/QmXv2Fa82SZfsN9qfFCYYD774Ho7Hfc6v6wtmDFfQN4U5L\"]},\"src/lib/ModuleTypeLib.sol\":{\"keccak256\":\"0x41f7165818e8316f1925a478e03745948beee02ac61b818f718987aaf7482a15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0fd85099ae89e521e99a0ef9b55ec752021327d3041e0f3c22cb4f65e62af2fb\",\"dweb:/ipfs/QmR4tdbb17bJZceRRbrck9GkkCgzThdTeqkv5Yf7u6WLe1\"]},\"src/lib/StubLib.sol\":{\"keccak256\":\"0xf172214e19da44b42b9db3dfd70b98a5bf6e1d5c949ddcf3472bf6564dd9fdd7\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://37250139d5e0ae9f7c2f01cb751c52bf9807dd3e0b9ce104828879fcbbd40b79\",\"dweb:/ipfs/QmawFtrAQQbH7cssFigzybaMWfZ8we26TMAPFz8dtR2D7X\"]},\"src/lib/TrustLib.sol\":{\"keccak256\":\"0xb2edae3fdf48dd665c7c59b7882dd3d3269a5fd667212877e7669b721f9755d1\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e2e8b76ff9403e7a7cdb332377eae4086d95ea0c2ac7bf6b89480c3282719b24\",\"dweb:/ipfs/QmXMNLwYuRPViaMzGRsFVhQobiJwGnm4EqXqxFM2LHMEWb\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.24+commit.e11b9ed9" },
    "language": "Solidity",
    "output": {
      "abi": [
        { "inputs": [], "type": "error", "name": "AccessDenied" },
        { "inputs": [], "type": "error", "name": "AlreadyAttested" },
        {
          "inputs": [
            { "internalType": "address", "name": "module", "type": "address" }
          ],
          "type": "error",
          "name": "AlreadyRegistered"
        },
        { "inputs": [], "type": "error", "name": "AlreadyRevoked" },
        { "inputs": [], "type": "error", "name": "AttestationNotFound" },
        { "inputs": [], "type": "error", "name": "DifferentResolvers" },
        {
          "inputs": [],
          "type": "error",
          "name": "ExternalError_ModuleRegistration"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExternalError_ResolveAttestation"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExternalError_ResolveRevocation"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExternalError_SchemaValidation"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "factory", "type": "address" }
          ],
          "type": "error",
          "name": "FactoryCallFailed"
        },
        { "inputs": [], "type": "error", "name": "InsufficientAttestations" },
        { "inputs": [], "type": "error", "name": "InvalidAddress" },
        { "inputs": [], "type": "error", "name": "InvalidAttestation" },
        { "inputs": [], "type": "error", "name": "InvalidDeployment" },
        { "inputs": [], "type": "error", "name": "InvalidExpirationTime" },
        { "inputs": [], "type": "error", "name": "InvalidModuleType" },
        { "inputs": [], "type": "error", "name": "InvalidModuleTypes" },
        {
          "inputs": [
            {
              "internalType": "contract IExternalResolver",
              "name": "resolver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InvalidResolver"
        },
        {
          "inputs": [
            { "internalType": "ResolverUID", "name": "uid", "type": "bytes32" }
          ],
          "type": "error",
          "name": "InvalidResolverUID"
        },
        { "inputs": [], "type": "error", "name": "InvalidSalt" },
        { "inputs": [], "type": "error", "name": "InvalidSchema" },
        {
          "inputs": [
            {
              "internalType": "contract IExternalSchemaValidator",
              "name": "validator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "InvalidSchemaValidator"
        },
        { "inputs": [], "type": "error", "name": "InvalidSignature" },
        { "inputs": [], "type": "error", "name": "InvalidThreshold" },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidTrustedAttesterInput"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "moduleAddress",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ModuleAddressIsNotContract"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "module", "type": "address" }
          ],
          "type": "error",
          "name": "ModuleNotFoundInRegistry"
        },
        { "inputs": [], "type": "error", "name": "NoTrustedAttestersFound" },
        { "inputs": [], "type": "error", "name": "ResolverAlreadyExists" },
        {
          "inputs": [
            { "internalType": "address", "name": "attester", "type": "address" }
          ],
          "type": "error",
          "name": "RevokedAttestation"
        },
        {
          "inputs": [
            { "internalType": "SchemaUID", "name": "uid", "type": "bytes32" }
          ],
          "type": "error",
          "name": "SchemaAlreadyExists"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "moduleAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "attester",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "SchemaUID",
              "name": "schemaUID",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "AttestationDataRef",
              "name": "sstore2Pointer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Attested",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ModuleRegistration",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "ResolverUID",
              "name": "uid",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "resolver",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewResolver",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "ResolverUID",
              "name": "uid",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "NewResolverOwner",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "smartAccount",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "NewTrustedAttesters",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IExternalResolver",
              "name": "resolver",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ResolverRevocationError",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "moduleAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "revoker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "SchemaUID",
              "name": "schema",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Revoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "SchemaUID",
              "name": "uid",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "registerer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SchemaRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "SchemaUID",
              "name": "schemaUID",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "attester",
              "type": "address"
            },
            {
              "internalType": "struct AttestationRequest[]",
              "name": "requests",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint48",
                  "name": "expirationTime",
                  "type": "uint48"
                },
                { "internalType": "bytes", "name": "data", "type": "bytes" },
                {
                  "internalType": "ModuleType[]",
                  "name": "moduleTypes",
                  "type": "uint256[]"
                }
              ]
            },
            { "internalType": "bytes", "name": "signature", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "attest"
        },
        {
          "inputs": [
            {
              "internalType": "SchemaUID",
              "name": "schemaUID",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "attester",
              "type": "address"
            },
            {
              "internalType": "struct AttestationRequest",
              "name": "request",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint48",
                  "name": "expirationTime",
                  "type": "uint48"
                },
                { "internalType": "bytes", "name": "data", "type": "bytes" },
                {
                  "internalType": "ModuleType[]",
                  "name": "moduleTypes",
                  "type": "uint256[]"
                }
              ]
            },
            { "internalType": "bytes", "name": "signature", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "attest"
        },
        {
          "inputs": [
            {
              "internalType": "SchemaUID",
              "name": "schemaUID",
              "type": "bytes32"
            },
            {
              "internalType": "struct AttestationRequest",
              "name": "request",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint48",
                  "name": "expirationTime",
                  "type": "uint48"
                },
                { "internalType": "bytes", "name": "data", "type": "bytes" },
                {
                  "internalType": "ModuleType[]",
                  "name": "moduleTypes",
                  "type": "uint256[]"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "attest"
        },
        {
          "inputs": [
            {
              "internalType": "SchemaUID",
              "name": "schemaUID",
              "type": "bytes32"
            },
            {
              "internalType": "struct AttestationRequest[]",
              "name": "requests",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint48",
                  "name": "expirationTime",
                  "type": "uint48"
                },
                { "internalType": "bytes", "name": "data", "type": "bytes" },
                {
                  "internalType": "ModuleType[]",
                  "name": "moduleTypes",
                  "type": "uint256[]"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "attest"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "attester", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "attesterNonce",
          "outputs": [
            { "internalType": "uint256", "name": "nonce", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "salt", "type": "bytes32" },
            { "internalType": "bytes", "name": "initCode", "type": "bytes" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calcModuleAddress",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "module", "type": "address" },
            {
              "internalType": "address[]",
              "name": "attesters",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "check"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "module", "type": "address" },
            {
              "internalType": "ModuleType",
              "name": "moduleType",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "attesters",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "check"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "module", "type": "address" },
            {
              "internalType": "ModuleType",
              "name": "moduleType",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "check"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "module", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "check"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "smartAccount",
              "type": "address"
            },
            { "internalType": "address", "name": "module", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkForAccount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "smartAccount",
              "type": "address"
            },
            { "internalType": "address", "name": "module", "type": "address" },
            {
              "internalType": "ModuleType",
              "name": "moduleType",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkForAccount"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "salt", "type": "bytes32" },
            {
              "internalType": "ResolverUID",
              "name": "resolverUID",
              "type": "bytes32"
            },
            { "internalType": "bytes", "name": "initCode", "type": "bytes" },
            { "internalType": "bytes", "name": "metadata", "type": "bytes" },
            {
              "internalType": "bytes",
              "name": "resolverContext",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "deployModule",
          "outputs": [
            {
              "internalType": "address",
              "name": "moduleAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "factory", "type": "address" },
            {
              "internalType": "bytes",
              "name": "callOnFactory",
              "type": "bytes"
            },
            { "internalType": "bytes", "name": "metadata", "type": "bytes" },
            {
              "internalType": "ResolverUID",
              "name": "resolverUID",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "resolverContext",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "deployViaFactory",
          "outputs": [
            {
              "internalType": "address",
              "name": "moduleAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eip712Domain",
          "outputs": [
            { "internalType": "bytes1", "name": "fields", "type": "bytes1" },
            { "internalType": "string", "name": "name", "type": "string" },
            { "internalType": "string", "name": "version", "type": "string" },
            { "internalType": "uint256", "name": "chainId", "type": "uint256" },
            {
              "internalType": "address",
              "name": "verifyingContract",
              "type": "address"
            },
            { "internalType": "bytes32", "name": "salt", "type": "bytes32" },
            {
              "internalType": "uint256[]",
              "name": "extensions",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "module", "type": "address" },
            { "internalType": "address", "name": "attester", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "findAttestation",
          "outputs": [
            {
              "internalType": "struct AttestationRecord",
              "name": "attestation",
              "type": "tuple",
              "components": [
                { "internalType": "uint48", "name": "time", "type": "uint48" },
                {
                  "internalType": "uint48",
                  "name": "expirationTime",
                  "type": "uint48"
                },
                {
                  "internalType": "uint48",
                  "name": "revocationTime",
                  "type": "uint48"
                },
                {
                  "internalType": "PackedModuleTypes",
                  "name": "moduleTypes",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "AttestationDataRef",
                  "name": "dataPointer",
                  "type": "address"
                },
                {
                  "internalType": "SchemaUID",
                  "name": "schemaUID",
                  "type": "bytes32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "module", "type": "address" },
            {
              "internalType": "address[]",
              "name": "attesters",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "findAttestations",
          "outputs": [
            {
              "internalType": "struct AttestationRecord[]",
              "name": "attestations",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint48", "name": "time", "type": "uint48" },
                {
                  "internalType": "uint48",
                  "name": "expirationTime",
                  "type": "uint48"
                },
                {
                  "internalType": "uint48",
                  "name": "revocationTime",
                  "type": "uint48"
                },
                {
                  "internalType": "PackedModuleTypes",
                  "name": "moduleTypes",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "AttestationDataRef",
                  "name": "dataPointer",
                  "type": "address"
                },
                {
                  "internalType": "SchemaUID",
                  "name": "schemaUID",
                  "type": "bytes32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "moduleAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "findModule",
          "outputs": [
            {
              "internalType": "struct ModuleRecord",
              "name": "moduleRecord",
              "type": "tuple",
              "components": [
                {
                  "internalType": "ResolverUID",
                  "name": "resolverUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                { "internalType": "bytes", "name": "metadata", "type": "bytes" }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "ResolverUID", "name": "uid", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "findResolver",
          "outputs": [
            {
              "internalType": "struct ResolverRecord",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IExternalResolver",
                  "name": "resolver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "resolverOwner",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "SchemaUID", "name": "uid", "type": "bytes32" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "findSchema",
          "outputs": [
            {
              "internalType": "struct SchemaRecord",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint48",
                  "name": "registeredAt",
                  "type": "uint48"
                },
                {
                  "internalType": "contract IExternalSchemaValidator",
                  "name": "validator",
                  "type": "address"
                },
                { "internalType": "string", "name": "schema", "type": "string" }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "smartAccount",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "findTrustedAttesters",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "attesters",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct AttestationRequest",
              "name": "request",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint48",
                  "name": "expirationTime",
                  "type": "uint48"
                },
                { "internalType": "bytes", "name": "data", "type": "bytes" },
                {
                  "internalType": "ModuleType[]",
                  "name": "moduleTypes",
                  "type": "uint256[]"
                }
              ]
            },
            { "internalType": "address", "name": "attester", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDigest",
          "outputs": [
            { "internalType": "bytes32", "name": "digest", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct RevocationRequest[]",
              "name": "requests",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                }
              ]
            },
            { "internalType": "address", "name": "attester", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDigest",
          "outputs": [
            { "internalType": "bytes32", "name": "digest", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct RevocationRequest",
              "name": "request",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                }
              ]
            },
            { "internalType": "address", "name": "attester", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDigest",
          "outputs": [
            { "internalType": "bytes32", "name": "digest", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct AttestationRequest[]",
              "name": "requests",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint48",
                  "name": "expirationTime",
                  "type": "uint48"
                },
                { "internalType": "bytes", "name": "data", "type": "bytes" },
                {
                  "internalType": "ModuleType[]",
                  "name": "moduleTypes",
                  "type": "uint256[]"
                }
              ]
            },
            { "internalType": "address", "name": "attester", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDigest",
          "outputs": [
            { "internalType": "bytes32", "name": "digest", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "ResolverUID",
              "name": "resolverUID",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "moduleAddress",
              "type": "address"
            },
            { "internalType": "bytes", "name": "metadata", "type": "bytes" },
            {
              "internalType": "bytes",
              "name": "resolverContext",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerModule"
        },
        {
          "inputs": [
            {
              "internalType": "contract IExternalResolver",
              "name": "resolver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerResolver",
          "outputs": [
            { "internalType": "ResolverUID", "name": "uid", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            { "internalType": "string", "name": "schema", "type": "string" },
            {
              "internalType": "contract IExternalSchemaValidator",
              "name": "validator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerSchema",
          "outputs": [
            { "internalType": "SchemaUID", "name": "uid", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct RevocationRequest[]",
              "name": "requests",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revoke"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "attester",
              "type": "address"
            },
            {
              "internalType": "struct RevocationRequest[]",
              "name": "requests",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                }
              ]
            },
            { "internalType": "bytes", "name": "signature", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revoke"
        },
        {
          "inputs": [
            {
              "internalType": "struct RevocationRequest",
              "name": "request",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revoke"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "attester",
              "type": "address"
            },
            {
              "internalType": "struct RevocationRequest",
              "name": "request",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "moduleAddress",
                  "type": "address"
                }
              ]
            },
            { "internalType": "bytes", "name": "signature", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revoke"
        },
        {
          "inputs": [
            { "internalType": "ResolverUID", "name": "uid", "type": "bytes32" },
            {
              "internalType": "contract IExternalResolver",
              "name": "resolver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setResolver"
        },
        {
          "inputs": [
            { "internalType": "ResolverUID", "name": "uid", "type": "bytes32" },
            { "internalType": "address", "name": "newOwner", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferResolverOwnership"
        },
        {
          "inputs": [
            { "internalType": "uint8", "name": "threshold", "type": "uint8" },
            {
              "internalType": "address[]",
              "name": "attesters",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "trustAttesters"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "attest(bytes32,(address,uint48,bytes,uint256[]))": {
            "details": "This function will revert if the same module is attested twice by the same attester.      If you want to re-attest, you have to revoke your attestation first, and then attest again.",
            "params": {
              "request": "a single AttestationRequest",
              "schemaUID": "The SchemaUID of the schema the attestation is based on."
            }
          },
          "attest(bytes32,(address,uint48,bytes,uint256[])[])": {
            "details": "This function will revert if the same module is attested twice by the same attester.      If you want to re-attest, you have to revoke your attestation first, and then attest again.",
            "params": {
              "requests": "An array of AttestationRequest",
              "schemaUID": "The SchemaUID of the schema the attestation is based on."
            }
          },
          "attest(bytes32,address,(address,uint48,bytes,uint256[]),bytes)": {
            "details": "This function will revert if the same module is attested twice by the same attester.      If you want to re-attest, you have to revoke your attestation first, and then attest again.",
            "params": {
              "attester": "The address of the attester",
              "request": "An AttestationRequest",
              "schemaUID": "The SchemaUID of the schema the attestation is based on.",
              "signature": "The signature of the attester. ECDSA or ERC1271"
            }
          },
          "attest(bytes32,address,(address,uint48,bytes,uint256[])[],bytes)": {
            "details": "This function will revert if the same module is attested twice by the same attester.      If you want to re-attest, you have to revoke your attestation first, and then attest again.",
            "params": {
              "attester": "The address of the attester",
              "requests": "An array of AttestationRequest",
              "schemaUID": "The SchemaUID of the schema the attestation is based on.",
              "signature": "The signature of the attester. ECDSA or ERC1271"
            }
          },
          "calcModuleAddress(bytes32,bytes)": {
            "params": { "initCode": "module initcode", "salt": "CREATE2 salt" },
            "returns": {
              "_0": "moduleAddress counterfactual address of the module deployment"
            }
          },
          "deployModule(bytes32,bytes32,bytes,bytes,bytes)": {
            "params": {
              "initCode": "The initCode to be used in the `CREATE2` factory",
              "metadata": "The metadata to be stored on the registry.            This field is optional, and might be used by the module developer to store additional            information about the module or facilitate business logic with the Resolver stub",
              "resolverContext": "bytes that will be passed to the resolver contract",
              "resolverUID": "The resolverUID to be used in the `CREATE2` factory",
              "salt": "The salt to be used in the `CREATE2` factory. This adheres to Pr000xy/Create2Factory.sol salt formatting.             The salt's first bytes20 should be the address of the sender             or bytes20(0) to bypass the check (this will lose replay protection)"
            }
          },
          "deployViaFactory(address,bytes,bytes,bytes32,bytes)": {
            "details": "Registry can use other factories to deploy the module.Note that this function will call the external factory via the FactoryTrampoline contract.           Factory MUST not assume that msg.sender == registryThis function is used to deploy and register a module using a factory contract.           Since one of the parameters of this function is a unique resolverUID and any           registered module address can only be registered once,           using this function is of risk for a frontrun attack"
          },
          "eip712Domain()": {
            "details": "See: https://eips.ethereum.org/EIPS/eip-5267"
          },
          "findModule(address)": {
            "params": { "moduleAddress": "The address of the module" }
          },
          "findResolver(bytes32)": {
            "params": { "uid": "The UID of the resolver." }
          },
          "findTrustedAttesters(address)": {
            "params": { "smartAccount": "The address of the Smart Account" }
          },
          "registerModule(bytes32,address,bytes,bytes)": {
            "details": "This function is used to deploy and register an already deployed module.           Since one of the parameters of this function is a unique resolverUID and any           registered module address can only be registered once,           using this function is of risk for a frontrun attackthe sender address of this registration is set to address(0) since anyone can invoke this function",
            "params": {
              "metadata": "The metadata to be stored on the registry.            This field is optional, and might be used by the module developer to store additional            information about the module or facilitate business logic with the Resolver stub",
              "moduleAddress": "The address of the module to be registered",
              "resolverContext": "bytes that will be passed to the resolver contract",
              "resolverUID": "The resolverUID to be used for the module"
            }
          },
          "registerResolver(address)": {
            "params": { "resolver": "external resolver contract" },
            "returns": { "uid": "ResolverUID of the registered resolver" }
          },
          "registerSchema(string,address)": {
            "params": {
              "schema": "ABI schema used to encode attestations that are made with this schema",
              "validator": "(optional) external schema validator that will be used to validate attestations.                  use address(0), if you don't need an external validator"
            },
            "returns": { "uid": "SchemaUID of the registered schema" }
          },
          "revoke((address))": {
            "details": "this function will revert if the attestation is not foundthis function will revert if the attestation is already revoked",
            "params": { "request": "single RevocationRequest" }
          },
          "revoke((address)[])": {
            "details": "this function will revert if the attestation is not foundthis function will revert if the attestation is already revoked",
            "params": { "requests": "the RevocationRequests" }
          },
          "revoke(address,(address),bytes)": {
            "params": {
              "attester": "the signer / revoker",
              "request": "single RevocationRequest",
              "signature": "ECDSA or ERC1271 signature"
            }
          },
          "revoke(address,(address)[],bytes)": {
            "details": "if you want to revoke multiple attestations, but from different attesters, call this function multiple times",
            "params": {
              "attester": "the signer / revoker",
              "requests": "array of RevocationRequests",
              "signature": "ECDSA or ERC1271 signature"
            }
          },
          "setResolver(bytes32,address)": {
            "params": {
              "resolver": "The new resolver implementation address.",
              "uid": "The UID of the resolver."
            }
          },
          "transferResolverOwnership(bytes32,address)": {
            "params": {
              "newOwner": "The address of the new owner",
              "uid": "The UID of the resolver to transfer ownership for"
            }
          },
          "trustAttesters(uint8,address[])": {
            "details": "this function reverts, if address(0), or duplicates are provided in attesters[]",
            "params": {
              "attesters": "The addresses of the attesters to be trusted.",
              "threshold": "The minimum number of attestations required for a module                  to be considered secure."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "attest(bytes32,(address,uint48,bytes,uint256[]))": {
            "notice": "Allows `msg.sender` to attest to multiple modules' security status. The `AttestationRequest.Data` provided should match the attestation schema defined by the Schema corresponding to the SchemaUID"
          },
          "attest(bytes32,(address,uint48,bytes,uint256[])[])": {
            "notice": "Allows `msg.sender` to attest to multiple modules' security status. The `AttestationRequest.Data` provided should match the attestation schema defined by the Schema corresponding to the SchemaUID"
          },
          "attest(bytes32,address,(address,uint48,bytes,uint256[]),bytes)": {
            "notice": "Allows attester to attest by signing an `AttestationRequest` (`ECDSA` or `ERC1271`) The `AttestationRequest.Data` provided should match the attestation schema defined by the Schema corresponding to the SchemaUID"
          },
          "attest(bytes32,address,(address,uint48,bytes,uint256[])[],bytes)": {
            "notice": "Allows attester to attest by signing an `AttestationRequest` (`ECDSA` or `ERC1271`) The `AttestationRequest.Data` provided should match the attestation schema defined by the Schema corresponding to the SchemaUID"
          },
          "calcModuleAddress(bytes32,bytes)": {
            "notice": "in conjunction with the deployModule() function, this function let's you predict the address of a CREATE2 module deployment"
          },
          "deployModule(bytes32,bytes32,bytes,bytes,bytes)": {
            "notice": "Module Developers can deploy their module Bytecode directly via the registry. This registry implements a `CREATE2` factory, that allows module developers to register and deploy module bytecode"
          },
          "deployViaFactory(address,bytes,bytes,bytes32,bytes)": {
            "notice": "In order to make the integration into existing business logics possible, the Registry is able to utilize external factories that can be utilized to deploy the modules."
          },
          "findAttestation(address,address)": {
            "notice": "Getter function to get AttestationRequest made by one attester"
          },
          "findAttestations(address,address[])": {
            "notice": "Getter function to get AttestationRequest made by multiple attesters"
          },
          "findModule(address)": {
            "notice": "Getter function to get the stored ModuleRecord for a specific module address."
          },
          "findResolver(bytes32)": {
            "notice": "Getter function to get the ResolverRecord of a registered resolver"
          },
          "findSchema(bytes32)": {
            "notice": "Getter function to retrieve SchemaRecord"
          },
          "findTrustedAttesters(address)": {
            "notice": "Get trusted attester for a specific Smart Account"
          },
          "registerModule(bytes32,address,bytes,bytes)": {
            "notice": "Already deployed module addresses can be registered on the registry"
          },
          "registerResolver(address)": {
            "notice": "Allows Marketplace Agents to register external resolvers."
          },
          "registerSchema(string,address)": {
            "notice": "Register Schema and (optional) external `IExternalSchemaValidator` A Schema describe the structure of the data of attestations every attestation made on this registry, will reference a SchemaUID to  make it possible to decode attestation data in human readable form overwriting a schema is not allowed, and will revert"
          },
          "revoke((address))": {
            "notice": "Allows `msg.sender` to revoke an attestation made by the same `msg.sender`"
          },
          "revoke((address)[])": {
            "notice": "Allows msg.sender to revoke multiple attestation made by the same msg.sender"
          },
          "revoke(address,(address),bytes)": {
            "notice": "Allows attester to revoke an attestation by signing an `RevocationRequest` (`ECDSA` or `ERC1271`)"
          },
          "revoke(address,(address)[],bytes)": {
            "notice": "Allows attester to revoke an attestation by signing an `RevocationRequest` (`ECDSA` or `ERC1271`)"
          },
          "setResolver(bytes32,address)": {
            "notice": "Entities that previously registered an external resolver, may update the implementation address."
          },
          "transferResolverOwnership(bytes32,address)": {
            "notice": "Transfer ownership of resolverUID to a new address"
          },
          "trustAttesters(uint8,address[])": {
            "notice": "Allows Smart Accounts - the end users of the registry - to appoint one or many attesters as trusted."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "account-abstraction-v0.6/=node_modules/account-abstraction-v0.6/contracts/",
        "account-abstraction/=node_modules/account-abstraction/contracts/",
        "ds-test/=node_modules/ds-test/src/",
        "erc4337-validation/=node_modules/@rhinestone/erc4337-validation/src/",
        "forge-std/=node_modules/forge-std/src/",
        "solady/=node_modules/solady/src/",
        "solmate/=node_modules/solmate/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/Registry.sol": "Registry" },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "node_modules/forge-std/src/interfaces/IERC165.sol": {
        "keccak256": "0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600",
        "urls": [
          "bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc",
          "dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT"
        ],
        "license": "MIT"
      },
      "node_modules/solady/src/utils/EIP712.sol": {
        "keccak256": "0xb5c4c8ac5368c9785b4e30314f4ad6f3ae13bdc21679007735681d13da797bec",
        "urls": [
          "bzz-raw://c4456a4eaa8748f802fd1188db6405d18c452eb7c0dde84a49b49a7f94b5970d",
          "dweb:/ipfs/QmZzsFn4VwvBFy2MJVJXvntCQsDRCXbRrSKKfXxXv9jYGM"
        ],
        "license": "MIT"
      },
      "node_modules/solady/src/utils/LibSort.sol": {
        "keccak256": "0xfa4028961ad53620a8e8e6e8d141c5f409c45d7ca4240aa39f2a48e3d817fbec",
        "urls": [
          "bzz-raw://284d332203cc8f6d6bcbc48b2021fb35b4adc2ebdd5482b8ce8b89f64b8897ba",
          "dweb:/ipfs/QmRptNWkfa6CGSGhPJ5qqN83qfXBst1WiEGU51i4y4AXVy"
        ],
        "license": "MIT"
      },
      "node_modules/solady/src/utils/SSTORE2.sol": {
        "keccak256": "0xc6641e3dbc885d6a3032f5c92ebc703c3c7c821c8c3c645b26c9bea298736276",
        "urls": [
          "bzz-raw://c7751ad70faf3d0a0412d4ec80397ca56edb97ffd319dd4589fa38b2549f1c2e",
          "dweb:/ipfs/QmVJztYdnsxTwFT5WWYvbjyi38aUQUZisL5qZsYW2jqDHV"
        ],
        "license": "MIT"
      },
      "node_modules/solady/src/utils/SignatureCheckerLib.sol": {
        "keccak256": "0x7a7acc59723ed291f24d9a2ed019109c8be69f32701f35f8a61dc7fff6652379",
        "urls": [
          "bzz-raw://7bab15a03dfca0567d7472933ee4e776fc21f9dfb6c4dbc06934fa75eceeff5e",
          "dweb:/ipfs/QmPUuKsRwpZXz15DpsoJMMPN9DtZiRvMfwjqJScxkppNsP"
        ],
        "license": "MIT"
      },
      "src/Common.sol": {
        "keccak256": "0x819a41a1fa49f93e2921aac38ed7cacc9d810dce18bbb02cc99eab7264a1f176",
        "urls": [
          "bzz-raw://0989a6aadf4f11155f15992ba743464ca38f113ec12c80ceacced5dc3fdc6935",
          "dweb:/ipfs/QmeiCsTzGjSbWnWEqq91YTuynm9gLWFRnTN2cLw8YitvTe"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/DataTypes.sol": {
        "keccak256": "0x17a21d96dbda1704f888f46565731cc676d5fd4d989ea6819a87a8fb0895c47b",
        "urls": [
          "bzz-raw://91c12e4dc5254821d3ac965369b40656242d90e098a6ecc1e721d6dcf61e64fc",
          "dweb:/ipfs/Qma78sqHvpP7AFj2gKAQe2z4Na3nxT5NRtaSuEJGezDyN8"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/IRegistry.sol": {
        "keccak256": "0xb03203d856c112b1e663615484f27b7597f0ef09b573a42eb68425683a386437",
        "urls": [
          "bzz-raw://ff723cd22c1c4f02c1be8ed6fe69531d99791cf49be95fc9429002edcec2d0f6",
          "dweb:/ipfs/QmXBuVzbS5v1TSpNo57LUgisM35KiYwQdhrKythwLmBxFQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/Registry.sol": {
        "keccak256": "0x04a514f7afbe44935726784e61188377c49f812373858ebae8d67983e3b9b0c6",
        "urls": [
          "bzz-raw://cbc52031e47f3a58be6ca63e1884a032896e0e3a96056919504f7a99cb152cf9",
          "dweb:/ipfs/QmT25Kjvn7GnjHJjFj3r4y372ucMdKhqd67JH2uwsMM7KQ"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/core/Attestation.sol": {
        "keccak256": "0x60184387856220ebc5df67f9fe7139d12a0f39a904d5612ad8149ad80ec0146a",
        "urls": [
          "bzz-raw://2002908b543d03320c1b2158b632e42acd5353c63e61417ee7627de0dc9a704b",
          "dweb:/ipfs/QmdyV9ZBxJyEizhkuutWngRPQzsvcbrRzu7EKFZ77Pyf4H"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/core/AttestationManager.sol": {
        "keccak256": "0xb6e5ab1c5b473550c9119d89085b7ed304cc5e0c33d66f3b22a1c3b9040eed9d",
        "urls": [
          "bzz-raw://efb6495c8246b834beb449c0d9f48e576c1a3603a09a684cb0e1cd0b1dc62990",
          "dweb:/ipfs/Qmcj4gqXefVZFf5TVoWT6KKH6DDqYv4SrA4N1XYnLrDNci"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/core/ModuleManager.sol": {
        "keccak256": "0xe95b55406347a1051a0fb636f0c520466bd54c1d0c5ad8546241fe0cfbf67169",
        "urls": [
          "bzz-raw://52843bb46c61acfad5ae5bce80b4508f1e851352371051d027675c7bc3744332",
          "dweb:/ipfs/QmdAuWEq2ogsrALuYnXsVbNYD6nwodN6GcLt4Jcv9PDZpS"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/core/ResolverManager.sol": {
        "keccak256": "0x62c56f2894817468894e66036e7e4693da1856baef1b70d7fa52723182e5de3c",
        "urls": [
          "bzz-raw://7999eb35bc4063fce696c15ef6e56115a648c5ecf6afd395679d61365ed1f2f7",
          "dweb:/ipfs/QmaoauDC8Rmi4z5NDpyYQuLHi3JtNZWTmk6CJ2rRanwSJi"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/core/SchemaManager.sol": {
        "keccak256": "0xf5f7fe4ea89cc88ea1cc68ca9ba765790fda7eb309fb05d5bf4387c13068231d",
        "urls": [
          "bzz-raw://419dc546ad4c27f754385815c51c78baa9653897c28335df73cda13db365acd3",
          "dweb:/ipfs/QmPCiUpNv9u2DbYL3Cc27Y1Bdc1RgZzHcsNiDLYHRGB4Mh"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/core/SignedAttestation.sol": {
        "keccak256": "0x1cdd47ad08862edb59a18aa6a3ef68f7e1ed5034573f26a2ad7e7406f4e49aa5",
        "urls": [
          "bzz-raw://3b105e932f5959d8a5709ae7eaa699da694683dd88ad3f2d5026a8854c4a8cc8",
          "dweb:/ipfs/QmSEGkJhdGppzFJ2au8hKQJE5hjooFiCkYhSXscUX1e6Y7"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/core/TrustManager.sol": {
        "keccak256": "0x7310e4d0cc27000c2bc9045fdd84046585c0832e4adbd88c37cfc4bd9333a001",
        "urls": [
          "bzz-raw://d248513fab87138bba2617b3c8137aaf014bcb4b404ff0ce03fc0c4eaa4aa74e",
          "dweb:/ipfs/QmeHNtJW5BVzEGDf3R7n8B4QNTpEUypjhVD98jBQ2Qpqcq"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/core/TrustManagerExternalAttesterList.sol": {
        "keccak256": "0x02234dafb9c88de12091ecf187db1f762ba16b13520118be5c0a4153b79eab18",
        "urls": [
          "bzz-raw://f6b5f68415f31bdc8139366465199aacd0b30ca7550a2d1040e23fa89ceb2cd0",
          "dweb:/ipfs/QmVgNUkDRRMC6bLJFyymi6Wt6kwyysZDhPvZRUG3TvkHQb"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/external/IExternalResolver.sol": {
        "keccak256": "0x258211aa342cdcde51952e0f523136b71d320a2208a7873b03d0c6c210776d5f",
        "urls": [
          "bzz-raw://3406f08574205e786e228c0126d06d78ffb3d8724efa6344a18675eef61e9077",
          "dweb:/ipfs/QmZTZEY5eWmBq6ho6F75UGJ7VYuh2JwJiuQfUXGPrJD7JK"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/external/IExternalSchemaValidator.sol": {
        "keccak256": "0xeaefb6118769085ca0de5b3048e5b4a8f860f99d4361008b4220195f603e4bd2",
        "urls": [
          "bzz-raw://d8a12afbc6a3a453d5810b67d775d9cb24bc52d1fc2843625910576285257526",
          "dweb:/ipfs/QmXDcULeqy7VSXitbyrYcr32Bt7msuv7krG7g5u1nuCJx2"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/interfaces/IERC7484.sol": {
        "keccak256": "0xaffbc0cff08e0bd99e1d3d338829ee7b7a1fed9cb25fc949b21c150111a9084a",
        "urls": [
          "bzz-raw://f7860e358c9dc537250107b07821ebc5eb7fcf4b014a67100ca15957c842fca2",
          "dweb:/ipfs/QmSWjcQewHnTJDCdDdMWYBfc6tgkcX9DmkDUwsg8xNqMCF"
        ],
        "license": "MIT"
      },
      "src/lib/AttestationLib.sol": {
        "keccak256": "0x10ec6b63b3a8b0863445d3b450c68e6f49929834eee0d87687e39370c9cdf7a8",
        "urls": [
          "bzz-raw://3d8fe6e24363c50143314048ece64704d701cfda0cdb491b82c76a45fcfe5f42",
          "dweb:/ipfs/QmNkG8P2FWe1iVHcbLBvtZmifEAMnJksRKttEtfGGm8AEE"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/lib/Helpers.sol": {
        "keccak256": "0x7bd10d203db343b4e5ae416a24a1380ab9de2e729b83694c9a76a6f4c365be22",
        "urls": [
          "bzz-raw://d5f74fa5b6c7d8cc9ec7780b143d2d4057e2c18b5bdeed17187fd35b31192bd1",
          "dweb:/ipfs/QmPJQLXB7t1KyyCB54imUXGzBhCRKV1aLubiNiD3deFXAB"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/lib/ModuleDeploymentLib.sol": {
        "keccak256": "0x835b2a14e5a5afb37c44a2c28631a00c1de0e179dc76331ec0941aeb5819c2fe",
        "urls": [
          "bzz-raw://df0eccc2feaf225f19a8e6ff47b759ccc01343f39c492675a55760580e28c1e8",
          "dweb:/ipfs/QmXv2Fa82SZfsN9qfFCYYD774Ho7Hfc6v6wtmDFfQN4U5L"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/lib/ModuleTypeLib.sol": {
        "keccak256": "0x41f7165818e8316f1925a478e03745948beee02ac61b818f718987aaf7482a15",
        "urls": [
          "bzz-raw://0fd85099ae89e521e99a0ef9b55ec752021327d3041e0f3c22cb4f65e62af2fb",
          "dweb:/ipfs/QmR4tdbb17bJZceRRbrck9GkkCgzThdTeqkv5Yf7u6WLe1"
        ],
        "license": "MIT"
      },
      "src/lib/StubLib.sol": {
        "keccak256": "0xf172214e19da44b42b9db3dfd70b98a5bf6e1d5c949ddcf3472bf6564dd9fdd7",
        "urls": [
          "bzz-raw://37250139d5e0ae9f7c2f01cb751c52bf9807dd3e0b9ce104828879fcbbd40b79",
          "dweb:/ipfs/QmawFtrAQQbH7cssFigzybaMWfZ8we26TMAPFz8dtR2D7X"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/lib/TrustLib.sol": {
        "keccak256": "0xb2edae3fdf48dd665c7c59b7882dd3d3269a5fd667212877e7669b721f9755d1",
        "urls": [
          "bzz-raw://e2e8b76ff9403e7a7cdb332377eae4086d95ea0c2ac7bf6b89480c3282719b24",
          "dweb:/ipfs/QmXMNLwYuRPViaMzGRsFVhQobiJwGnm4EqXqxFM2LHMEWb"
        ],
        "license": "AGPL-3.0-only"
      }
    },
    "version": 1
  },
  "id": 62
}
